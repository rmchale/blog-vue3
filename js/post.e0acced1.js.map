{"version":3,"sources":["webpack:///./node_modules/markdown-it/lib/common/utils.js","webpack:///./node_modules/markdown-it-emoji/lib/render.js","webpack:///./node_modules/markdown-it/lib/rules_block/heading.js","webpack:///./node_modules/markdown-it/lib/index.js","webpack:///./node_modules/markdown-it/lib/token.js","webpack:///./node_modules/markdown-it/lib/rules_inline/state_inline.js","webpack:///./node_modules/core-js/modules/es.string.split.js","webpack:///./node_modules/core-js/internals/regexp-exec-abstract.js","webpack:///./node_modules/markdown-it/lib/rules_block/lheading.js","webpack:///./node_modules/markdown-it/lib/presets/zero.js","webpack:///./node_modules/markdown-it/lib/rules_inline/text_collapse.js","webpack:///./node_modules/markdown-it/lib/rules_inline/autolink.js","webpack:///./node_modules/markdown-it/lib/rules_core/block.js","webpack:///./node_modules/markdown-it-emoji/index.js","webpack:///./src/views/Post.vue","webpack:///./src/views/Post.vue?359e","webpack:///./src/views/Post.vue?0a22","webpack:///./node_modules/markdown-it-emoji/lib/normalize_opts.js","webpack:///./node_modules/markdown-it/lib/rules_inline/newline.js","webpack:///./node_modules/markdown-it/lib/presets/commonmark.js","webpack:///./node_modules/mdurl/format.js","webpack:///./node_modules/markdown-it/lib/rules_block/paragraph.js","webpack:///./node_modules/core-js/internals/is-regexp.js","webpack:///./node_modules/markdown-it/lib/ruler.js","webpack:///./node_modules/markdown-it-emoji/lib/replace.js","webpack:///./node_modules/markdown-it/lib/rules_inline/backticks.js","webpack:///./node_modules/markdown-it/lib/rules_block/list.js","webpack:///./node_modules/markdown-it/lib/rules_core/normalize.js","webpack:///./node_modules/markdown-it/lib/parser_inline.js","webpack:///./node_modules/uc.micro/categories/Z/regex.js","webpack:///./node_modules/markdown-it/lib/helpers/index.js","webpack:///./node_modules/markdown-it/lib/common/html_re.js","webpack:///./node_modules/markdown-it/lib/rules_inline/entity.js","webpack:///./node_modules/markdown-it/lib/rules_block/html_block.js","webpack:///(webpack)/buildin/module.js","webpack:///./node_modules/markdown-it/lib/rules_inline/escape.js","webpack:///./node_modules/uc.micro/categories/Cf/regex.js","webpack:///./node_modules/markdown-it/lib/rules_core/state_core.js","webpack:///./node_modules/markdown-it/lib/parser_block.js","webpack:///./node_modules/uc.micro/categories/P/regex.js","webpack:///./node_modules/markdown-it/lib/renderer.js","webpack:///./node_modules/markdown-it/lib/helpers/parse_link_title.js","webpack:///./node_modules/core-js/modules/es.array.find.js","webpack:///./node_modules/markdown-it/lib/rules_block/table.js","webpack:///./node_modules/markdown-it/lib/rules_block/state_block.js","webpack:///./node_modules/markdown-it/lib/rules_inline/balance_pairs.js","webpack:///./node_modules/markdown-it/lib/presets/default.js","webpack:///./node_modules/core-js/internals/advance-string-index.js","webpack:///./node_modules/mdurl/decode.js","webpack:///./node_modules/markdown-it/lib/rules_inline/strikethrough.js","webpack:///./node_modules/core-js/internals/regexp-exec.js","webpack:///./node_modules/markdown-it/lib/rules_inline/image.js","webpack:///./node_modules/markdown-it/lib/rules_core/linkify.js","webpack:///./node_modules/markdown-it/lib/rules_block/code.js","webpack:///./node_modules/punycode/punycode.js","webpack:///./node_modules/core-js/internals/regexp-sticky-helpers.js","webpack:///./node_modules/markdown-it/lib/rules_core/inline.js","webpack:///./node_modules/markdown-it-emoji/bare.js","webpack:///./node_modules/uc.micro/categories/Cc/regex.js","webpack:///./node_modules/markdown-it/lib/parser_core.js","webpack:///./node_modules/markdown-it-emoji/lib/data/shortcuts.js","webpack:///./node_modules/core-js/modules/es.regexp.exec.js","webpack:///./node_modules/core-js/internals/regexp-flags.js","webpack:///./node_modules/markdown-it/lib/rules_core/smartquotes.js","webpack:///./node_modules/linkify-it/lib/re.js","webpack:///./node_modules/markdown-it/lib/rules_inline/text.js","webpack:///./node_modules/markdown-it/lib/rules_core/replacements.js","webpack:///./node_modules/markdown-it/lib/common/entities.js","webpack:///./node_modules/markdown-it/lib/rules_block/fence.js","webpack:///./node_modules/markdown-it/lib/rules_inline/html_inline.js","webpack:///./node_modules/mdurl/encode.js","webpack:///./node_modules/markdown-it/lib/rules_inline/emphasis.js","webpack:///./node_modules/uc.micro/properties/Any/regex.js","webpack:///./node_modules/markdown-it/lib/rules_inline/link.js","webpack:///./node_modules/markdown-it/index.js","webpack:///./node_modules/uc.micro/index.js","webpack:///./node_modules/markdown-it/lib/rules_block/reference.js","webpack:///./node_modules/core-js/internals/fix-regexp-well-known-symbol-logic.js","webpack:///./node_modules/mdurl/index.js","webpack:///./node_modules/mdurl/parse.js","webpack:///./node_modules/markdown-it/lib/helpers/parse_link_label.js","webpack:///./node_modules/markdown-it/lib/common/html_blocks.js","webpack:///./node_modules/markdown-it/lib/helpers/parse_link_destination.js","webpack:///./node_modules/markdown-it/lib/rules_block/blockquote.js","webpack:///./node_modules/linkify-it/index.js","webpack:///./node_modules/markdown-it/lib/rules_block/hr.js"],"names":["_class","obj","Object","prototype","toString","call","isString","_hasOwnProperty","hasOwnProperty","has","object","key","assign","sources","Array","slice","arguments","forEach","source","TypeError","keys","arrayReplaceAt","src","pos","newElements","concat","isValidEntityCode","c","fromCodePoint","surrogate1","surrogate2","String","fromCharCode","UNESCAPE_MD_RE","ENTITY_RE","UNESCAPE_ALL_RE","RegExp","DIGITAL_ENTITY_TEST_RE","entities","replaceEntityPattern","match","name","code","charCodeAt","test","toLowerCase","parseInt","unescapeMd","str","indexOf","replace","unescapeAll","escaped","entity","HTML_ESCAPE_TEST_RE","HTML_ESCAPE_REPLACE_RE","HTML_REPLACEMENTS","replaceUnsafeChar","ch","escapeHtml","REGEXP_ESCAPE_RE","escapeRE","isSpace","isWhiteSpace","UNICODE_PUNCT_RE","isPunctChar","isMdAsciiPunct","normalizeReference","trim","toUpperCase","exports","lib","mdurl","ucmicro","module","tokens","idx","content","state","startLine","endLine","silent","level","tmp","token","bMarks","tShift","max","eMarks","sCount","blkIndent","skipSpacesBack","skipCharsBack","line","push","markup","map","children","utils","helpers","Renderer","ParserCore","ParserBlock","ParserInline","LinkifyIt","punycode","config","default","zero","commonmark","BAD_PROTO_RE","GOOD_DATA_RE","validateLink","url","RECODE_HOSTNAME_FOR","normalizeLink","parsed","parse","hostname","protocol","toASCII","er","encode","format","normalizeLinkText","toUnicode","decode","defaultChars","MarkdownIt","presetName","options","this","inline","block","core","renderer","linkify","configure","set","presets","self","Error","components","rules","ruler","enableOnly","rules2","ruler2","enable","list","ignoreInvalid","result","isArray","chain","missed","filter","length","disable","use","plugin","args","apply","env","State","process","render","parseInline","inlineMode","renderInline","Token","type","tag","nesting","attrs","info","meta","hidden","attrIndex","i","len","attrPush","attrData","attrSet","value","attrGet","attrJoin","StateInline","md","outTokens","tokens_meta","posMax","pending","pendingLevel","cache","delimiters","_prev_delimiters","backticks","backticksScanned","pushPending","token_meta","pop","scanDelims","start","canSplitWord","lastChar","nextChar","count","can_open","can_close","isLastWhiteSpace","isLastPunctChar","isNextWhiteSpace","isNextPunctChar","left_flanking","right_flanking","marker","fixRegExpWellKnownSymbolLogic","isRegExp","anObject","requireObjectCoercible","speciesConstructor","advanceStringIndex","toLength","callRegExpExec","regexpExec","stickyHelpers","UNSUPPORTED_Y","arrayPush","min","Math","MAX_UINT32","SPLIT","nativeSplit","maybeCallNative","internalSplit","split","separator","limit","string","lim","undefined","lastIndex","lastLength","output","flags","ignoreCase","multiline","unicode","sticky","lastLastIndex","separatorCopy","index","O","splitter","regexp","res","done","rx","S","C","unicodeMatching","p","q","A","e","z","classof","R","exec","terminate","l","oldParentType","nextLine","terminatorRules","getRules","parentType","isEmpty","skipChars","skipSpaces","getLines","html","xhtmlOut","breaks","langPrefix","typographer","quotes","highlight","maxNesting","curr","last","EMAIL_RE","AUTOLINK_RE","fullUrl","emojies_defs","emojies_shortcuts","bare_emoji_plugin","defaults","defs","shortcuts","enabled","opts","class","title","style","VUE_APP_MAIN_BG_CSS_COLOR","VUE_APP_MAIN_TEXT_CSS_COLOR","postHtml","hasHistory","router","go","markDownIt","PatchMeta","props","section","id","setup","location","reload","postsIndex","find","get","markDownSource","data","window","history","quoteRE","emojies","reduce","acc","alias","names","sort","reverse","join","scanRE","replaceRE","pmax","slashes","auth","port","pathname","search","hash","lineMax","isObject","wellKnownSymbol","MATCH","it","Ruler","__rules__","__cache__","__find__","__compile__","chains","rule","alt","altName","fn","at","opt","before","beforeName","ruleName","splice","after","afterName","chainName","ucm","ZPCc","Z","P","Cc","splitTextToken","text","last_pos","nodes","offset","emoji_name","j","blockTokens","autolinkLevel","matchStart","matchEnd","openerLength","closerLength","skipBulletListMarker","skipOrderedListMarker","markTightParagraphs","contentStart","indent","indentAfterMarker","initial","isOrdered","itemLines","listLines","listTokIdx","markerCharCode","markerValue","oldListIndent","oldSCount","oldTShift","oldTight","posAfterMarker","prevEmptyEnd","isTerminatingParagraph","tight","listIndent","Number","substr","bsCount","tokenize","NEWLINES_RE","NULL_RE","_rules","_rules2","postProcess","skipToken","ok","end","parseLinkLabel","parseLinkDestination","parseLinkTitle","attr_name","unquoted","single_quoted","double_quoted","attr_value","attribute","open_tag","close_tag","comment","processing","declaration","cdata","HTML_TAG_RE","HTML_OPEN_CLOSE_TAG_RE","DIGITAL_RE","NAMED_RE","block_names","HTML_SEQUENCES","lineText","webpackPolyfill","deprecate","paths","defineProperty","enumerable","ESCAPED","StateCore","hasEmptyLines","skipEmptyLines","default_rules","code_inline","slf","renderAttrs","code_block","fence","highlighted","arr","tmpAttrs","tmpToken","langName","langAttrs","image","renderInlineAsText","renderToken","hardbreak","softbreak","html_block","html_inline","nextToken","needLf","lines","$","$find","addToUnscopables","FIND","SKIPS_HOLES","target","proto","forced","callbackfn","getLine","escapedSplit","isEscaped","lastPos","current","substring","columns","columnCount","aligns","t","tableLines","tbodyLines","firstCh","secondCh","shift","StateBlock","s","indent_found","ddIndent","from","begin","keepLastLF","lineIndent","first","queue","lineStart","processDelimiters","closerIdx","openerIdx","closer","opener","minOpenerIdx","newMinOpenerIdx","isOddMatch","lastJump","openersBottom","close","jump","open","charAt","decodeCache","getDecodeCache","exclude","seq","b1","b2","b3","b4","chr","componentChars","startDelim","endDelim","loneMarkers","scanned","regexpFlags","shared","nativeExec","nativeReplace","patchedExec","UPDATES_LAST_INDEX_WRONG","re1","re2","BROKEN_CARET","NPCG_INCLUDED","PATCH","reCopy","re","charsAdded","strCopy","input","global","label","labelEnd","labelStart","ref","href","oldPos","references","isLinkOpen","isLinkClose","currentToken","ln","htmlLinkLevel","urlText","links","pretest","schema","root","nodeType","freeGlobal","maxInt","base","tMin","tMax","skew","damp","initialBias","initialN","delimiter","regexPunycode","regexNonASCII","regexSeparators","errors","baseMinusTMin","floor","stringFromCharCode","error","RangeError","array","mapDomain","parts","labels","encoded","ucs2decode","extra","counter","ucs2encode","basicToDigit","codePoint","digitToBasic","digit","flag","adapt","delta","numPoints","firstTime","k","out","basic","oldi","w","baseMinusT","inputLength","n","bias","lastIndexOf","handledCPCount","basicLength","m","currentValue","handledCPCountPlusOne","qMinusT","fails","RE","f","tok","emoji_html","emoji_replace","normalize_opts","emoji","Core","angry","blush","broken_heart","confused","cry","frowning","heart","imp","innocent","joy","kissing","laughing","neutral_face","open_mouth","rage","smile","smiley","smiling_imp","sob","stuck_out_tongue","sunglasses","sweat","sweat_smile","unamused","wink","that","dotAll","QUOTE_TEST_RE","QUOTE_RE","APOSTROPHE","replaceAt","process_inlines","thisLevel","item","canOpen","canClose","isSingle","stack","openQuote","closeQuote","OUTER","single","blkIdx","src_Any","src_Cc","src_Z","src_P","src_ZPCc","src_ZCc","text_separators","src_pseudo_letter","src_ip4","src_auth","src_port","src_host_terminator","src_path","src_email_name","src_xn","src_domain_root","src_domain","src_host","tpl_host_fuzzy","tpl_host_no_ip_fuzzy","src_host_strict","tpl_host_fuzzy_strict","src_host_port_strict","tpl_host_port_fuzzy_strict","tpl_host_port_no_ip_fuzzy_strict","tpl_host_fuzzy_test","tpl_email_fuzzy","tpl_link_fuzzy","tpl_link_no_ip_fuzzy","isTerminatorChar","RARE_RE","SCOPED_ABBR_TEST_RE","SCOPED_ABBR_RE","SCOPED_ABBR","r","tm","replaceFn","replace_scoped","inlineTokens","inside_autolink","replace_rare","params","mem","haveEndMarker","isLetter","lc","encodeCache","getEncodeCache","keepEscaped","nextCode","encodeURIComponent","isStrong","parseReference","Any","Cf","_endLine","destEndPos","destEndLineNo","redefine","createNonEnumerableProperty","SPECIES","RegExpPrototype","REPLACE_SUPPORTS_NAMED_GROUPS","groups","a","REPLACE_KEEPS_$0","REPLACE","REGEXP_REPLACE_SUBSTITUTES_UNDEFINED_CAPTURE","SPLIT_WORKS_WITH_OVERWRITTEN_EXEC","originalExec","KEY","sham","SYMBOL","DELEGATES_TO_SYMBOL","DELEGATES_TO_EXEC","execCalled","constructor","nativeRegExpMethod","methods","nativeMethod","arg2","forceStringMethod","$exec","stringMethod","regexMethod","arg","Url","protocolPattern","portPattern","simplePathPattern","delims","unwise","autoEscape","nonHostChars","hostEndingChars","hostnameMaxLen","hostnamePartPattern","hostnamePartStart","hostlessProtocol","slashedProtocol","urlParse","slashesDenoteHost","u","lowerProto","hec","rest","simplePath","atSign","hostEnd","host","parseHost","ipv6Hostname","hostparts","part","newpart","validParts","notHost","bit","unshift","qm","disableNested","found","prevPos","adjustTab","lastLineEmpty","oldBMarks","oldBSCount","oldIndent","spaceAfterMarker","isOutdented","oldLineMax","isFunction","defaultOptions","fuzzyLink","fuzzyEmail","fuzzyIP","isOptionsObj","defaultSchemas","validate","tail","http","no_http","mailto","tlds_2ch_src_re","tlds_default","resetScanCache","__index__","__text_cache__","createValidator","createNormalizer","normalize","compile","__opts__","tlds","__tlds__","untpl","tpl","src_tlds","onCompile","__tlds_replaced__","email_fuzzy","link_fuzzy","link_no_ip_fuzzy","host_fuzzy_test","aliases","schemaError","val","__compiled__","__schemas__","compiled","link","slist","schema_test","schema_search","Match","__last_index__","__schema__","raw","createMatch","schemas","add","definition","ml","me","next","tld_pos","at_pos","testSchemaAt","keepOld","el","cnt"],"mappings":"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","file":"js/post.e0acced1.js","sourcesContent":["// Utilities\n//\n'use strict';\n\n\nfunction _class(obj) { return Object.prototype.toString.call(obj); }\n\nfunction isString(obj) { return _class(obj) === '[object String]'; }\n\nvar _hasOwnProperty = Object.prototype.hasOwnProperty;\n\nfunction has(object, key) {\n  return _hasOwnProperty.call(object, key);\n}\n\n// Merge objects\n//\nfunction assign(obj /*from1, from2, from3, ...*/) {\n  var sources = Array.prototype.slice.call(arguments, 1);\n\n  sources.forEach(function (source) {\n    if (!source) { return; }\n\n    if (typeof source !== 'object') {\n      throw new TypeError(source + 'must be object');\n    }\n\n    Object.keys(source).forEach(function (key) {\n      obj[key] = source[key];\n    });\n  });\n\n  return obj;\n}\n\n// Remove element from array and put another array at those position.\n// Useful for some operations with tokens\nfunction arrayReplaceAt(src, pos, newElements) {\n  return [].concat(src.slice(0, pos), newElements, src.slice(pos + 1));\n}\n\n////////////////////////////////////////////////////////////////////////////////\n\nfunction isValidEntityCode(c) {\n  /*eslint no-bitwise:0*/\n  // broken sequence\n  if (c >= 0xD800 && c <= 0xDFFF) { return false; }\n  // never used\n  if (c >= 0xFDD0 && c <= 0xFDEF) { return false; }\n  if ((c & 0xFFFF) === 0xFFFF || (c & 0xFFFF) === 0xFFFE) { return false; }\n  // control codes\n  if (c >= 0x00 && c <= 0x08) { return false; }\n  if (c === 0x0B) { return false; }\n  if (c >= 0x0E && c <= 0x1F) { return false; }\n  if (c >= 0x7F && c <= 0x9F) { return false; }\n  // out of range\n  if (c > 0x10FFFF) { return false; }\n  return true;\n}\n\nfunction fromCodePoint(c) {\n  /*eslint no-bitwise:0*/\n  if (c > 0xffff) {\n    c -= 0x10000;\n    var surrogate1 = 0xd800 + (c >> 10),\n        surrogate2 = 0xdc00 + (c & 0x3ff);\n\n    return String.fromCharCode(surrogate1, surrogate2);\n  }\n  return String.fromCharCode(c);\n}\n\n\nvar UNESCAPE_MD_RE  = /\\\\([!\"#$%&'()*+,\\-.\\/:;<=>?@[\\\\\\]^_`{|}~])/g;\nvar ENTITY_RE       = /&([a-z#][a-z0-9]{1,31});/gi;\nvar UNESCAPE_ALL_RE = new RegExp(UNESCAPE_MD_RE.source + '|' + ENTITY_RE.source, 'gi');\n\nvar DIGITAL_ENTITY_TEST_RE = /^#((?:x[a-f0-9]{1,8}|[0-9]{1,8}))/i;\n\nvar entities = require('./entities');\n\nfunction replaceEntityPattern(match, name) {\n  var code = 0;\n\n  if (has(entities, name)) {\n    return entities[name];\n  }\n\n  if (name.charCodeAt(0) === 0x23/* # */ && DIGITAL_ENTITY_TEST_RE.test(name)) {\n    code = name[1].toLowerCase() === 'x' ?\n      parseInt(name.slice(2), 16) : parseInt(name.slice(1), 10);\n\n    if (isValidEntityCode(code)) {\n      return fromCodePoint(code);\n    }\n  }\n\n  return match;\n}\n\n/*function replaceEntities(str) {\n  if (str.indexOf('&') < 0) { return str; }\n\n  return str.replace(ENTITY_RE, replaceEntityPattern);\n}*/\n\nfunction unescapeMd(str) {\n  if (str.indexOf('\\\\') < 0) { return str; }\n  return str.replace(UNESCAPE_MD_RE, '$1');\n}\n\nfunction unescapeAll(str) {\n  if (str.indexOf('\\\\') < 0 && str.indexOf('&') < 0) { return str; }\n\n  return str.replace(UNESCAPE_ALL_RE, function (match, escaped, entity) {\n    if (escaped) { return escaped; }\n    return replaceEntityPattern(match, entity);\n  });\n}\n\n////////////////////////////////////////////////////////////////////////////////\n\nvar HTML_ESCAPE_TEST_RE = /[&<>\"]/;\nvar HTML_ESCAPE_REPLACE_RE = /[&<>\"]/g;\nvar HTML_REPLACEMENTS = {\n  '&': '&amp;',\n  '<': '&lt;',\n  '>': '&gt;',\n  '\"': '&quot;'\n};\n\nfunction replaceUnsafeChar(ch) {\n  return HTML_REPLACEMENTS[ch];\n}\n\nfunction escapeHtml(str) {\n  if (HTML_ESCAPE_TEST_RE.test(str)) {\n    return str.replace(HTML_ESCAPE_REPLACE_RE, replaceUnsafeChar);\n  }\n  return str;\n}\n\n////////////////////////////////////////////////////////////////////////////////\n\nvar REGEXP_ESCAPE_RE = /[.?*+^$[\\]\\\\(){}|-]/g;\n\nfunction escapeRE(str) {\n  return str.replace(REGEXP_ESCAPE_RE, '\\\\$&');\n}\n\n////////////////////////////////////////////////////////////////////////////////\n\nfunction isSpace(code) {\n  switch (code) {\n    case 0x09:\n    case 0x20:\n      return true;\n  }\n  return false;\n}\n\n// Zs (unicode class) || [\\t\\f\\v\\r\\n]\nfunction isWhiteSpace(code) {\n  if (code >= 0x2000 && code <= 0x200A) { return true; }\n  switch (code) {\n    case 0x09: // \\t\n    case 0x0A: // \\n\n    case 0x0B: // \\v\n    case 0x0C: // \\f\n    case 0x0D: // \\r\n    case 0x20:\n    case 0xA0:\n    case 0x1680:\n    case 0x202F:\n    case 0x205F:\n    case 0x3000:\n      return true;\n  }\n  return false;\n}\n\n////////////////////////////////////////////////////////////////////////////////\n\n/*eslint-disable max-len*/\nvar UNICODE_PUNCT_RE = require('uc.micro/categories/P/regex');\n\n// Currently without astral characters support.\nfunction isPunctChar(ch) {\n  return UNICODE_PUNCT_RE.test(ch);\n}\n\n\n// Markdown ASCII punctuation characters.\n//\n// !, \", #, $, %, &, ', (, ), *, +, ,, -, ., /, :, ;, <, =, >, ?, @, [, \\, ], ^, _, `, {, |, }, or ~\n// http://spec.commonmark.org/0.15/#ascii-punctuation-character\n//\n// Don't confuse with unicode punctuation !!! It lacks some chars in ascii range.\n//\nfunction isMdAsciiPunct(ch) {\n  switch (ch) {\n    case 0x21/* ! */:\n    case 0x22/* \" */:\n    case 0x23/* # */:\n    case 0x24/* $ */:\n    case 0x25/* % */:\n    case 0x26/* & */:\n    case 0x27/* ' */:\n    case 0x28/* ( */:\n    case 0x29/* ) */:\n    case 0x2A/* * */:\n    case 0x2B/* + */:\n    case 0x2C/* , */:\n    case 0x2D/* - */:\n    case 0x2E/* . */:\n    case 0x2F/* / */:\n    case 0x3A/* : */:\n    case 0x3B/* ; */:\n    case 0x3C/* < */:\n    case 0x3D/* = */:\n    case 0x3E/* > */:\n    case 0x3F/* ? */:\n    case 0x40/* @ */:\n    case 0x5B/* [ */:\n    case 0x5C/* \\ */:\n    case 0x5D/* ] */:\n    case 0x5E/* ^ */:\n    case 0x5F/* _ */:\n    case 0x60/* ` */:\n    case 0x7B/* { */:\n    case 0x7C/* | */:\n    case 0x7D/* } */:\n    case 0x7E/* ~ */:\n      return true;\n    default:\n      return false;\n  }\n}\n\n// Hepler to unify [reference labels].\n//\nfunction normalizeReference(str) {\n  // Trim and collapse whitespace\n  //\n  str = str.trim().replace(/\\s+/g, ' ');\n\n  // In node v10 'ẞ'.toLowerCase() === 'Ṿ', which is presumed to be a bug\n  // fixed in v12 (couldn't find any details).\n  //\n  // So treat this one as a special case\n  // (remove this when node v10 is no longer supported).\n  //\n  if ('ẞ'.toLowerCase() === 'Ṿ') {\n    str = str.replace(/ẞ/g, 'ß');\n  }\n\n  // .toLowerCase().toUpperCase() should get rid of all differences\n  // between letter variants.\n  //\n  // Simple .toLowerCase() doesn't normalize 125 code points correctly,\n  // and .toUpperCase doesn't normalize 6 of them (list of exceptions:\n  // İ, ϴ, ẞ, Ω, K, Å - those are already uppercased, but have differently\n  // uppercased versions).\n  //\n  // Here's an example showing how it happens. Lets take greek letter omega:\n  // uppercase U+0398 (Θ), U+03f4 (ϴ) and lowercase U+03b8 (θ), U+03d1 (ϑ)\n  //\n  // Unicode entries:\n  // 0398;GREEK CAPITAL LETTER THETA;Lu;0;L;;;;;N;;;;03B8;\n  // 03B8;GREEK SMALL LETTER THETA;Ll;0;L;;;;;N;;;0398;;0398\n  // 03D1;GREEK THETA SYMBOL;Ll;0;L;<compat> 03B8;;;;N;GREEK SMALL LETTER SCRIPT THETA;;0398;;0398\n  // 03F4;GREEK CAPITAL THETA SYMBOL;Lu;0;L;<compat> 0398;;;;N;;;;03B8;\n  //\n  // Case-insensitive comparison should treat all of them as equivalent.\n  //\n  // But .toLowerCase() doesn't change ϑ (it's already lowercase),\n  // and .toUpperCase() doesn't change ϴ (already uppercase).\n  //\n  // Applying first lower then upper case normalizes any character:\n  // '\\u0398\\u03f4\\u03b8\\u03d1'.toLowerCase().toUpperCase() === '\\u0398\\u0398\\u0398\\u0398'\n  //\n  // Note: this is equivalent to unicode case folding; unicode normalization\n  // is a different step that is not required here.\n  //\n  // Final result should be uppercased, because it's later stored in an object\n  // (this avoid a conflict with Object.prototype members,\n  // most notably, `__proto__`)\n  //\n  return str.toLowerCase().toUpperCase();\n}\n\n////////////////////////////////////////////////////////////////////////////////\n\n// Re-export libraries commonly used in both markdown-it and its plugins,\n// so plugins won't have to depend on them explicitly, which reduces their\n// bundled size (e.g. a browser build).\n//\nexports.lib                 = {};\nexports.lib.mdurl           = require('mdurl');\nexports.lib.ucmicro         = require('uc.micro');\n\nexports.assign              = assign;\nexports.isString            = isString;\nexports.has                 = has;\nexports.unescapeMd          = unescapeMd;\nexports.unescapeAll         = unescapeAll;\nexports.isValidEntityCode   = isValidEntityCode;\nexports.fromCodePoint       = fromCodePoint;\n// exports.replaceEntities     = replaceEntities;\nexports.escapeHtml          = escapeHtml;\nexports.arrayReplaceAt      = arrayReplaceAt;\nexports.isSpace             = isSpace;\nexports.isWhiteSpace        = isWhiteSpace;\nexports.isMdAsciiPunct      = isMdAsciiPunct;\nexports.isPunctChar         = isPunctChar;\nexports.escapeRE            = escapeRE;\nexports.normalizeReference  = normalizeReference;\n","'use strict';\n\nmodule.exports = function emoji_html(tokens, idx /*, options, env */) {\n  return tokens[idx].content;\n};\n","// heading (#, ##, ...)\n\n'use strict';\n\nvar isSpace = require('../common/utils').isSpace;\n\n\nmodule.exports = function heading(state, startLine, endLine, silent) {\n  var ch, level, tmp, token,\n      pos = state.bMarks[startLine] + state.tShift[startLine],\n      max = state.eMarks[startLine];\n\n  // if it's indented more than 3 spaces, it should be a code block\n  if (state.sCount[startLine] - state.blkIndent >= 4) { return false; }\n\n  ch  = state.src.charCodeAt(pos);\n\n  if (ch !== 0x23/* # */ || pos >= max) { return false; }\n\n  // count heading level\n  level = 1;\n  ch = state.src.charCodeAt(++pos);\n  while (ch === 0x23/* # */ && pos < max && level <= 6) {\n    level++;\n    ch = state.src.charCodeAt(++pos);\n  }\n\n  if (level > 6 || (pos < max && !isSpace(ch))) { return false; }\n\n  if (silent) { return true; }\n\n  // Let's cut tails like '    ###  ' from the end of string\n\n  max = state.skipSpacesBack(max, pos);\n  tmp = state.skipCharsBack(max, 0x23, pos); // #\n  if (tmp > pos && isSpace(state.src.charCodeAt(tmp - 1))) {\n    max = tmp;\n  }\n\n  state.line = startLine + 1;\n\n  token        = state.push('heading_open', 'h' + String(level), 1);\n  token.markup = '########'.slice(0, level);\n  token.map    = [ startLine, state.line ];\n\n  token          = state.push('inline', '', 0);\n  token.content  = state.src.slice(pos, max).trim();\n  token.map      = [ startLine, state.line ];\n  token.children = [];\n\n  token        = state.push('heading_close', 'h' + String(level), -1);\n  token.markup = '########'.slice(0, level);\n\n  return true;\n};\n","// Main parser class\n\n'use strict';\n\n\nvar utils        = require('./common/utils');\nvar helpers      = require('./helpers');\nvar Renderer     = require('./renderer');\nvar ParserCore   = require('./parser_core');\nvar ParserBlock  = require('./parser_block');\nvar ParserInline = require('./parser_inline');\nvar LinkifyIt    = require('linkify-it');\nvar mdurl        = require('mdurl');\nvar punycode     = require('punycode');\n\n\nvar config = {\n  default: require('./presets/default'),\n  zero: require('./presets/zero'),\n  commonmark: require('./presets/commonmark')\n};\n\n////////////////////////////////////////////////////////////////////////////////\n//\n// This validator can prohibit more than really needed to prevent XSS. It's a\n// tradeoff to keep code simple and to be secure by default.\n//\n// If you need different setup - override validator method as you wish. Or\n// replace it with dummy function and use external sanitizer.\n//\n\nvar BAD_PROTO_RE = /^(vbscript|javascript|file|data):/;\nvar GOOD_DATA_RE = /^data:image\\/(gif|png|jpeg|webp);/;\n\nfunction validateLink(url) {\n  // url should be normalized at this point, and existing entities are decoded\n  var str = url.trim().toLowerCase();\n\n  return BAD_PROTO_RE.test(str) ? (GOOD_DATA_RE.test(str) ? true : false) : true;\n}\n\n////////////////////////////////////////////////////////////////////////////////\n\n\nvar RECODE_HOSTNAME_FOR = [ 'http:', 'https:', 'mailto:' ];\n\nfunction normalizeLink(url) {\n  var parsed = mdurl.parse(url, true);\n\n  if (parsed.hostname) {\n    // Encode hostnames in urls like:\n    // `http://host/`, `https://host/`, `mailto:user@host`, `//host/`\n    //\n    // We don't encode unknown schemas, because it's likely that we encode\n    // something we shouldn't (e.g. `skype:name` treated as `skype:host`)\n    //\n    if (!parsed.protocol || RECODE_HOSTNAME_FOR.indexOf(parsed.protocol) >= 0) {\n      try {\n        parsed.hostname = punycode.toASCII(parsed.hostname);\n      } catch (er) { /**/ }\n    }\n  }\n\n  return mdurl.encode(mdurl.format(parsed));\n}\n\nfunction normalizeLinkText(url) {\n  var parsed = mdurl.parse(url, true);\n\n  if (parsed.hostname) {\n    // Encode hostnames in urls like:\n    // `http://host/`, `https://host/`, `mailto:user@host`, `//host/`\n    //\n    // We don't encode unknown schemas, because it's likely that we encode\n    // something we shouldn't (e.g. `skype:name` treated as `skype:host`)\n    //\n    if (!parsed.protocol || RECODE_HOSTNAME_FOR.indexOf(parsed.protocol) >= 0) {\n      try {\n        parsed.hostname = punycode.toUnicode(parsed.hostname);\n      } catch (er) { /**/ }\n    }\n  }\n\n  // add '%' to exclude list because of https://github.com/markdown-it/markdown-it/issues/720\n  return mdurl.decode(mdurl.format(parsed), mdurl.decode.defaultChars + '%');\n}\n\n\n/**\n * class MarkdownIt\n *\n * Main parser/renderer class.\n *\n * ##### Usage\n *\n * ```javascript\n * // node.js, \"classic\" way:\n * var MarkdownIt = require('markdown-it'),\n *     md = new MarkdownIt();\n * var result = md.render('# markdown-it rulezz!');\n *\n * // node.js, the same, but with sugar:\n * var md = require('markdown-it')();\n * var result = md.render('# markdown-it rulezz!');\n *\n * // browser without AMD, added to \"window\" on script load\n * // Note, there are no dash.\n * var md = window.markdownit();\n * var result = md.render('# markdown-it rulezz!');\n * ```\n *\n * Single line rendering, without paragraph wrap:\n *\n * ```javascript\n * var md = require('markdown-it')();\n * var result = md.renderInline('__markdown-it__ rulezz!');\n * ```\n **/\n\n/**\n * new MarkdownIt([presetName, options])\n * - presetName (String): optional, `commonmark` / `zero`\n * - options (Object)\n *\n * Creates parser instanse with given config. Can be called without `new`.\n *\n * ##### presetName\n *\n * MarkdownIt provides named presets as a convenience to quickly\n * enable/disable active syntax rules and options for common use cases.\n *\n * - [\"commonmark\"](https://github.com/markdown-it/markdown-it/blob/master/lib/presets/commonmark.js) -\n *   configures parser to strict [CommonMark](http://commonmark.org/) mode.\n * - [default](https://github.com/markdown-it/markdown-it/blob/master/lib/presets/default.js) -\n *   similar to GFM, used when no preset name given. Enables all available rules,\n *   but still without html, typographer & autolinker.\n * - [\"zero\"](https://github.com/markdown-it/markdown-it/blob/master/lib/presets/zero.js) -\n *   all rules disabled. Useful to quickly setup your config via `.enable()`.\n *   For example, when you need only `bold` and `italic` markup and nothing else.\n *\n * ##### options:\n *\n * - __html__ - `false`. Set `true` to enable HTML tags in source. Be careful!\n *   That's not safe! You may need external sanitizer to protect output from XSS.\n *   It's better to extend features via plugins, instead of enabling HTML.\n * - __xhtmlOut__ - `false`. Set `true` to add '/' when closing single tags\n *   (`<br />`). This is needed only for full CommonMark compatibility. In real\n *   world you will need HTML output.\n * - __breaks__ - `false`. Set `true` to convert `\\n` in paragraphs into `<br>`.\n * - __langPrefix__ - `language-`. CSS language class prefix for fenced blocks.\n *   Can be useful for external highlighters.\n * - __linkify__ - `false`. Set `true` to autoconvert URL-like text to links.\n * - __typographer__  - `false`. Set `true` to enable [some language-neutral\n *   replacement](https://github.com/markdown-it/markdown-it/blob/master/lib/rules_core/replacements.js) +\n *   quotes beautification (smartquotes).\n * - __quotes__ - `“”‘’`, String or Array. Double + single quotes replacement\n *   pairs, when typographer enabled and smartquotes on. For example, you can\n *   use `'«»„“'` for Russian, `'„“‚‘'` for German, and\n *   `['«\\xA0', '\\xA0»', '‹\\xA0', '\\xA0›']` for French (including nbsp).\n * - __highlight__ - `null`. Highlighter function for fenced code blocks.\n *   Highlighter `function (str, lang)` should return escaped HTML. It can also\n *   return empty string if the source was not changed and should be escaped\n *   externaly. If result starts with <pre... internal wrapper is skipped.\n *\n * ##### Example\n *\n * ```javascript\n * // commonmark mode\n * var md = require('markdown-it')('commonmark');\n *\n * // default mode\n * var md = require('markdown-it')();\n *\n * // enable everything\n * var md = require('markdown-it')({\n *   html: true,\n *   linkify: true,\n *   typographer: true\n * });\n * ```\n *\n * ##### Syntax highlighting\n *\n * ```js\n * var hljs = require('highlight.js') // https://highlightjs.org/\n *\n * var md = require('markdown-it')({\n *   highlight: function (str, lang) {\n *     if (lang && hljs.getLanguage(lang)) {\n *       try {\n *         return hljs.highlight(lang, str, true).value;\n *       } catch (__) {}\n *     }\n *\n *     return ''; // use external default escaping\n *   }\n * });\n * ```\n *\n * Or with full wrapper override (if you need assign class to `<pre>`):\n *\n * ```javascript\n * var hljs = require('highlight.js') // https://highlightjs.org/\n *\n * // Actual default values\n * var md = require('markdown-it')({\n *   highlight: function (str, lang) {\n *     if (lang && hljs.getLanguage(lang)) {\n *       try {\n *         return '<pre class=\"hljs\"><code>' +\n *                hljs.highlight(lang, str, true).value +\n *                '</code></pre>';\n *       } catch (__) {}\n *     }\n *\n *     return '<pre class=\"hljs\"><code>' + md.utils.escapeHtml(str) + '</code></pre>';\n *   }\n * });\n * ```\n *\n **/\nfunction MarkdownIt(presetName, options) {\n  if (!(this instanceof MarkdownIt)) {\n    return new MarkdownIt(presetName, options);\n  }\n\n  if (!options) {\n    if (!utils.isString(presetName)) {\n      options = presetName || {};\n      presetName = 'default';\n    }\n  }\n\n  /**\n   * MarkdownIt#inline -> ParserInline\n   *\n   * Instance of [[ParserInline]]. You may need it to add new rules when\n   * writing plugins. For simple rules control use [[MarkdownIt.disable]] and\n   * [[MarkdownIt.enable]].\n   **/\n  this.inline = new ParserInline();\n\n  /**\n   * MarkdownIt#block -> ParserBlock\n   *\n   * Instance of [[ParserBlock]]. You may need it to add new rules when\n   * writing plugins. For simple rules control use [[MarkdownIt.disable]] and\n   * [[MarkdownIt.enable]].\n   **/\n  this.block = new ParserBlock();\n\n  /**\n   * MarkdownIt#core -> Core\n   *\n   * Instance of [[Core]] chain executor. You may need it to add new rules when\n   * writing plugins. For simple rules control use [[MarkdownIt.disable]] and\n   * [[MarkdownIt.enable]].\n   **/\n  this.core = new ParserCore();\n\n  /**\n   * MarkdownIt#renderer -> Renderer\n   *\n   * Instance of [[Renderer]]. Use it to modify output look. Or to add rendering\n   * rules for new token types, generated by plugins.\n   *\n   * ##### Example\n   *\n   * ```javascript\n   * var md = require('markdown-it')();\n   *\n   * function myToken(tokens, idx, options, env, self) {\n   *   //...\n   *   return result;\n   * };\n   *\n   * md.renderer.rules['my_token'] = myToken\n   * ```\n   *\n   * See [[Renderer]] docs and [source code](https://github.com/markdown-it/markdown-it/blob/master/lib/renderer.js).\n   **/\n  this.renderer = new Renderer();\n\n  /**\n   * MarkdownIt#linkify -> LinkifyIt\n   *\n   * [linkify-it](https://github.com/markdown-it/linkify-it) instance.\n   * Used by [linkify](https://github.com/markdown-it/markdown-it/blob/master/lib/rules_core/linkify.js)\n   * rule.\n   **/\n  this.linkify = new LinkifyIt();\n\n  /**\n   * MarkdownIt#validateLink(url) -> Boolean\n   *\n   * Link validation function. CommonMark allows too much in links. By default\n   * we disable `javascript:`, `vbscript:`, `file:` schemas, and almost all `data:...` schemas\n   * except some embedded image types.\n   *\n   * You can change this behaviour:\n   *\n   * ```javascript\n   * var md = require('markdown-it')();\n   * // enable everything\n   * md.validateLink = function () { return true; }\n   * ```\n   **/\n  this.validateLink = validateLink;\n\n  /**\n   * MarkdownIt#normalizeLink(url) -> String\n   *\n   * Function used to encode link url to a machine-readable format,\n   * which includes url-encoding, punycode, etc.\n   **/\n  this.normalizeLink = normalizeLink;\n\n  /**\n   * MarkdownIt#normalizeLinkText(url) -> String\n   *\n   * Function used to decode link url to a human-readable format`\n   **/\n  this.normalizeLinkText = normalizeLinkText;\n\n\n  // Expose utils & helpers for easy acces from plugins\n\n  /**\n   * MarkdownIt#utils -> utils\n   *\n   * Assorted utility functions, useful to write plugins. See details\n   * [here](https://github.com/markdown-it/markdown-it/blob/master/lib/common/utils.js).\n   **/\n  this.utils = utils;\n\n  /**\n   * MarkdownIt#helpers -> helpers\n   *\n   * Link components parser functions, useful to write plugins. See details\n   * [here](https://github.com/markdown-it/markdown-it/blob/master/lib/helpers).\n   **/\n  this.helpers = utils.assign({}, helpers);\n\n\n  this.options = {};\n  this.configure(presetName);\n\n  if (options) { this.set(options); }\n}\n\n\n/** chainable\n * MarkdownIt.set(options)\n *\n * Set parser options (in the same format as in constructor). Probably, you\n * will never need it, but you can change options after constructor call.\n *\n * ##### Example\n *\n * ```javascript\n * var md = require('markdown-it')()\n *             .set({ html: true, breaks: true })\n *             .set({ typographer, true });\n * ```\n *\n * __Note:__ To achieve the best possible performance, don't modify a\n * `markdown-it` instance options on the fly. If you need multiple configurations\n * it's best to create multiple instances and initialize each with separate\n * config.\n **/\nMarkdownIt.prototype.set = function (options) {\n  utils.assign(this.options, options);\n  return this;\n};\n\n\n/** chainable, internal\n * MarkdownIt.configure(presets)\n *\n * Batch load of all options and compenent settings. This is internal method,\n * and you probably will not need it. But if you will - see available presets\n * and data structure [here](https://github.com/markdown-it/markdown-it/tree/master/lib/presets)\n *\n * We strongly recommend to use presets instead of direct config loads. That\n * will give better compatibility with next versions.\n **/\nMarkdownIt.prototype.configure = function (presets) {\n  var self = this, presetName;\n\n  if (utils.isString(presets)) {\n    presetName = presets;\n    presets = config[presetName];\n    if (!presets) { throw new Error('Wrong `markdown-it` preset \"' + presetName + '\", check name'); }\n  }\n\n  if (!presets) { throw new Error('Wrong `markdown-it` preset, can\\'t be empty'); }\n\n  if (presets.options) { self.set(presets.options); }\n\n  if (presets.components) {\n    Object.keys(presets.components).forEach(function (name) {\n      if (presets.components[name].rules) {\n        self[name].ruler.enableOnly(presets.components[name].rules);\n      }\n      if (presets.components[name].rules2) {\n        self[name].ruler2.enableOnly(presets.components[name].rules2);\n      }\n    });\n  }\n  return this;\n};\n\n\n/** chainable\n * MarkdownIt.enable(list, ignoreInvalid)\n * - list (String|Array): rule name or list of rule names to enable\n * - ignoreInvalid (Boolean): set `true` to ignore errors when rule not found.\n *\n * Enable list or rules. It will automatically find appropriate components,\n * containing rules with given names. If rule not found, and `ignoreInvalid`\n * not set - throws exception.\n *\n * ##### Example\n *\n * ```javascript\n * var md = require('markdown-it')()\n *             .enable(['sub', 'sup'])\n *             .disable('smartquotes');\n * ```\n **/\nMarkdownIt.prototype.enable = function (list, ignoreInvalid) {\n  var result = [];\n\n  if (!Array.isArray(list)) { list = [ list ]; }\n\n  [ 'core', 'block', 'inline' ].forEach(function (chain) {\n    result = result.concat(this[chain].ruler.enable(list, true));\n  }, this);\n\n  result = result.concat(this.inline.ruler2.enable(list, true));\n\n  var missed = list.filter(function (name) { return result.indexOf(name) < 0; });\n\n  if (missed.length && !ignoreInvalid) {\n    throw new Error('MarkdownIt. Failed to enable unknown rule(s): ' + missed);\n  }\n\n  return this;\n};\n\n\n/** chainable\n * MarkdownIt.disable(list, ignoreInvalid)\n * - list (String|Array): rule name or list of rule names to disable.\n * - ignoreInvalid (Boolean): set `true` to ignore errors when rule not found.\n *\n * The same as [[MarkdownIt.enable]], but turn specified rules off.\n **/\nMarkdownIt.prototype.disable = function (list, ignoreInvalid) {\n  var result = [];\n\n  if (!Array.isArray(list)) { list = [ list ]; }\n\n  [ 'core', 'block', 'inline' ].forEach(function (chain) {\n    result = result.concat(this[chain].ruler.disable(list, true));\n  }, this);\n\n  result = result.concat(this.inline.ruler2.disable(list, true));\n\n  var missed = list.filter(function (name) { return result.indexOf(name) < 0; });\n\n  if (missed.length && !ignoreInvalid) {\n    throw new Error('MarkdownIt. Failed to disable unknown rule(s): ' + missed);\n  }\n  return this;\n};\n\n\n/** chainable\n * MarkdownIt.use(plugin, params)\n *\n * Load specified plugin with given params into current parser instance.\n * It's just a sugar to call `plugin(md, params)` with curring.\n *\n * ##### Example\n *\n * ```javascript\n * var iterator = require('markdown-it-for-inline');\n * var md = require('markdown-it')()\n *             .use(iterator, 'foo_replace', 'text', function (tokens, idx) {\n *               tokens[idx].content = tokens[idx].content.replace(/foo/g, 'bar');\n *             });\n * ```\n **/\nMarkdownIt.prototype.use = function (plugin /*, params, ... */) {\n  var args = [ this ].concat(Array.prototype.slice.call(arguments, 1));\n  plugin.apply(plugin, args);\n  return this;\n};\n\n\n/** internal\n * MarkdownIt.parse(src, env) -> Array\n * - src (String): source string\n * - env (Object): environment sandbox\n *\n * Parse input string and return list of block tokens (special token type\n * \"inline\" will contain list of inline tokens). You should not call this\n * method directly, until you write custom renderer (for example, to produce\n * AST).\n *\n * `env` is used to pass data between \"distributed\" rules and return additional\n * metadata like reference info, needed for the renderer. It also can be used to\n * inject data in specific cases. Usually, you will be ok to pass `{}`,\n * and then pass updated object to renderer.\n **/\nMarkdownIt.prototype.parse = function (src, env) {\n  if (typeof src !== 'string') {\n    throw new Error('Input data should be a String');\n  }\n\n  var state = new this.core.State(src, this, env);\n\n  this.core.process(state);\n\n  return state.tokens;\n};\n\n\n/**\n * MarkdownIt.render(src [, env]) -> String\n * - src (String): source string\n * - env (Object): environment sandbox\n *\n * Render markdown string into html. It does all magic for you :).\n *\n * `env` can be used to inject additional metadata (`{}` by default).\n * But you will not need it with high probability. See also comment\n * in [[MarkdownIt.parse]].\n **/\nMarkdownIt.prototype.render = function (src, env) {\n  env = env || {};\n\n  return this.renderer.render(this.parse(src, env), this.options, env);\n};\n\n\n/** internal\n * MarkdownIt.parseInline(src, env) -> Array\n * - src (String): source string\n * - env (Object): environment sandbox\n *\n * The same as [[MarkdownIt.parse]] but skip all block rules. It returns the\n * block tokens list with the single `inline` element, containing parsed inline\n * tokens in `children` property. Also updates `env` object.\n **/\nMarkdownIt.prototype.parseInline = function (src, env) {\n  var state = new this.core.State(src, this, env);\n\n  state.inlineMode = true;\n  this.core.process(state);\n\n  return state.tokens;\n};\n\n\n/**\n * MarkdownIt.renderInline(src [, env]) -> String\n * - src (String): source string\n * - env (Object): environment sandbox\n *\n * Similar to [[MarkdownIt.render]] but for single paragraph content. Result\n * will NOT be wrapped into `<p>` tags.\n **/\nMarkdownIt.prototype.renderInline = function (src, env) {\n  env = env || {};\n\n  return this.renderer.render(this.parseInline(src, env), this.options, env);\n};\n\n\nmodule.exports = MarkdownIt;\n","// Token class\n\n'use strict';\n\n\n/**\n * class Token\n **/\n\n/**\n * new Token(type, tag, nesting)\n *\n * Create new token and fill passed properties.\n **/\nfunction Token(type, tag, nesting) {\n  /**\n   * Token#type -> String\n   *\n   * Type of the token (string, e.g. \"paragraph_open\")\n   **/\n  this.type     = type;\n\n  /**\n   * Token#tag -> String\n   *\n   * html tag name, e.g. \"p\"\n   **/\n  this.tag      = tag;\n\n  /**\n   * Token#attrs -> Array\n   *\n   * Html attributes. Format: `[ [ name1, value1 ], [ name2, value2 ] ]`\n   **/\n  this.attrs    = null;\n\n  /**\n   * Token#map -> Array\n   *\n   * Source map info. Format: `[ line_begin, line_end ]`\n   **/\n  this.map      = null;\n\n  /**\n   * Token#nesting -> Number\n   *\n   * Level change (number in {-1, 0, 1} set), where:\n   *\n   * -  `1` means the tag is opening\n   * -  `0` means the tag is self-closing\n   * - `-1` means the tag is closing\n   **/\n  this.nesting  = nesting;\n\n  /**\n   * Token#level -> Number\n   *\n   * nesting level, the same as `state.level`\n   **/\n  this.level    = 0;\n\n  /**\n   * Token#children -> Array\n   *\n   * An array of child nodes (inline and img tokens)\n   **/\n  this.children = null;\n\n  /**\n   * Token#content -> String\n   *\n   * In a case of self-closing tag (code, html, fence, etc.),\n   * it has contents of this tag.\n   **/\n  this.content  = '';\n\n  /**\n   * Token#markup -> String\n   *\n   * '*' or '_' for emphasis, fence string for fence, etc.\n   **/\n  this.markup   = '';\n\n  /**\n   * Token#info -> String\n   *\n   * Additional information:\n   *\n   * - Info string for \"fence\" tokens\n   * - The value \"auto\" for autolink \"link_open\" and \"link_close\" tokens\n   **/\n  this.info     = '';\n\n  /**\n   * Token#meta -> Object\n   *\n   * A place for plugins to store an arbitrary data\n   **/\n  this.meta     = null;\n\n  /**\n   * Token#block -> Boolean\n   *\n   * True for block-level tokens, false for inline tokens.\n   * Used in renderer to calculate line breaks\n   **/\n  this.block    = false;\n\n  /**\n   * Token#hidden -> Boolean\n   *\n   * If it's true, ignore this element when rendering. Used for tight lists\n   * to hide paragraphs.\n   **/\n  this.hidden   = false;\n}\n\n\n/**\n * Token.attrIndex(name) -> Number\n *\n * Search attribute index by name.\n **/\nToken.prototype.attrIndex = function attrIndex(name) {\n  var attrs, i, len;\n\n  if (!this.attrs) { return -1; }\n\n  attrs = this.attrs;\n\n  for (i = 0, len = attrs.length; i < len; i++) {\n    if (attrs[i][0] === name) { return i; }\n  }\n  return -1;\n};\n\n\n/**\n * Token.attrPush(attrData)\n *\n * Add `[ name, value ]` attribute to list. Init attrs if necessary\n **/\nToken.prototype.attrPush = function attrPush(attrData) {\n  if (this.attrs) {\n    this.attrs.push(attrData);\n  } else {\n    this.attrs = [ attrData ];\n  }\n};\n\n\n/**\n * Token.attrSet(name, value)\n *\n * Set `name` attribute to `value`. Override old value if exists.\n **/\nToken.prototype.attrSet = function attrSet(name, value) {\n  var idx = this.attrIndex(name),\n      attrData = [ name, value ];\n\n  if (idx < 0) {\n    this.attrPush(attrData);\n  } else {\n    this.attrs[idx] = attrData;\n  }\n};\n\n\n/**\n * Token.attrGet(name)\n *\n * Get the value of attribute `name`, or null if it does not exist.\n **/\nToken.prototype.attrGet = function attrGet(name) {\n  var idx = this.attrIndex(name), value = null;\n  if (idx >= 0) {\n    value = this.attrs[idx][1];\n  }\n  return value;\n};\n\n\n/**\n * Token.attrJoin(name, value)\n *\n * Join value to existing attribute via space. Or create new attribute if not\n * exists. Useful to operate with token classes.\n **/\nToken.prototype.attrJoin = function attrJoin(name, value) {\n  var idx = this.attrIndex(name);\n\n  if (idx < 0) {\n    this.attrPush([ name, value ]);\n  } else {\n    this.attrs[idx][1] = this.attrs[idx][1] + ' ' + value;\n  }\n};\n\n\nmodule.exports = Token;\n","// Inline parser state\n\n'use strict';\n\n\nvar Token          = require('../token');\nvar isWhiteSpace   = require('../common/utils').isWhiteSpace;\nvar isPunctChar    = require('../common/utils').isPunctChar;\nvar isMdAsciiPunct = require('../common/utils').isMdAsciiPunct;\n\n\nfunction StateInline(src, md, env, outTokens) {\n  this.src = src;\n  this.env = env;\n  this.md = md;\n  this.tokens = outTokens;\n  this.tokens_meta = Array(outTokens.length);\n\n  this.pos = 0;\n  this.posMax = this.src.length;\n  this.level = 0;\n  this.pending = '';\n  this.pendingLevel = 0;\n\n  // Stores { start: end } pairs. Useful for backtrack\n  // optimization of pairs parse (emphasis, strikes).\n  this.cache = {};\n\n  // List of emphasis-like delimiters for current tag\n  this.delimiters = [];\n\n  // Stack of delimiter lists for upper level tags\n  this._prev_delimiters = [];\n\n  // backtick length => last seen position\n  this.backticks = {};\n  this.backticksScanned = false;\n}\n\n\n// Flush pending text\n//\nStateInline.prototype.pushPending = function () {\n  var token = new Token('text', '', 0);\n  token.content = this.pending;\n  token.level = this.pendingLevel;\n  this.tokens.push(token);\n  this.pending = '';\n  return token;\n};\n\n\n// Push new token to \"stream\".\n// If pending text exists - flush it as text token\n//\nStateInline.prototype.push = function (type, tag, nesting) {\n  if (this.pending) {\n    this.pushPending();\n  }\n\n  var token = new Token(type, tag, nesting);\n  var token_meta = null;\n\n  if (nesting < 0) {\n    // closing tag\n    this.level--;\n    this.delimiters = this._prev_delimiters.pop();\n  }\n\n  token.level = this.level;\n\n  if (nesting > 0) {\n    // opening tag\n    this.level++;\n    this._prev_delimiters.push(this.delimiters);\n    this.delimiters = [];\n    token_meta = { delimiters: this.delimiters };\n  }\n\n  this.pendingLevel = this.level;\n  this.tokens.push(token);\n  this.tokens_meta.push(token_meta);\n  return token;\n};\n\n\n// Scan a sequence of emphasis-like markers, and determine whether\n// it can start an emphasis sequence or end an emphasis sequence.\n//\n//  - start - position to scan from (it should point at a valid marker);\n//  - canSplitWord - determine if these markers can be found inside a word\n//\nStateInline.prototype.scanDelims = function (start, canSplitWord) {\n  var pos = start, lastChar, nextChar, count, can_open, can_close,\n      isLastWhiteSpace, isLastPunctChar,\n      isNextWhiteSpace, isNextPunctChar,\n      left_flanking = true,\n      right_flanking = true,\n      max = this.posMax,\n      marker = this.src.charCodeAt(start);\n\n  // treat beginning of the line as a whitespace\n  lastChar = start > 0 ? this.src.charCodeAt(start - 1) : 0x20;\n\n  while (pos < max && this.src.charCodeAt(pos) === marker) { pos++; }\n\n  count = pos - start;\n\n  // treat end of the line as a whitespace\n  nextChar = pos < max ? this.src.charCodeAt(pos) : 0x20;\n\n  isLastPunctChar = isMdAsciiPunct(lastChar) || isPunctChar(String.fromCharCode(lastChar));\n  isNextPunctChar = isMdAsciiPunct(nextChar) || isPunctChar(String.fromCharCode(nextChar));\n\n  isLastWhiteSpace = isWhiteSpace(lastChar);\n  isNextWhiteSpace = isWhiteSpace(nextChar);\n\n  if (isNextWhiteSpace) {\n    left_flanking = false;\n  } else if (isNextPunctChar) {\n    if (!(isLastWhiteSpace || isLastPunctChar)) {\n      left_flanking = false;\n    }\n  }\n\n  if (isLastWhiteSpace) {\n    right_flanking = false;\n  } else if (isLastPunctChar) {\n    if (!(isNextWhiteSpace || isNextPunctChar)) {\n      right_flanking = false;\n    }\n  }\n\n  if (!canSplitWord) {\n    can_open  = left_flanking  && (!right_flanking || isLastPunctChar);\n    can_close = right_flanking && (!left_flanking  || isNextPunctChar);\n  } else {\n    can_open  = left_flanking;\n    can_close = right_flanking;\n  }\n\n  return {\n    can_open:  can_open,\n    can_close: can_close,\n    length:    count\n  };\n};\n\n\n// re-export Token class to use in block rules\nStateInline.prototype.Token = Token;\n\n\nmodule.exports = StateInline;\n","'use strict';\nvar fixRegExpWellKnownSymbolLogic = require('../internals/fix-regexp-well-known-symbol-logic');\nvar isRegExp = require('../internals/is-regexp');\nvar anObject = require('../internals/an-object');\nvar requireObjectCoercible = require('../internals/require-object-coercible');\nvar speciesConstructor = require('../internals/species-constructor');\nvar advanceStringIndex = require('../internals/advance-string-index');\nvar toLength = require('../internals/to-length');\nvar callRegExpExec = require('../internals/regexp-exec-abstract');\nvar regexpExec = require('../internals/regexp-exec');\nvar stickyHelpers = require('../internals/regexp-sticky-helpers');\n\nvar UNSUPPORTED_Y = stickyHelpers.UNSUPPORTED_Y;\nvar arrayPush = [].push;\nvar min = Math.min;\nvar MAX_UINT32 = 0xFFFFFFFF;\n\n// @@split logic\nfixRegExpWellKnownSymbolLogic('split', 2, function (SPLIT, nativeSplit, maybeCallNative) {\n  var internalSplit;\n  if (\n    'abbc'.split(/(b)*/)[1] == 'c' ||\n    // eslint-disable-next-line regexp/no-empty-group -- required for testing\n    'test'.split(/(?:)/, -1).length != 4 ||\n    'ab'.split(/(?:ab)*/).length != 2 ||\n    '.'.split(/(.?)(.?)/).length != 4 ||\n    // eslint-disable-next-line regexp/no-assertion-capturing-group, regexp/no-empty-group -- required for testing\n    '.'.split(/()()/).length > 1 ||\n    ''.split(/.?/).length\n  ) {\n    // based on es5-shim implementation, need to rework it\n    internalSplit = function (separator, limit) {\n      var string = String(requireObjectCoercible(this));\n      var lim = limit === undefined ? MAX_UINT32 : limit >>> 0;\n      if (lim === 0) return [];\n      if (separator === undefined) return [string];\n      // If `separator` is not a regex, use native split\n      if (!isRegExp(separator)) {\n        return nativeSplit.call(string, separator, lim);\n      }\n      var output = [];\n      var flags = (separator.ignoreCase ? 'i' : '') +\n                  (separator.multiline ? 'm' : '') +\n                  (separator.unicode ? 'u' : '') +\n                  (separator.sticky ? 'y' : '');\n      var lastLastIndex = 0;\n      // Make `global` and avoid `lastIndex` issues by working with a copy\n      var separatorCopy = new RegExp(separator.source, flags + 'g');\n      var match, lastIndex, lastLength;\n      while (match = regexpExec.call(separatorCopy, string)) {\n        lastIndex = separatorCopy.lastIndex;\n        if (lastIndex > lastLastIndex) {\n          output.push(string.slice(lastLastIndex, match.index));\n          if (match.length > 1 && match.index < string.length) arrayPush.apply(output, match.slice(1));\n          lastLength = match[0].length;\n          lastLastIndex = lastIndex;\n          if (output.length >= lim) break;\n        }\n        if (separatorCopy.lastIndex === match.index) separatorCopy.lastIndex++; // Avoid an infinite loop\n      }\n      if (lastLastIndex === string.length) {\n        if (lastLength || !separatorCopy.test('')) output.push('');\n      } else output.push(string.slice(lastLastIndex));\n      return output.length > lim ? output.slice(0, lim) : output;\n    };\n  // Chakra, V8\n  } else if ('0'.split(undefined, 0).length) {\n    internalSplit = function (separator, limit) {\n      return separator === undefined && limit === 0 ? [] : nativeSplit.call(this, separator, limit);\n    };\n  } else internalSplit = nativeSplit;\n\n  return [\n    // `String.prototype.split` method\n    // https://tc39.es/ecma262/#sec-string.prototype.split\n    function split(separator, limit) {\n      var O = requireObjectCoercible(this);\n      var splitter = separator == undefined ? undefined : separator[SPLIT];\n      return splitter !== undefined\n        ? splitter.call(separator, O, limit)\n        : internalSplit.call(String(O), separator, limit);\n    },\n    // `RegExp.prototype[@@split]` method\n    // https://tc39.es/ecma262/#sec-regexp.prototype-@@split\n    //\n    // NOTE: This cannot be properly polyfilled in engines that don't support\n    // the 'y' flag.\n    function (regexp, limit) {\n      var res = maybeCallNative(internalSplit, regexp, this, limit, internalSplit !== nativeSplit);\n      if (res.done) return res.value;\n\n      var rx = anObject(regexp);\n      var S = String(this);\n      var C = speciesConstructor(rx, RegExp);\n\n      var unicodeMatching = rx.unicode;\n      var flags = (rx.ignoreCase ? 'i' : '') +\n                  (rx.multiline ? 'm' : '') +\n                  (rx.unicode ? 'u' : '') +\n                  (UNSUPPORTED_Y ? 'g' : 'y');\n\n      // ^(? + rx + ) is needed, in combination with some S slicing, to\n      // simulate the 'y' flag.\n      var splitter = new C(UNSUPPORTED_Y ? '^(?:' + rx.source + ')' : rx, flags);\n      var lim = limit === undefined ? MAX_UINT32 : limit >>> 0;\n      if (lim === 0) return [];\n      if (S.length === 0) return callRegExpExec(splitter, S) === null ? [S] : [];\n      var p = 0;\n      var q = 0;\n      var A = [];\n      while (q < S.length) {\n        splitter.lastIndex = UNSUPPORTED_Y ? 0 : q;\n        var z = callRegExpExec(splitter, UNSUPPORTED_Y ? S.slice(q) : S);\n        var e;\n        if (\n          z === null ||\n          (e = min(toLength(splitter.lastIndex + (UNSUPPORTED_Y ? q : 0)), S.length)) === p\n        ) {\n          q = advanceStringIndex(S, q, unicodeMatching);\n        } else {\n          A.push(S.slice(p, q));\n          if (A.length === lim) return A;\n          for (var i = 1; i <= z.length - 1; i++) {\n            A.push(z[i]);\n            if (A.length === lim) return A;\n          }\n          q = p = e;\n        }\n      }\n      A.push(S.slice(p));\n      return A;\n    }\n  ];\n}, UNSUPPORTED_Y);\n","var classof = require('./classof-raw');\nvar regexpExec = require('./regexp-exec');\n\n// `RegExpExec` abstract operation\n// https://tc39.es/ecma262/#sec-regexpexec\nmodule.exports = function (R, S) {\n  var exec = R.exec;\n  if (typeof exec === 'function') {\n    var result = exec.call(R, S);\n    if (typeof result !== 'object') {\n      throw TypeError('RegExp exec method returned something other than an Object or null');\n    }\n    return result;\n  }\n\n  if (classof(R) !== 'RegExp') {\n    throw TypeError('RegExp#exec called on incompatible receiver');\n  }\n\n  return regexpExec.call(R, S);\n};\n\n","// lheading (---, ===)\n\n'use strict';\n\n\nmodule.exports = function lheading(state, startLine, endLine/*, silent*/) {\n  var content, terminate, i, l, token, pos, max, level, marker,\n      nextLine = startLine + 1, oldParentType,\n      terminatorRules = state.md.block.ruler.getRules('paragraph');\n\n  // if it's indented more than 3 spaces, it should be a code block\n  if (state.sCount[startLine] - state.blkIndent >= 4) { return false; }\n\n  oldParentType = state.parentType;\n  state.parentType = 'paragraph'; // use paragraph to match terminatorRules\n\n  // jump line-by-line until empty one or EOF\n  for (; nextLine < endLine && !state.isEmpty(nextLine); nextLine++) {\n    // this would be a code block normally, but after paragraph\n    // it's considered a lazy continuation regardless of what's there\n    if (state.sCount[nextLine] - state.blkIndent > 3) { continue; }\n\n    //\n    // Check for underline in setext header\n    //\n    if (state.sCount[nextLine] >= state.blkIndent) {\n      pos = state.bMarks[nextLine] + state.tShift[nextLine];\n      max = state.eMarks[nextLine];\n\n      if (pos < max) {\n        marker = state.src.charCodeAt(pos);\n\n        if (marker === 0x2D/* - */ || marker === 0x3D/* = */) {\n          pos = state.skipChars(pos, marker);\n          pos = state.skipSpaces(pos);\n\n          if (pos >= max) {\n            level = (marker === 0x3D/* = */ ? 1 : 2);\n            break;\n          }\n        }\n      }\n    }\n\n    // quirk for blockquotes, this line should already be checked by that rule\n    if (state.sCount[nextLine] < 0) { continue; }\n\n    // Some tags can terminate paragraph without empty line.\n    terminate = false;\n    for (i = 0, l = terminatorRules.length; i < l; i++) {\n      if (terminatorRules[i](state, nextLine, endLine, true)) {\n        terminate = true;\n        break;\n      }\n    }\n    if (terminate) { break; }\n  }\n\n  if (!level) {\n    // Didn't find valid underline\n    return false;\n  }\n\n  content = state.getLines(startLine, nextLine, state.blkIndent, false).trim();\n\n  state.line = nextLine + 1;\n\n  token          = state.push('heading_open', 'h' + String(level), 1);\n  token.markup   = String.fromCharCode(marker);\n  token.map      = [ startLine, state.line ];\n\n  token          = state.push('inline', '', 0);\n  token.content  = content;\n  token.map      = [ startLine, state.line - 1 ];\n  token.children = [];\n\n  token          = state.push('heading_close', 'h' + String(level), -1);\n  token.markup   = String.fromCharCode(marker);\n\n  state.parentType = oldParentType;\n\n  return true;\n};\n","// \"Zero\" preset, with nothing enabled. Useful for manual configuring of simple\n// modes. For example, to parse bold/italic only.\n\n'use strict';\n\n\nmodule.exports = {\n  options: {\n    html:         false,        // Enable HTML tags in source\n    xhtmlOut:     false,        // Use '/' to close single tags (<br />)\n    breaks:       false,        // Convert '\\n' in paragraphs into <br>\n    langPrefix:   'language-',  // CSS language prefix for fenced blocks\n    linkify:      false,        // autoconvert URL-like texts to links\n\n    // Enable some language-neutral replacements + quotes beautification\n    typographer:  false,\n\n    // Double + single quotes replacement pairs, when typographer enabled,\n    // and smartquotes on. Could be either a String or an Array.\n    //\n    // For example, you can use '«»„“' for Russian, '„“‚‘' for German,\n    // and ['«\\xA0', '\\xA0»', '‹\\xA0', '\\xA0›'] for French (including nbsp).\n    quotes: '\\u201c\\u201d\\u2018\\u2019', /* “”‘’ */\n\n    // Highlighter function. Should return escaped HTML,\n    // or '' if the source string is not changed and should be escaped externaly.\n    // If result starts with <pre... internal wrapper is skipped.\n    //\n    // function (/*str, lang*/) { return ''; }\n    //\n    highlight: null,\n\n    maxNesting:   20            // Internal protection, recursion limit\n  },\n\n  components: {\n\n    core: {\n      rules: [\n        'normalize',\n        'block',\n        'inline'\n      ]\n    },\n\n    block: {\n      rules: [\n        'paragraph'\n      ]\n    },\n\n    inline: {\n      rules: [\n        'text'\n      ],\n      rules2: [\n        'balance_pairs',\n        'text_collapse'\n      ]\n    }\n  }\n};\n","// Clean up tokens after emphasis and strikethrough postprocessing:\n// merge adjacent text nodes into one and re-calculate all token levels\n//\n// This is necessary because initially emphasis delimiter markers (*, _, ~)\n// are treated as their own separate text tokens. Then emphasis rule either\n// leaves them as text (needed to merge with adjacent text) or turns them\n// into opening/closing tags (which messes up levels inside).\n//\n'use strict';\n\n\nmodule.exports = function text_collapse(state) {\n  var curr, last,\n      level = 0,\n      tokens = state.tokens,\n      max = state.tokens.length;\n\n  for (curr = last = 0; curr < max; curr++) {\n    // re-calculate levels after emphasis/strikethrough turns some text nodes\n    // into opening/closing tags\n    if (tokens[curr].nesting < 0) level--; // closing tag\n    tokens[curr].level = level;\n    if (tokens[curr].nesting > 0) level++; // opening tag\n\n    if (tokens[curr].type === 'text' &&\n        curr + 1 < max &&\n        tokens[curr + 1].type === 'text') {\n\n      // collapse two adjacent text nodes\n      tokens[curr + 1].content = tokens[curr].content + tokens[curr + 1].content;\n    } else {\n      if (curr !== last) { tokens[last] = tokens[curr]; }\n\n      last++;\n    }\n  }\n\n  if (curr !== last) {\n    tokens.length = last;\n  }\n};\n","// Process autolinks '<protocol:...>'\n\n'use strict';\n\n\n/*eslint max-len:0*/\nvar EMAIL_RE    = /^([a-zA-Z0-9.!#$%&'*+\\/=?^_`{|}~-]+@[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?(?:\\.[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?)*)$/;\nvar AUTOLINK_RE = /^([a-zA-Z][a-zA-Z0-9+.\\-]{1,31}):([^<>\\x00-\\x20]*)$/;\n\n\nmodule.exports = function autolink(state, silent) {\n  var url, fullUrl, token, ch, start, max,\n      pos = state.pos;\n\n  if (state.src.charCodeAt(pos) !== 0x3C/* < */) { return false; }\n\n  start = state.pos;\n  max = state.posMax;\n\n  for (;;) {\n    if (++pos >= max) return false;\n\n    ch = state.src.charCodeAt(pos);\n\n    if (ch === 0x3C /* < */) return false;\n    if (ch === 0x3E /* > */) break;\n  }\n\n  url = state.src.slice(start + 1, pos);\n\n  if (AUTOLINK_RE.test(url)) {\n    fullUrl = state.md.normalizeLink(url);\n    if (!state.md.validateLink(fullUrl)) { return false; }\n\n    if (!silent) {\n      token         = state.push('link_open', 'a', 1);\n      token.attrs   = [ [ 'href', fullUrl ] ];\n      token.markup  = 'autolink';\n      token.info    = 'auto';\n\n      token         = state.push('text', '', 0);\n      token.content = state.md.normalizeLinkText(url);\n\n      token         = state.push('link_close', 'a', -1);\n      token.markup  = 'autolink';\n      token.info    = 'auto';\n    }\n\n    state.pos += url.length + 2;\n    return true;\n  }\n\n  if (EMAIL_RE.test(url)) {\n    fullUrl = state.md.normalizeLink('mailto:' + url);\n    if (!state.md.validateLink(fullUrl)) { return false; }\n\n    if (!silent) {\n      token         = state.push('link_open', 'a', 1);\n      token.attrs   = [ [ 'href', fullUrl ] ];\n      token.markup  = 'autolink';\n      token.info    = 'auto';\n\n      token         = state.push('text', '', 0);\n      token.content = state.md.normalizeLinkText(url);\n\n      token         = state.push('link_close', 'a', -1);\n      token.markup  = 'autolink';\n      token.info    = 'auto';\n    }\n\n    state.pos += url.length + 2;\n    return true;\n  }\n\n  return false;\n};\n","'use strict';\n\n\nmodule.exports = function block(state) {\n  var token;\n\n  if (state.inlineMode) {\n    token          = new state.Token('inline', '', 0);\n    token.content  = state.src;\n    token.map      = [ 0, 1 ];\n    token.children = [];\n    state.tokens.push(token);\n  } else {\n    state.md.block.parse(state.src, state.md, state.env, state.tokens);\n  }\n};\n","'use strict';\n\n\nvar emojies_defs      = require('./lib/data/full.json');\nvar emojies_shortcuts = require('./lib/data/shortcuts');\nvar bare_emoji_plugin = require('./bare');\n\n\nmodule.exports = function emoji_plugin(md, options) {\n  var defaults = {\n    defs: emojies_defs,\n    shortcuts: emojies_shortcuts,\n    enabled: []\n  };\n\n  var opts = md.utils.assign({}, defaults, options || {});\n\n  bare_emoji_plugin(md, opts);\n};\n","<template>\n  <PatchMeta :title=\"title\" />\n  <div class=\"container my-4 my-md-5\">\n    <span\n      class=\"markdown-body\"\n      :style=\"`background-color: ${VUE_APP_MAIN_BG_CSS_COLOR}; color: ${VUE_APP_MAIN_TEXT_CSS_COLOR};`\"\n      v-html=\"postHtml\"\n    />\n    <button\n      type=\"button\"\n      :style=\"`color: ${VUE_APP_MAIN_TEXT_CSS_COLOR};`\"\n      class=\"border btn mt-4\"\n      @click=\"hasHistory() ? router.go(-1) : router.push('/')\"\n    >\n      &laquo; Back\n    </button>\n  </div>\n</template>\n<script lang='ts'>\nimport { defineComponent, inject } from 'vue'\nimport { onBeforeRouteUpdate } from 'vue-router'\nimport router from '@/router'\nimport axios from 'redaxios'\nimport MarkdownIt from 'markdown-it'\nimport emoji from 'markdown-it-emoji'\nimport { PostIndex } from '@/types/PostIndex'\nimport PatchMeta from '@/components/PatchMeta.vue'\n\nconst { VUE_APP_MAIN_BG_CSS_COLOR = 'white', VUE_APP_MAIN_TEXT_CSS_COLOR = 'black' } = process.env\n\nconst markDownIt = new MarkdownIt({ html: true }).use(emoji)\n\nexport default defineComponent({\n  components: {\n    PatchMeta\n  },\n  props: {\n    section: {\n      type: String,\n      default: ''\n    },\n    id: {\n      type: String,\n      default: ''\n    }\n  },\n  async setup (props) {\n    /* Hacky navigation when a href link is clicked within the compiled html Post */\n    onBeforeRouteUpdate(() => {\n      location.reload()\n    })\n\n    // Fetch Post markdown and compile it to html\n    const postsIndex: PostIndex[] = inject<PostIndex[]>('postsIndex', [])\n    const { url = '' } = postsIndex.find(({ id }) => id === props.id) || {}\n    const { data: markDownSource } = await axios.get(url)\n    const postHtml = markDownIt.render(markDownSource)\n\n    // Patch page title\n    const [, title] = markDownSource.split('#')\n\n    // Back button helper\n    const hasHistory = () => window.history?.length > 2\n\n    return {\n      hasHistory,\n      postHtml,\n      router,\n      title,\n      VUE_APP_MAIN_BG_CSS_COLOR,\n      VUE_APP_MAIN_TEXT_CSS_COLOR\n    }\n  }\n})\n</script>\n","\nimport { defineComponent, inject } from 'vue'\nimport { onBeforeRouteUpdate } from 'vue-router'\nimport router from '@/router'\nimport axios from 'redaxios'\nimport MarkdownIt from 'markdown-it'\nimport emoji from 'markdown-it-emoji'\nimport { PostIndex } from '@/types/PostIndex'\nimport PatchMeta from '@/components/PatchMeta.vue'\n\nconst { VUE_APP_MAIN_BG_CSS_COLOR = 'white', VUE_APP_MAIN_TEXT_CSS_COLOR = 'black' } = process.env\n\nconst markDownIt = new MarkdownIt({ html: true }).use(emoji)\n\nexport default defineComponent({\n  components: {\n    PatchMeta\n  },\n  props: {\n    section: {\n      type: String,\n      default: ''\n    },\n    id: {\n      type: String,\n      default: ''\n    }\n  },\n  async setup (props) {\n    /* Hacky navigation when a href link is clicked within the compiled html Post */\n    onBeforeRouteUpdate(() => {\n      location.reload()\n    })\n\n    // Fetch Post markdown and compile it to html\n    const postsIndex: PostIndex[] = inject<PostIndex[]>('postsIndex', [])\n    const { url = '' } = postsIndex.find(({ id }) => id === props.id) || {}\n    const { data: markDownSource } = await axios.get(url)\n    const postHtml = markDownIt.render(markDownSource)\n\n    // Patch page title\n    const [, title] = markDownSource.split('#')\n\n    // Back button helper\n    const hasHistory = () => window.history?.length > 2\n\n    return {\n      hasHistory,\n      postHtml,\n      router,\n      title,\n      VUE_APP_MAIN_BG_CSS_COLOR,\n      VUE_APP_MAIN_TEXT_CSS_COLOR\n    }\n  }\n})\n","import { render } from \"./Post.vue?vue&type=template&id=700c7ba2\"\nimport script from \"./Post.vue?vue&type=script&lang=ts\"\nexport * from \"./Post.vue?vue&type=script&lang=ts\"\nscript.render = render\n\nexport default script","// Convert input options to more useable format\n// and compile search regexp\n\n'use strict';\n\n\nfunction quoteRE(str) {\n  return str.replace(/[.?*+^$[\\]\\\\(){}|-]/g, '\\\\$&');\n}\n\n\nmodule.exports = function normalize_opts(options) {\n  var emojies = options.defs,\n      shortcuts;\n\n  // Filter emojies by whitelist, if needed\n  if (options.enabled.length) {\n    emojies = Object.keys(emojies).reduce(function (acc, key) {\n      if (options.enabled.indexOf(key) >= 0) {\n        acc[key] = emojies[key];\n      }\n      return acc;\n    }, {});\n  }\n\n  // Flatten shortcuts to simple object: { alias: emoji_name }\n  shortcuts = Object.keys(options.shortcuts).reduce(function (acc, key) {\n    // Skip aliases for filtered emojies, to reduce regexp\n    if (!emojies[key]) { return acc; }\n\n    if (Array.isArray(options.shortcuts[key])) {\n      options.shortcuts[key].forEach(function (alias) {\n        acc[alias] = key;\n      });\n      return acc;\n    }\n\n    acc[options.shortcuts[key]] = key;\n    return acc;\n  }, {});\n\n  var keys = Object.keys(emojies),\n      names;\n\n  // If no definitions are given, return empty regex to avoid replacements with 'undefined'.\n  if (keys.length === 0) {\n    names = '^$';\n  } else {\n    // Compile regexp\n    names = keys\n      .map(function (name) { return ':' + name + ':'; })\n      .concat(Object.keys(shortcuts))\n      .sort()\n      .reverse()\n      .map(function (name) { return quoteRE(name); })\n      .join('|');\n  }\n  var scanRE = RegExp(names);\n  var replaceRE = RegExp(names, 'g');\n\n  return {\n    defs: emojies,\n    shortcuts: shortcuts,\n    scanRE: scanRE,\n    replaceRE: replaceRE\n  };\n};\n","// Proceess '\\n'\n\n'use strict';\n\nvar isSpace = require('../common/utils').isSpace;\n\n\nmodule.exports = function newline(state, silent) {\n  var pmax, max, pos = state.pos;\n\n  if (state.src.charCodeAt(pos) !== 0x0A/* \\n */) { return false; }\n\n  pmax = state.pending.length - 1;\n  max = state.posMax;\n\n  // '  \\n' -> hardbreak\n  // Lookup in pending chars is bad practice! Don't copy to other rules!\n  // Pending string is stored in concat mode, indexed lookups will cause\n  // convertion to flat mode.\n  if (!silent) {\n    if (pmax >= 0 && state.pending.charCodeAt(pmax) === 0x20) {\n      if (pmax >= 1 && state.pending.charCodeAt(pmax - 1) === 0x20) {\n        state.pending = state.pending.replace(/ +$/, '');\n        state.push('hardbreak', 'br', 0);\n      } else {\n        state.pending = state.pending.slice(0, -1);\n        state.push('softbreak', 'br', 0);\n      }\n\n    } else {\n      state.push('softbreak', 'br', 0);\n    }\n  }\n\n  pos++;\n\n  // skip heading spaces for next line\n  while (pos < max && isSpace(state.src.charCodeAt(pos))) { pos++; }\n\n  state.pos = pos;\n  return true;\n};\n","// Commonmark default options\n\n'use strict';\n\n\nmodule.exports = {\n  options: {\n    html:         true,         // Enable HTML tags in source\n    xhtmlOut:     true,         // Use '/' to close single tags (<br />)\n    breaks:       false,        // Convert '\\n' in paragraphs into <br>\n    langPrefix:   'language-',  // CSS language prefix for fenced blocks\n    linkify:      false,        // autoconvert URL-like texts to links\n\n    // Enable some language-neutral replacements + quotes beautification\n    typographer:  false,\n\n    // Double + single quotes replacement pairs, when typographer enabled,\n    // and smartquotes on. Could be either a String or an Array.\n    //\n    // For example, you can use '«»„“' for Russian, '„“‚‘' for German,\n    // and ['«\\xA0', '\\xA0»', '‹\\xA0', '\\xA0›'] for French (including nbsp).\n    quotes: '\\u201c\\u201d\\u2018\\u2019', /* “”‘’ */\n\n    // Highlighter function. Should return escaped HTML,\n    // or '' if the source string is not changed and should be escaped externaly.\n    // If result starts with <pre... internal wrapper is skipped.\n    //\n    // function (/*str, lang*/) { return ''; }\n    //\n    highlight: null,\n\n    maxNesting:   20            // Internal protection, recursion limit\n  },\n\n  components: {\n\n    core: {\n      rules: [\n        'normalize',\n        'block',\n        'inline'\n      ]\n    },\n\n    block: {\n      rules: [\n        'blockquote',\n        'code',\n        'fence',\n        'heading',\n        'hr',\n        'html_block',\n        'lheading',\n        'list',\n        'reference',\n        'paragraph'\n      ]\n    },\n\n    inline: {\n      rules: [\n        'autolink',\n        'backticks',\n        'emphasis',\n        'entity',\n        'escape',\n        'html_inline',\n        'image',\n        'link',\n        'newline',\n        'text'\n      ],\n      rules2: [\n        'balance_pairs',\n        'emphasis',\n        'text_collapse'\n      ]\n    }\n  }\n};\n","\n'use strict';\n\n\nmodule.exports = function format(url) {\n  var result = '';\n\n  result += url.protocol || '';\n  result += url.slashes ? '//' : '';\n  result += url.auth ? url.auth + '@' : '';\n\n  if (url.hostname && url.hostname.indexOf(':') !== -1) {\n    // ipv6 address\n    result += '[' + url.hostname + ']';\n  } else {\n    result += url.hostname || '';\n  }\n\n  result += url.port ? ':' + url.port : '';\n  result += url.pathname || '';\n  result += url.search || '';\n  result += url.hash || '';\n\n  return result;\n};\n","// Paragraph\n\n'use strict';\n\n\nmodule.exports = function paragraph(state, startLine/*, endLine*/) {\n  var content, terminate, i, l, token, oldParentType,\n      nextLine = startLine + 1,\n      terminatorRules = state.md.block.ruler.getRules('paragraph'),\n      endLine = state.lineMax;\n\n  oldParentType = state.parentType;\n  state.parentType = 'paragraph';\n\n  // jump line-by-line until empty one or EOF\n  for (; nextLine < endLine && !state.isEmpty(nextLine); nextLine++) {\n    // this would be a code block normally, but after paragraph\n    // it's considered a lazy continuation regardless of what's there\n    if (state.sCount[nextLine] - state.blkIndent > 3) { continue; }\n\n    // quirk for blockquotes, this line should already be checked by that rule\n    if (state.sCount[nextLine] < 0) { continue; }\n\n    // Some tags can terminate paragraph without empty line.\n    terminate = false;\n    for (i = 0, l = terminatorRules.length; i < l; i++) {\n      if (terminatorRules[i](state, nextLine, endLine, true)) {\n        terminate = true;\n        break;\n      }\n    }\n    if (terminate) { break; }\n  }\n\n  content = state.getLines(startLine, nextLine, state.blkIndent, false).trim();\n\n  state.line = nextLine;\n\n  token          = state.push('paragraph_open', 'p', 1);\n  token.map      = [ startLine, state.line ];\n\n  token          = state.push('inline', '', 0);\n  token.content  = content;\n  token.map      = [ startLine, state.line ];\n  token.children = [];\n\n  token          = state.push('paragraph_close', 'p', -1);\n\n  state.parentType = oldParentType;\n\n  return true;\n};\n","var isObject = require('../internals/is-object');\nvar classof = require('../internals/classof-raw');\nvar wellKnownSymbol = require('../internals/well-known-symbol');\n\nvar MATCH = wellKnownSymbol('match');\n\n// `IsRegExp` abstract operation\n// https://tc39.es/ecma262/#sec-isregexp\nmodule.exports = function (it) {\n  var isRegExp;\n  return isObject(it) && ((isRegExp = it[MATCH]) !== undefined ? !!isRegExp : classof(it) == 'RegExp');\n};\n","/**\n * class Ruler\n *\n * Helper class, used by [[MarkdownIt#core]], [[MarkdownIt#block]] and\n * [[MarkdownIt#inline]] to manage sequences of functions (rules):\n *\n * - keep rules in defined order\n * - assign the name to each rule\n * - enable/disable rules\n * - add/replace rules\n * - allow assign rules to additional named chains (in the same)\n * - cacheing lists of active rules\n *\n * You will not need use this class directly until write plugins. For simple\n * rules control use [[MarkdownIt.disable]], [[MarkdownIt.enable]] and\n * [[MarkdownIt.use]].\n **/\n'use strict';\n\n\n/**\n * new Ruler()\n **/\nfunction Ruler() {\n  // List of added rules. Each element is:\n  //\n  // {\n  //   name: XXX,\n  //   enabled: Boolean,\n  //   fn: Function(),\n  //   alt: [ name2, name3 ]\n  // }\n  //\n  this.__rules__ = [];\n\n  // Cached rule chains.\n  //\n  // First level - chain name, '' for default.\n  // Second level - diginal anchor for fast filtering by charcodes.\n  //\n  this.__cache__ = null;\n}\n\n////////////////////////////////////////////////////////////////////////////////\n// Helper methods, should not be used directly\n\n\n// Find rule index by name\n//\nRuler.prototype.__find__ = function (name) {\n  for (var i = 0; i < this.__rules__.length; i++) {\n    if (this.__rules__[i].name === name) {\n      return i;\n    }\n  }\n  return -1;\n};\n\n\n// Build rules lookup cache\n//\nRuler.prototype.__compile__ = function () {\n  var self = this;\n  var chains = [ '' ];\n\n  // collect unique names\n  self.__rules__.forEach(function (rule) {\n    if (!rule.enabled) { return; }\n\n    rule.alt.forEach(function (altName) {\n      if (chains.indexOf(altName) < 0) {\n        chains.push(altName);\n      }\n    });\n  });\n\n  self.__cache__ = {};\n\n  chains.forEach(function (chain) {\n    self.__cache__[chain] = [];\n    self.__rules__.forEach(function (rule) {\n      if (!rule.enabled) { return; }\n\n      if (chain && rule.alt.indexOf(chain) < 0) { return; }\n\n      self.__cache__[chain].push(rule.fn);\n    });\n  });\n};\n\n\n/**\n * Ruler.at(name, fn [, options])\n * - name (String): rule name to replace.\n * - fn (Function): new rule function.\n * - options (Object): new rule options (not mandatory).\n *\n * Replace rule by name with new function & options. Throws error if name not\n * found.\n *\n * ##### Options:\n *\n * - __alt__ - array with names of \"alternate\" chains.\n *\n * ##### Example\n *\n * Replace existing typographer replacement rule with new one:\n *\n * ```javascript\n * var md = require('markdown-it')();\n *\n * md.core.ruler.at('replacements', function replace(state) {\n *   //...\n * });\n * ```\n **/\nRuler.prototype.at = function (name, fn, options) {\n  var index = this.__find__(name);\n  var opt = options || {};\n\n  if (index === -1) { throw new Error('Parser rule not found: ' + name); }\n\n  this.__rules__[index].fn = fn;\n  this.__rules__[index].alt = opt.alt || [];\n  this.__cache__ = null;\n};\n\n\n/**\n * Ruler.before(beforeName, ruleName, fn [, options])\n * - beforeName (String): new rule will be added before this one.\n * - ruleName (String): name of added rule.\n * - fn (Function): rule function.\n * - options (Object): rule options (not mandatory).\n *\n * Add new rule to chain before one with given name. See also\n * [[Ruler.after]], [[Ruler.push]].\n *\n * ##### Options:\n *\n * - __alt__ - array with names of \"alternate\" chains.\n *\n * ##### Example\n *\n * ```javascript\n * var md = require('markdown-it')();\n *\n * md.block.ruler.before('paragraph', 'my_rule', function replace(state) {\n *   //...\n * });\n * ```\n **/\nRuler.prototype.before = function (beforeName, ruleName, fn, options) {\n  var index = this.__find__(beforeName);\n  var opt = options || {};\n\n  if (index === -1) { throw new Error('Parser rule not found: ' + beforeName); }\n\n  this.__rules__.splice(index, 0, {\n    name: ruleName,\n    enabled: true,\n    fn: fn,\n    alt: opt.alt || []\n  });\n\n  this.__cache__ = null;\n};\n\n\n/**\n * Ruler.after(afterName, ruleName, fn [, options])\n * - afterName (String): new rule will be added after this one.\n * - ruleName (String): name of added rule.\n * - fn (Function): rule function.\n * - options (Object): rule options (not mandatory).\n *\n * Add new rule to chain after one with given name. See also\n * [[Ruler.before]], [[Ruler.push]].\n *\n * ##### Options:\n *\n * - __alt__ - array with names of \"alternate\" chains.\n *\n * ##### Example\n *\n * ```javascript\n * var md = require('markdown-it')();\n *\n * md.inline.ruler.after('text', 'my_rule', function replace(state) {\n *   //...\n * });\n * ```\n **/\nRuler.prototype.after = function (afterName, ruleName, fn, options) {\n  var index = this.__find__(afterName);\n  var opt = options || {};\n\n  if (index === -1) { throw new Error('Parser rule not found: ' + afterName); }\n\n  this.__rules__.splice(index + 1, 0, {\n    name: ruleName,\n    enabled: true,\n    fn: fn,\n    alt: opt.alt || []\n  });\n\n  this.__cache__ = null;\n};\n\n/**\n * Ruler.push(ruleName, fn [, options])\n * - ruleName (String): name of added rule.\n * - fn (Function): rule function.\n * - options (Object): rule options (not mandatory).\n *\n * Push new rule to the end of chain. See also\n * [[Ruler.before]], [[Ruler.after]].\n *\n * ##### Options:\n *\n * - __alt__ - array with names of \"alternate\" chains.\n *\n * ##### Example\n *\n * ```javascript\n * var md = require('markdown-it')();\n *\n * md.core.ruler.push('my_rule', function replace(state) {\n *   //...\n * });\n * ```\n **/\nRuler.prototype.push = function (ruleName, fn, options) {\n  var opt = options || {};\n\n  this.__rules__.push({\n    name: ruleName,\n    enabled: true,\n    fn: fn,\n    alt: opt.alt || []\n  });\n\n  this.__cache__ = null;\n};\n\n\n/**\n * Ruler.enable(list [, ignoreInvalid]) -> Array\n * - list (String|Array): list of rule names to enable.\n * - ignoreInvalid (Boolean): set `true` to ignore errors when rule not found.\n *\n * Enable rules with given names. If any rule name not found - throw Error.\n * Errors can be disabled by second param.\n *\n * Returns list of found rule names (if no exception happened).\n *\n * See also [[Ruler.disable]], [[Ruler.enableOnly]].\n **/\nRuler.prototype.enable = function (list, ignoreInvalid) {\n  if (!Array.isArray(list)) { list = [ list ]; }\n\n  var result = [];\n\n  // Search by name and enable\n  list.forEach(function (name) {\n    var idx = this.__find__(name);\n\n    if (idx < 0) {\n      if (ignoreInvalid) { return; }\n      throw new Error('Rules manager: invalid rule name ' + name);\n    }\n    this.__rules__[idx].enabled = true;\n    result.push(name);\n  }, this);\n\n  this.__cache__ = null;\n  return result;\n};\n\n\n/**\n * Ruler.enableOnly(list [, ignoreInvalid])\n * - list (String|Array): list of rule names to enable (whitelist).\n * - ignoreInvalid (Boolean): set `true` to ignore errors when rule not found.\n *\n * Enable rules with given names, and disable everything else. If any rule name\n * not found - throw Error. Errors can be disabled by second param.\n *\n * See also [[Ruler.disable]], [[Ruler.enable]].\n **/\nRuler.prototype.enableOnly = function (list, ignoreInvalid) {\n  if (!Array.isArray(list)) { list = [ list ]; }\n\n  this.__rules__.forEach(function (rule) { rule.enabled = false; });\n\n  this.enable(list, ignoreInvalid);\n};\n\n\n/**\n * Ruler.disable(list [, ignoreInvalid]) -> Array\n * - list (String|Array): list of rule names to disable.\n * - ignoreInvalid (Boolean): set `true` to ignore errors when rule not found.\n *\n * Disable rules with given names. If any rule name not found - throw Error.\n * Errors can be disabled by second param.\n *\n * Returns list of found rule names (if no exception happened).\n *\n * See also [[Ruler.enable]], [[Ruler.enableOnly]].\n **/\nRuler.prototype.disable = function (list, ignoreInvalid) {\n  if (!Array.isArray(list)) { list = [ list ]; }\n\n  var result = [];\n\n  // Search by name and disable\n  list.forEach(function (name) {\n    var idx = this.__find__(name);\n\n    if (idx < 0) {\n      if (ignoreInvalid) { return; }\n      throw new Error('Rules manager: invalid rule name ' + name);\n    }\n    this.__rules__[idx].enabled = false;\n    result.push(name);\n  }, this);\n\n  this.__cache__ = null;\n  return result;\n};\n\n\n/**\n * Ruler.getRules(chainName) -> Array\n *\n * Return array of active functions (rules) for given chain name. It analyzes\n * rules configuration, compiles caches if not exists and returns result.\n *\n * Default chain name is `''` (empty string). It can't be skipped. That's\n * done intentionally, to keep signature monomorphic for high speed.\n **/\nRuler.prototype.getRules = function (chainName) {\n  if (this.__cache__ === null) {\n    this.__compile__();\n  }\n\n  // Chain can be empty, if rules disabled. But we still have to return Array.\n  return this.__cache__[chainName] || [];\n};\n\nmodule.exports = Ruler;\n","// Emojies & shortcuts replacement logic.\n//\n// Note: In theory, it could be faster to parse :smile: in inline chain and\n// leave only shortcuts here. But, who care...\n//\n\n'use strict';\n\n\nmodule.exports = function create_rule(md, emojies, shortcuts, scanRE, replaceRE) {\n  var arrayReplaceAt = md.utils.arrayReplaceAt,\n      ucm = md.utils.lib.ucmicro,\n      ZPCc = new RegExp([ ucm.Z.source, ucm.P.source, ucm.Cc.source ].join('|'));\n\n  function splitTextToken(text, level, Token) {\n    var token, last_pos = 0, nodes = [];\n\n    text.replace(replaceRE, function (match, offset, src) {\n      var emoji_name;\n      // Validate emoji name\n      if (shortcuts.hasOwnProperty(match)) {\n        // replace shortcut with full name\n        emoji_name = shortcuts[match];\n\n        // Don't allow letters before any shortcut (as in no \":/\" in http://)\n        if (offset > 0 && !ZPCc.test(src[offset - 1])) {\n          return;\n        }\n\n        // Don't allow letters after any shortcut\n        if (offset + match.length < src.length && !ZPCc.test(src[offset + match.length])) {\n          return;\n        }\n      } else {\n        emoji_name = match.slice(1, -1);\n      }\n\n      // Add new tokens to pending list\n      if (offset > last_pos) {\n        token         = new Token('text', '', 0);\n        token.content = text.slice(last_pos, offset);\n        nodes.push(token);\n      }\n\n      token         = new Token('emoji', '', 0);\n      token.markup  = emoji_name;\n      token.content = emojies[emoji_name];\n      nodes.push(token);\n\n      last_pos = offset + match.length;\n    });\n\n    if (last_pos < text.length) {\n      token         = new Token('text', '', 0);\n      token.content = text.slice(last_pos);\n      nodes.push(token);\n    }\n\n    return nodes;\n  }\n\n  return function emoji_replace(state) {\n    var i, j, l, tokens, token,\n        blockTokens = state.tokens,\n        autolinkLevel = 0;\n\n    for (j = 0, l = blockTokens.length; j < l; j++) {\n      if (blockTokens[j].type !== 'inline') { continue; }\n      tokens = blockTokens[j].children;\n\n      // We scan from the end, to keep position when new tags added.\n      // Use reversed logic in links start/end match\n      for (i = tokens.length - 1; i >= 0; i--) {\n        token = tokens[i];\n\n        if (token.type === 'link_open' || token.type === 'link_close') {\n          if (token.info === 'auto') { autolinkLevel -= token.nesting; }\n        }\n\n        if (token.type === 'text' && autolinkLevel === 0 && scanRE.test(token.content)) {\n          // replace current node\n          blockTokens[j].children = tokens = arrayReplaceAt(\n            tokens, i, splitTextToken(token.content, token.level, state.Token)\n          );\n        }\n      }\n    }\n  };\n};\n","// Parse backticks\n\n'use strict';\n\n\nmodule.exports = function backtick(state, silent) {\n  var start, max, marker, token, matchStart, matchEnd, openerLength, closerLength,\n      pos = state.pos,\n      ch = state.src.charCodeAt(pos);\n\n  if (ch !== 0x60/* ` */) { return false; }\n\n  start = pos;\n  pos++;\n  max = state.posMax;\n\n  // scan marker length\n  while (pos < max && state.src.charCodeAt(pos) === 0x60/* ` */) { pos++; }\n\n  marker = state.src.slice(start, pos);\n  openerLength = marker.length;\n\n  if (state.backticksScanned && (state.backticks[openerLength] || 0) <= start) {\n    if (!silent) state.pending += marker;\n    state.pos += openerLength;\n    return true;\n  }\n\n  matchStart = matchEnd = pos;\n\n  // Nothing found in the cache, scan until the end of the line (or until marker is found)\n  while ((matchStart = state.src.indexOf('`', matchEnd)) !== -1) {\n    matchEnd = matchStart + 1;\n\n    // scan marker length\n    while (matchEnd < max && state.src.charCodeAt(matchEnd) === 0x60/* ` */) { matchEnd++; }\n\n    closerLength = matchEnd - matchStart;\n\n    if (closerLength === openerLength) {\n      // Found matching closer length.\n      if (!silent) {\n        token     = state.push('code_inline', 'code', 0);\n        token.markup  = marker;\n        token.content = state.src.slice(pos, matchStart)\n          .replace(/\\n/g, ' ')\n          .replace(/^ (.+) $/, '$1');\n      }\n      state.pos = matchEnd;\n      return true;\n    }\n\n    // Some different length found, put it in cache as upper limit of where closer can be found\n    state.backticks[closerLength] = matchStart;\n  }\n\n  // Scanned through the end, didn't find anything\n  state.backticksScanned = true;\n\n  if (!silent) state.pending += marker;\n  state.pos += openerLength;\n  return true;\n};\n","// Lists\n\n'use strict';\n\nvar isSpace = require('../common/utils').isSpace;\n\n\n// Search `[-+*][\\n ]`, returns next pos after marker on success\n// or -1 on fail.\nfunction skipBulletListMarker(state, startLine) {\n  var marker, pos, max, ch;\n\n  pos = state.bMarks[startLine] + state.tShift[startLine];\n  max = state.eMarks[startLine];\n\n  marker = state.src.charCodeAt(pos++);\n  // Check bullet\n  if (marker !== 0x2A/* * */ &&\n      marker !== 0x2D/* - */ &&\n      marker !== 0x2B/* + */) {\n    return -1;\n  }\n\n  if (pos < max) {\n    ch = state.src.charCodeAt(pos);\n\n    if (!isSpace(ch)) {\n      // \" -test \" - is not a list item\n      return -1;\n    }\n  }\n\n  return pos;\n}\n\n// Search `\\d+[.)][\\n ]`, returns next pos after marker on success\n// or -1 on fail.\nfunction skipOrderedListMarker(state, startLine) {\n  var ch,\n      start = state.bMarks[startLine] + state.tShift[startLine],\n      pos = start,\n      max = state.eMarks[startLine];\n\n  // List marker should have at least 2 chars (digit + dot)\n  if (pos + 1 >= max) { return -1; }\n\n  ch = state.src.charCodeAt(pos++);\n\n  if (ch < 0x30/* 0 */ || ch > 0x39/* 9 */) { return -1; }\n\n  for (;;) {\n    // EOL -> fail\n    if (pos >= max) { return -1; }\n\n    ch = state.src.charCodeAt(pos++);\n\n    if (ch >= 0x30/* 0 */ && ch <= 0x39/* 9 */) {\n\n      // List marker should have no more than 9 digits\n      // (prevents integer overflow in browsers)\n      if (pos - start >= 10) { return -1; }\n\n      continue;\n    }\n\n    // found valid marker\n    if (ch === 0x29/* ) */ || ch === 0x2e/* . */) {\n      break;\n    }\n\n    return -1;\n  }\n\n\n  if (pos < max) {\n    ch = state.src.charCodeAt(pos);\n\n    if (!isSpace(ch)) {\n      // \" 1.test \" - is not a list item\n      return -1;\n    }\n  }\n  return pos;\n}\n\nfunction markTightParagraphs(state, idx) {\n  var i, l,\n      level = state.level + 2;\n\n  for (i = idx + 2, l = state.tokens.length - 2; i < l; i++) {\n    if (state.tokens[i].level === level && state.tokens[i].type === 'paragraph_open') {\n      state.tokens[i + 2].hidden = true;\n      state.tokens[i].hidden = true;\n      i += 2;\n    }\n  }\n}\n\n\nmodule.exports = function list(state, startLine, endLine, silent) {\n  var ch,\n      contentStart,\n      i,\n      indent,\n      indentAfterMarker,\n      initial,\n      isOrdered,\n      itemLines,\n      l,\n      listLines,\n      listTokIdx,\n      markerCharCode,\n      markerValue,\n      max,\n      nextLine,\n      offset,\n      oldListIndent,\n      oldParentType,\n      oldSCount,\n      oldTShift,\n      oldTight,\n      pos,\n      posAfterMarker,\n      prevEmptyEnd,\n      start,\n      terminate,\n      terminatorRules,\n      token,\n      isTerminatingParagraph = false,\n      tight = true;\n\n  // if it's indented more than 3 spaces, it should be a code block\n  if (state.sCount[startLine] - state.blkIndent >= 4) { return false; }\n\n  // Special case:\n  //  - item 1\n  //   - item 2\n  //    - item 3\n  //     - item 4\n  //      - this one is a paragraph continuation\n  if (state.listIndent >= 0 &&\n      state.sCount[startLine] - state.listIndent >= 4 &&\n      state.sCount[startLine] < state.blkIndent) {\n    return false;\n  }\n\n  // limit conditions when list can interrupt\n  // a paragraph (validation mode only)\n  if (silent && state.parentType === 'paragraph') {\n    // Next list item should still terminate previous list item;\n    //\n    // This code can fail if plugins use blkIndent as well as lists,\n    // but I hope the spec gets fixed long before that happens.\n    //\n    if (state.tShift[startLine] >= state.blkIndent) {\n      isTerminatingParagraph = true;\n    }\n  }\n\n  // Detect list type and position after marker\n  if ((posAfterMarker = skipOrderedListMarker(state, startLine)) >= 0) {\n    isOrdered = true;\n    start = state.bMarks[startLine] + state.tShift[startLine];\n    markerValue = Number(state.src.substr(start, posAfterMarker - start - 1));\n\n    // If we're starting a new ordered list right after\n    // a paragraph, it should start with 1.\n    if (isTerminatingParagraph && markerValue !== 1) return false;\n\n  } else if ((posAfterMarker = skipBulletListMarker(state, startLine)) >= 0) {\n    isOrdered = false;\n\n  } else {\n    return false;\n  }\n\n  // If we're starting a new unordered list right after\n  // a paragraph, first line should not be empty.\n  if (isTerminatingParagraph) {\n    if (state.skipSpaces(posAfterMarker) >= state.eMarks[startLine]) return false;\n  }\n\n  // We should terminate list on style change. Remember first one to compare.\n  markerCharCode = state.src.charCodeAt(posAfterMarker - 1);\n\n  // For validation mode we can terminate immediately\n  if (silent) { return true; }\n\n  // Start list\n  listTokIdx = state.tokens.length;\n\n  if (isOrdered) {\n    token       = state.push('ordered_list_open', 'ol', 1);\n    if (markerValue !== 1) {\n      token.attrs = [ [ 'start', markerValue ] ];\n    }\n\n  } else {\n    token       = state.push('bullet_list_open', 'ul', 1);\n  }\n\n  token.map    = listLines = [ startLine, 0 ];\n  token.markup = String.fromCharCode(markerCharCode);\n\n  //\n  // Iterate list items\n  //\n\n  nextLine = startLine;\n  prevEmptyEnd = false;\n  terminatorRules = state.md.block.ruler.getRules('list');\n\n  oldParentType = state.parentType;\n  state.parentType = 'list';\n\n  while (nextLine < endLine) {\n    pos = posAfterMarker;\n    max = state.eMarks[nextLine];\n\n    initial = offset = state.sCount[nextLine] + posAfterMarker - (state.bMarks[startLine] + state.tShift[startLine]);\n\n    while (pos < max) {\n      ch = state.src.charCodeAt(pos);\n\n      if (ch === 0x09) {\n        offset += 4 - (offset + state.bsCount[nextLine]) % 4;\n      } else if (ch === 0x20) {\n        offset++;\n      } else {\n        break;\n      }\n\n      pos++;\n    }\n\n    contentStart = pos;\n\n    if (contentStart >= max) {\n      // trimming space in \"-    \\n  3\" case, indent is 1 here\n      indentAfterMarker = 1;\n    } else {\n      indentAfterMarker = offset - initial;\n    }\n\n    // If we have more than 4 spaces, the indent is 1\n    // (the rest is just indented code block)\n    if (indentAfterMarker > 4) { indentAfterMarker = 1; }\n\n    // \"  -  test\"\n    //  ^^^^^ - calculating total length of this thing\n    indent = initial + indentAfterMarker;\n\n    // Run subparser & write tokens\n    token        = state.push('list_item_open', 'li', 1);\n    token.markup = String.fromCharCode(markerCharCode);\n    token.map    = itemLines = [ startLine, 0 ];\n\n    // change current state, then restore it after parser subcall\n    oldTight = state.tight;\n    oldTShift = state.tShift[startLine];\n    oldSCount = state.sCount[startLine];\n\n    //  - example list\n    // ^ listIndent position will be here\n    //   ^ blkIndent position will be here\n    //\n    oldListIndent = state.listIndent;\n    state.listIndent = state.blkIndent;\n    state.blkIndent = indent;\n\n    state.tight = true;\n    state.tShift[startLine] = contentStart - state.bMarks[startLine];\n    state.sCount[startLine] = offset;\n\n    if (contentStart >= max && state.isEmpty(startLine + 1)) {\n      // workaround for this case\n      // (list item is empty, list terminates before \"foo\"):\n      // ~~~~~~~~\n      //   -\n      //\n      //     foo\n      // ~~~~~~~~\n      state.line = Math.min(state.line + 2, endLine);\n    } else {\n      state.md.block.tokenize(state, startLine, endLine, true);\n    }\n\n    // If any of list item is tight, mark list as tight\n    if (!state.tight || prevEmptyEnd) {\n      tight = false;\n    }\n    // Item become loose if finish with empty line,\n    // but we should filter last element, because it means list finish\n    prevEmptyEnd = (state.line - startLine) > 1 && state.isEmpty(state.line - 1);\n\n    state.blkIndent = state.listIndent;\n    state.listIndent = oldListIndent;\n    state.tShift[startLine] = oldTShift;\n    state.sCount[startLine] = oldSCount;\n    state.tight = oldTight;\n\n    token        = state.push('list_item_close', 'li', -1);\n    token.markup = String.fromCharCode(markerCharCode);\n\n    nextLine = startLine = state.line;\n    itemLines[1] = nextLine;\n    contentStart = state.bMarks[startLine];\n\n    if (nextLine >= endLine) { break; }\n\n    //\n    // Try to check if list is terminated or continued.\n    //\n    if (state.sCount[nextLine] < state.blkIndent) { break; }\n\n    // if it's indented more than 3 spaces, it should be a code block\n    if (state.sCount[startLine] - state.blkIndent >= 4) { break; }\n\n    // fail if terminating block found\n    terminate = false;\n    for (i = 0, l = terminatorRules.length; i < l; i++) {\n      if (terminatorRules[i](state, nextLine, endLine, true)) {\n        terminate = true;\n        break;\n      }\n    }\n    if (terminate) { break; }\n\n    // fail if list has another type\n    if (isOrdered) {\n      posAfterMarker = skipOrderedListMarker(state, nextLine);\n      if (posAfterMarker < 0) { break; }\n    } else {\n      posAfterMarker = skipBulletListMarker(state, nextLine);\n      if (posAfterMarker < 0) { break; }\n    }\n\n    if (markerCharCode !== state.src.charCodeAt(posAfterMarker - 1)) { break; }\n  }\n\n  // Finalize list\n  if (isOrdered) {\n    token = state.push('ordered_list_close', 'ol', -1);\n  } else {\n    token = state.push('bullet_list_close', 'ul', -1);\n  }\n  token.markup = String.fromCharCode(markerCharCode);\n\n  listLines[1] = nextLine;\n  state.line = nextLine;\n\n  state.parentType = oldParentType;\n\n  // mark paragraphs tight if needed\n  if (tight) {\n    markTightParagraphs(state, listTokIdx);\n  }\n\n  return true;\n};\n","// Normalize input string\n\n'use strict';\n\n\n// https://spec.commonmark.org/0.29/#line-ending\nvar NEWLINES_RE  = /\\r\\n?|\\n/g;\nvar NULL_RE      = /\\0/g;\n\n\nmodule.exports = function normalize(state) {\n  var str;\n\n  // Normalize newlines\n  str = state.src.replace(NEWLINES_RE, '\\n');\n\n  // Replace NULL characters\n  str = str.replace(NULL_RE, '\\uFFFD');\n\n  state.src = str;\n};\n","/** internal\n * class ParserInline\n *\n * Tokenizes paragraph content.\n **/\n'use strict';\n\n\nvar Ruler           = require('./ruler');\n\n\n////////////////////////////////////////////////////////////////////////////////\n// Parser rules\n\nvar _rules = [\n  [ 'text',            require('./rules_inline/text') ],\n  [ 'newline',         require('./rules_inline/newline') ],\n  [ 'escape',          require('./rules_inline/escape') ],\n  [ 'backticks',       require('./rules_inline/backticks') ],\n  [ 'strikethrough',   require('./rules_inline/strikethrough').tokenize ],\n  [ 'emphasis',        require('./rules_inline/emphasis').tokenize ],\n  [ 'link',            require('./rules_inline/link') ],\n  [ 'image',           require('./rules_inline/image') ],\n  [ 'autolink',        require('./rules_inline/autolink') ],\n  [ 'html_inline',     require('./rules_inline/html_inline') ],\n  [ 'entity',          require('./rules_inline/entity') ]\n];\n\nvar _rules2 = [\n  [ 'balance_pairs',   require('./rules_inline/balance_pairs') ],\n  [ 'strikethrough',   require('./rules_inline/strikethrough').postProcess ],\n  [ 'emphasis',        require('./rules_inline/emphasis').postProcess ],\n  [ 'text_collapse',   require('./rules_inline/text_collapse') ]\n];\n\n\n/**\n * new ParserInline()\n **/\nfunction ParserInline() {\n  var i;\n\n  /**\n   * ParserInline#ruler -> Ruler\n   *\n   * [[Ruler]] instance. Keep configuration of inline rules.\n   **/\n  this.ruler = new Ruler();\n\n  for (i = 0; i < _rules.length; i++) {\n    this.ruler.push(_rules[i][0], _rules[i][1]);\n  }\n\n  /**\n   * ParserInline#ruler2 -> Ruler\n   *\n   * [[Ruler]] instance. Second ruler used for post-processing\n   * (e.g. in emphasis-like rules).\n   **/\n  this.ruler2 = new Ruler();\n\n  for (i = 0; i < _rules2.length; i++) {\n    this.ruler2.push(_rules2[i][0], _rules2[i][1]);\n  }\n}\n\n\n// Skip single token by running all rules in validation mode;\n// returns `true` if any rule reported success\n//\nParserInline.prototype.skipToken = function (state) {\n  var ok, i, pos = state.pos,\n      rules = this.ruler.getRules(''),\n      len = rules.length,\n      maxNesting = state.md.options.maxNesting,\n      cache = state.cache;\n\n\n  if (typeof cache[pos] !== 'undefined') {\n    state.pos = cache[pos];\n    return;\n  }\n\n  if (state.level < maxNesting) {\n    for (i = 0; i < len; i++) {\n      // Increment state.level and decrement it later to limit recursion.\n      // It's harmless to do here, because no tokens are created. But ideally,\n      // we'd need a separate private state variable for this purpose.\n      //\n      state.level++;\n      ok = rules[i](state, true);\n      state.level--;\n\n      if (ok) { break; }\n    }\n  } else {\n    // Too much nesting, just skip until the end of the paragraph.\n    //\n    // NOTE: this will cause links to behave incorrectly in the following case,\n    //       when an amount of `[` is exactly equal to `maxNesting + 1`:\n    //\n    //       [[[[[[[[[[[[[[[[[[[[[foo]()\n    //\n    // TODO: remove this workaround when CM standard will allow nested links\n    //       (we can replace it by preventing links from being parsed in\n    //       validation mode)\n    //\n    state.pos = state.posMax;\n  }\n\n  if (!ok) { state.pos++; }\n  cache[pos] = state.pos;\n};\n\n\n// Generate tokens for input range\n//\nParserInline.prototype.tokenize = function (state) {\n  var ok, i,\n      rules = this.ruler.getRules(''),\n      len = rules.length,\n      end = state.posMax,\n      maxNesting = state.md.options.maxNesting;\n\n  while (state.pos < end) {\n    // Try all possible rules.\n    // On success, rule should:\n    //\n    // - update `state.pos`\n    // - update `state.tokens`\n    // - return true\n\n    if (state.level < maxNesting) {\n      for (i = 0; i < len; i++) {\n        ok = rules[i](state, false);\n        if (ok) { break; }\n      }\n    }\n\n    if (ok) {\n      if (state.pos >= end) { break; }\n      continue;\n    }\n\n    state.pending += state.src[state.pos++];\n  }\n\n  if (state.pending) {\n    state.pushPending();\n  }\n};\n\n\n/**\n * ParserInline.parse(str, md, env, outTokens)\n *\n * Process input string and push inline tokens into `outTokens`\n **/\nParserInline.prototype.parse = function (str, md, env, outTokens) {\n  var i, rules, len;\n  var state = new this.State(str, md, env, outTokens);\n\n  this.tokenize(state);\n\n  rules = this.ruler2.getRules('');\n  len = rules.length;\n\n  for (i = 0; i < len; i++) {\n    rules[i](state);\n  }\n};\n\n\nParserInline.prototype.State = require('./rules_inline/state_inline');\n\n\nmodule.exports = ParserInline;\n","module.exports=/[ \\xA0\\u1680\\u2000-\\u200A\\u2028\\u2029\\u202F\\u205F\\u3000]/","// Just a shortcut for bulk export\n'use strict';\n\n\nexports.parseLinkLabel       = require('./parse_link_label');\nexports.parseLinkDestination = require('./parse_link_destination');\nexports.parseLinkTitle       = require('./parse_link_title');\n","// Regexps to match html elements\n\n'use strict';\n\nvar attr_name     = '[a-zA-Z_:][a-zA-Z0-9:._-]*';\n\nvar unquoted      = '[^\"\\'=<>`\\\\x00-\\\\x20]+';\nvar single_quoted = \"'[^']*'\";\nvar double_quoted = '\"[^\"]*\"';\n\nvar attr_value  = '(?:' + unquoted + '|' + single_quoted + '|' + double_quoted + ')';\n\nvar attribute   = '(?:\\\\s+' + attr_name + '(?:\\\\s*=\\\\s*' + attr_value + ')?)';\n\nvar open_tag    = '<[A-Za-z][A-Za-z0-9\\\\-]*' + attribute + '*\\\\s*\\\\/?>';\n\nvar close_tag   = '<\\\\/[A-Za-z][A-Za-z0-9\\\\-]*\\\\s*>';\nvar comment     = '<!---->|<!--(?:-?[^>-])(?:-?[^-])*-->';\nvar processing  = '<[?][\\\\s\\\\S]*?[?]>';\nvar declaration = '<![A-Z]+\\\\s+[^>]*>';\nvar cdata       = '<!\\\\[CDATA\\\\[[\\\\s\\\\S]*?\\\\]\\\\]>';\n\nvar HTML_TAG_RE = new RegExp('^(?:' + open_tag + '|' + close_tag + '|' + comment +\n                        '|' + processing + '|' + declaration + '|' + cdata + ')');\nvar HTML_OPEN_CLOSE_TAG_RE = new RegExp('^(?:' + open_tag + '|' + close_tag + ')');\n\nmodule.exports.HTML_TAG_RE = HTML_TAG_RE;\nmodule.exports.HTML_OPEN_CLOSE_TAG_RE = HTML_OPEN_CLOSE_TAG_RE;\n","// Process html entity - &#123;, &#xAF;, &quot;, ...\n\n'use strict';\n\nvar entities          = require('../common/entities');\nvar has               = require('../common/utils').has;\nvar isValidEntityCode = require('../common/utils').isValidEntityCode;\nvar fromCodePoint     = require('../common/utils').fromCodePoint;\n\n\nvar DIGITAL_RE = /^&#((?:x[a-f0-9]{1,6}|[0-9]{1,7}));/i;\nvar NAMED_RE   = /^&([a-z][a-z0-9]{1,31});/i;\n\n\nmodule.exports = function entity(state, silent) {\n  var ch, code, match, pos = state.pos, max = state.posMax;\n\n  if (state.src.charCodeAt(pos) !== 0x26/* & */) { return false; }\n\n  if (pos + 1 < max) {\n    ch = state.src.charCodeAt(pos + 1);\n\n    if (ch === 0x23 /* # */) {\n      match = state.src.slice(pos).match(DIGITAL_RE);\n      if (match) {\n        if (!silent) {\n          code = match[1][0].toLowerCase() === 'x' ? parseInt(match[1].slice(1), 16) : parseInt(match[1], 10);\n          state.pending += isValidEntityCode(code) ? fromCodePoint(code) : fromCodePoint(0xFFFD);\n        }\n        state.pos += match[0].length;\n        return true;\n      }\n    } else {\n      match = state.src.slice(pos).match(NAMED_RE);\n      if (match) {\n        if (has(entities, match[1])) {\n          if (!silent) { state.pending += entities[match[1]]; }\n          state.pos += match[0].length;\n          return true;\n        }\n      }\n    }\n  }\n\n  if (!silent) { state.pending += '&'; }\n  state.pos++;\n  return true;\n};\n","// HTML block\n\n'use strict';\n\n\nvar block_names = require('../common/html_blocks');\nvar HTML_OPEN_CLOSE_TAG_RE = require('../common/html_re').HTML_OPEN_CLOSE_TAG_RE;\n\n// An array of opening and corresponding closing sequences for html tags,\n// last argument defines whether it can terminate a paragraph or not\n//\nvar HTML_SEQUENCES = [\n  [ /^<(script|pre|style)(?=(\\s|>|$))/i, /<\\/(script|pre|style)>/i, true ],\n  [ /^<!--/,        /-->/,   true ],\n  [ /^<\\?/,         /\\?>/,   true ],\n  [ /^<![A-Z]/,     />/,     true ],\n  [ /^<!\\[CDATA\\[/, /\\]\\]>/, true ],\n  [ new RegExp('^</?(' + block_names.join('|') + ')(?=(\\\\s|/?>|$))', 'i'), /^$/, true ],\n  [ new RegExp(HTML_OPEN_CLOSE_TAG_RE.source + '\\\\s*$'),  /^$/, false ]\n];\n\n\nmodule.exports = function html_block(state, startLine, endLine, silent) {\n  var i, nextLine, token, lineText,\n      pos = state.bMarks[startLine] + state.tShift[startLine],\n      max = state.eMarks[startLine];\n\n  // if it's indented more than 3 spaces, it should be a code block\n  if (state.sCount[startLine] - state.blkIndent >= 4) { return false; }\n\n  if (!state.md.options.html) { return false; }\n\n  if (state.src.charCodeAt(pos) !== 0x3C/* < */) { return false; }\n\n  lineText = state.src.slice(pos, max);\n\n  for (i = 0; i < HTML_SEQUENCES.length; i++) {\n    if (HTML_SEQUENCES[i][0].test(lineText)) { break; }\n  }\n\n  if (i === HTML_SEQUENCES.length) { return false; }\n\n  if (silent) {\n    // true if this sequence can be a terminator, false otherwise\n    return HTML_SEQUENCES[i][2];\n  }\n\n  nextLine = startLine + 1;\n\n  // If we are here - we detected HTML block.\n  // Let's roll down till block end.\n  if (!HTML_SEQUENCES[i][1].test(lineText)) {\n    for (; nextLine < endLine; nextLine++) {\n      if (state.sCount[nextLine] < state.blkIndent) { break; }\n\n      pos = state.bMarks[nextLine] + state.tShift[nextLine];\n      max = state.eMarks[nextLine];\n      lineText = state.src.slice(pos, max);\n\n      if (HTML_SEQUENCES[i][1].test(lineText)) {\n        if (lineText.length !== 0) { nextLine++; }\n        break;\n      }\n    }\n  }\n\n  state.line = nextLine;\n\n  token         = state.push('html_block', '', 0);\n  token.map     = [ startLine, nextLine ];\n  token.content = state.getLines(startLine, nextLine, state.blkIndent, true);\n\n  return true;\n};\n","module.exports = function(module) {\n\tif (!module.webpackPolyfill) {\n\t\tmodule.deprecate = function() {};\n\t\tmodule.paths = [];\n\t\t// module.parent = undefined by default\n\t\tif (!module.children) module.children = [];\n\t\tObject.defineProperty(module, \"loaded\", {\n\t\t\tenumerable: true,\n\t\t\tget: function() {\n\t\t\t\treturn module.l;\n\t\t\t}\n\t\t});\n\t\tObject.defineProperty(module, \"id\", {\n\t\t\tenumerable: true,\n\t\t\tget: function() {\n\t\t\t\treturn module.i;\n\t\t\t}\n\t\t});\n\t\tmodule.webpackPolyfill = 1;\n\t}\n\treturn module;\n};\n","// Process escaped chars and hardbreaks\n\n'use strict';\n\nvar isSpace = require('../common/utils').isSpace;\n\nvar ESCAPED = [];\n\nfor (var i = 0; i < 256; i++) { ESCAPED.push(0); }\n\n'\\\\!\"#$%&\\'()*+,./:;<=>?@[]^_`{|}~-'\n  .split('').forEach(function (ch) { ESCAPED[ch.charCodeAt(0)] = 1; });\n\n\nmodule.exports = function escape(state, silent) {\n  var ch, pos = state.pos, max = state.posMax;\n\n  if (state.src.charCodeAt(pos) !== 0x5C/* \\ */) { return false; }\n\n  pos++;\n\n  if (pos < max) {\n    ch = state.src.charCodeAt(pos);\n\n    if (ch < 256 && ESCAPED[ch] !== 0) {\n      if (!silent) { state.pending += state.src[pos]; }\n      state.pos += 2;\n      return true;\n    }\n\n    if (ch === 0x0A) {\n      if (!silent) {\n        state.push('hardbreak', 'br', 0);\n      }\n\n      pos++;\n      // skip leading whitespaces from next line\n      while (pos < max) {\n        ch = state.src.charCodeAt(pos);\n        if (!isSpace(ch)) { break; }\n        pos++;\n      }\n\n      state.pos = pos;\n      return true;\n    }\n  }\n\n  if (!silent) { state.pending += '\\\\'; }\n  state.pos++;\n  return true;\n};\n","module.exports=/[\\xAD\\u0600-\\u0605\\u061C\\u06DD\\u070F\\u08E2\\u180E\\u200B-\\u200F\\u202A-\\u202E\\u2060-\\u2064\\u2066-\\u206F\\uFEFF\\uFFF9-\\uFFFB]|\\uD804[\\uDCBD\\uDCCD]|\\uD82F[\\uDCA0-\\uDCA3]|\\uD834[\\uDD73-\\uDD7A]|\\uDB40[\\uDC01\\uDC20-\\uDC7F]/","// Core state object\n//\n'use strict';\n\nvar Token = require('../token');\n\n\nfunction StateCore(src, md, env) {\n  this.src = src;\n  this.env = env;\n  this.tokens = [];\n  this.inlineMode = false;\n  this.md = md; // link to parser instance\n}\n\n// re-export Token class to use in core rules\nStateCore.prototype.Token = Token;\n\n\nmodule.exports = StateCore;\n","/** internal\n * class ParserBlock\n *\n * Block-level tokenizer.\n **/\n'use strict';\n\n\nvar Ruler           = require('./ruler');\n\n\nvar _rules = [\n  // First 2 params - rule name & source. Secondary array - list of rules,\n  // which can be terminated by this one.\n  [ 'table',      require('./rules_block/table'),      [ 'paragraph', 'reference' ] ],\n  [ 'code',       require('./rules_block/code') ],\n  [ 'fence',      require('./rules_block/fence'),      [ 'paragraph', 'reference', 'blockquote', 'list' ] ],\n  [ 'blockquote', require('./rules_block/blockquote'), [ 'paragraph', 'reference', 'blockquote', 'list' ] ],\n  [ 'hr',         require('./rules_block/hr'),         [ 'paragraph', 'reference', 'blockquote', 'list' ] ],\n  [ 'list',       require('./rules_block/list'),       [ 'paragraph', 'reference', 'blockquote' ] ],\n  [ 'reference',  require('./rules_block/reference') ],\n  [ 'html_block', require('./rules_block/html_block'), [ 'paragraph', 'reference', 'blockquote' ] ],\n  [ 'heading',    require('./rules_block/heading'),    [ 'paragraph', 'reference', 'blockquote' ] ],\n  [ 'lheading',   require('./rules_block/lheading') ],\n  [ 'paragraph',  require('./rules_block/paragraph') ]\n];\n\n\n/**\n * new ParserBlock()\n **/\nfunction ParserBlock() {\n  /**\n   * ParserBlock#ruler -> Ruler\n   *\n   * [[Ruler]] instance. Keep configuration of block rules.\n   **/\n  this.ruler = new Ruler();\n\n  for (var i = 0; i < _rules.length; i++) {\n    this.ruler.push(_rules[i][0], _rules[i][1], { alt: (_rules[i][2] || []).slice() });\n  }\n}\n\n\n// Generate tokens for input range\n//\nParserBlock.prototype.tokenize = function (state, startLine, endLine) {\n  var ok, i,\n      rules = this.ruler.getRules(''),\n      len = rules.length,\n      line = startLine,\n      hasEmptyLines = false,\n      maxNesting = state.md.options.maxNesting;\n\n  while (line < endLine) {\n    state.line = line = state.skipEmptyLines(line);\n    if (line >= endLine) { break; }\n\n    // Termination condition for nested calls.\n    // Nested calls currently used for blockquotes & lists\n    if (state.sCount[line] < state.blkIndent) { break; }\n\n    // If nesting level exceeded - skip tail to the end. That's not ordinary\n    // situation and we should not care about content.\n    if (state.level >= maxNesting) {\n      state.line = endLine;\n      break;\n    }\n\n    // Try all possible rules.\n    // On success, rule should:\n    //\n    // - update `state.line`\n    // - update `state.tokens`\n    // - return true\n\n    for (i = 0; i < len; i++) {\n      ok = rules[i](state, line, endLine, false);\n      if (ok) { break; }\n    }\n\n    // set state.tight if we had an empty line before current tag\n    // i.e. latest empty line should not count\n    state.tight = !hasEmptyLines;\n\n    // paragraph might \"eat\" one newline after it in nested lists\n    if (state.isEmpty(state.line - 1)) {\n      hasEmptyLines = true;\n    }\n\n    line = state.line;\n\n    if (line < endLine && state.isEmpty(line)) {\n      hasEmptyLines = true;\n      line++;\n      state.line = line;\n    }\n  }\n};\n\n\n/**\n * ParserBlock.parse(str, md, env, outTokens)\n *\n * Process input string and push block tokens into `outTokens`\n **/\nParserBlock.prototype.parse = function (src, md, env, outTokens) {\n  var state;\n\n  if (!src) { return; }\n\n  state = new this.State(src, md, env, outTokens);\n\n  this.tokenize(state, state.line, state.lineMax);\n};\n\n\nParserBlock.prototype.State = require('./rules_block/state_block');\n\n\nmodule.exports = ParserBlock;\n","module.exports=/[!-#%-\\*,-\\/:;\\?@\\[-\\]_\\{\\}\\xA1\\xA7\\xAB\\xB6\\xB7\\xBB\\xBF\\u037E\\u0387\\u055A-\\u055F\\u0589\\u058A\\u05BE\\u05C0\\u05C3\\u05C6\\u05F3\\u05F4\\u0609\\u060A\\u060C\\u060D\\u061B\\u061E\\u061F\\u066A-\\u066D\\u06D4\\u0700-\\u070D\\u07F7-\\u07F9\\u0830-\\u083E\\u085E\\u0964\\u0965\\u0970\\u09FD\\u0A76\\u0AF0\\u0C84\\u0DF4\\u0E4F\\u0E5A\\u0E5B\\u0F04-\\u0F12\\u0F14\\u0F3A-\\u0F3D\\u0F85\\u0FD0-\\u0FD4\\u0FD9\\u0FDA\\u104A-\\u104F\\u10FB\\u1360-\\u1368\\u1400\\u166D\\u166E\\u169B\\u169C\\u16EB-\\u16ED\\u1735\\u1736\\u17D4-\\u17D6\\u17D8-\\u17DA\\u1800-\\u180A\\u1944\\u1945\\u1A1E\\u1A1F\\u1AA0-\\u1AA6\\u1AA8-\\u1AAD\\u1B5A-\\u1B60\\u1BFC-\\u1BFF\\u1C3B-\\u1C3F\\u1C7E\\u1C7F\\u1CC0-\\u1CC7\\u1CD3\\u2010-\\u2027\\u2030-\\u2043\\u2045-\\u2051\\u2053-\\u205E\\u207D\\u207E\\u208D\\u208E\\u2308-\\u230B\\u2329\\u232A\\u2768-\\u2775\\u27C5\\u27C6\\u27E6-\\u27EF\\u2983-\\u2998\\u29D8-\\u29DB\\u29FC\\u29FD\\u2CF9-\\u2CFC\\u2CFE\\u2CFF\\u2D70\\u2E00-\\u2E2E\\u2E30-\\u2E4E\\u3001-\\u3003\\u3008-\\u3011\\u3014-\\u301F\\u3030\\u303D\\u30A0\\u30FB\\uA4FE\\uA4FF\\uA60D-\\uA60F\\uA673\\uA67E\\uA6F2-\\uA6F7\\uA874-\\uA877\\uA8CE\\uA8CF\\uA8F8-\\uA8FA\\uA8FC\\uA92E\\uA92F\\uA95F\\uA9C1-\\uA9CD\\uA9DE\\uA9DF\\uAA5C-\\uAA5F\\uAADE\\uAADF\\uAAF0\\uAAF1\\uABEB\\uFD3E\\uFD3F\\uFE10-\\uFE19\\uFE30-\\uFE52\\uFE54-\\uFE61\\uFE63\\uFE68\\uFE6A\\uFE6B\\uFF01-\\uFF03\\uFF05-\\uFF0A\\uFF0C-\\uFF0F\\uFF1A\\uFF1B\\uFF1F\\uFF20\\uFF3B-\\uFF3D\\uFF3F\\uFF5B\\uFF5D\\uFF5F-\\uFF65]|\\uD800[\\uDD00-\\uDD02\\uDF9F\\uDFD0]|\\uD801\\uDD6F|\\uD802[\\uDC57\\uDD1F\\uDD3F\\uDE50-\\uDE58\\uDE7F\\uDEF0-\\uDEF6\\uDF39-\\uDF3F\\uDF99-\\uDF9C]|\\uD803[\\uDF55-\\uDF59]|\\uD804[\\uDC47-\\uDC4D\\uDCBB\\uDCBC\\uDCBE-\\uDCC1\\uDD40-\\uDD43\\uDD74\\uDD75\\uDDC5-\\uDDC8\\uDDCD\\uDDDB\\uDDDD-\\uDDDF\\uDE38-\\uDE3D\\uDEA9]|\\uD805[\\uDC4B-\\uDC4F\\uDC5B\\uDC5D\\uDCC6\\uDDC1-\\uDDD7\\uDE41-\\uDE43\\uDE60-\\uDE6C\\uDF3C-\\uDF3E]|\\uD806[\\uDC3B\\uDE3F-\\uDE46\\uDE9A-\\uDE9C\\uDE9E-\\uDEA2]|\\uD807[\\uDC41-\\uDC45\\uDC70\\uDC71\\uDEF7\\uDEF8]|\\uD809[\\uDC70-\\uDC74]|\\uD81A[\\uDE6E\\uDE6F\\uDEF5\\uDF37-\\uDF3B\\uDF44]|\\uD81B[\\uDE97-\\uDE9A]|\\uD82F\\uDC9F|\\uD836[\\uDE87-\\uDE8B]|\\uD83A[\\uDD5E\\uDD5F]/","/**\n * class Renderer\n *\n * Generates HTML from parsed token stream. Each instance has independent\n * copy of rules. Those can be rewritten with ease. Also, you can add new\n * rules if you create plugin and adds new token types.\n **/\n'use strict';\n\n\nvar assign          = require('./common/utils').assign;\nvar unescapeAll     = require('./common/utils').unescapeAll;\nvar escapeHtml      = require('./common/utils').escapeHtml;\n\n\n////////////////////////////////////////////////////////////////////////////////\n\nvar default_rules = {};\n\n\ndefault_rules.code_inline = function (tokens, idx, options, env, slf) {\n  var token = tokens[idx];\n\n  return  '<code' + slf.renderAttrs(token) + '>' +\n          escapeHtml(tokens[idx].content) +\n          '</code>';\n};\n\n\ndefault_rules.code_block = function (tokens, idx, options, env, slf) {\n  var token = tokens[idx];\n\n  return  '<pre' + slf.renderAttrs(token) + '><code>' +\n          escapeHtml(tokens[idx].content) +\n          '</code></pre>\\n';\n};\n\n\ndefault_rules.fence = function (tokens, idx, options, env, slf) {\n  var token = tokens[idx],\n      info = token.info ? unescapeAll(token.info).trim() : '',\n      langName = '',\n      langAttrs = '',\n      highlighted, i, arr, tmpAttrs, tmpToken;\n\n  if (info) {\n    arr = info.split(/(\\s+)/g);\n    langName = arr[0];\n    langAttrs = arr.slice(2).join('');\n  }\n\n  if (options.highlight) {\n    highlighted = options.highlight(token.content, langName, langAttrs) || escapeHtml(token.content);\n  } else {\n    highlighted = escapeHtml(token.content);\n  }\n\n  if (highlighted.indexOf('<pre') === 0) {\n    return highlighted + '\\n';\n  }\n\n  // If language exists, inject class gently, without modifying original token.\n  // May be, one day we will add .deepClone() for token and simplify this part, but\n  // now we prefer to keep things local.\n  if (info) {\n    i        = token.attrIndex('class');\n    tmpAttrs = token.attrs ? token.attrs.slice() : [];\n\n    if (i < 0) {\n      tmpAttrs.push([ 'class', options.langPrefix + langName ]);\n    } else {\n      tmpAttrs[i] = tmpAttrs[i].slice();\n      tmpAttrs[i][1] += ' ' + options.langPrefix + langName;\n    }\n\n    // Fake token just to render attributes\n    tmpToken = {\n      attrs: tmpAttrs\n    };\n\n    return  '<pre><code' + slf.renderAttrs(tmpToken) + '>'\n          + highlighted\n          + '</code></pre>\\n';\n  }\n\n\n  return  '<pre><code' + slf.renderAttrs(token) + '>'\n        + highlighted\n        + '</code></pre>\\n';\n};\n\n\ndefault_rules.image = function (tokens, idx, options, env, slf) {\n  var token = tokens[idx];\n\n  // \"alt\" attr MUST be set, even if empty. Because it's mandatory and\n  // should be placed on proper position for tests.\n  //\n  // Replace content with actual value\n\n  token.attrs[token.attrIndex('alt')][1] =\n    slf.renderInlineAsText(token.children, options, env);\n\n  return slf.renderToken(tokens, idx, options);\n};\n\n\ndefault_rules.hardbreak = function (tokens, idx, options /*, env */) {\n  return options.xhtmlOut ? '<br />\\n' : '<br>\\n';\n};\ndefault_rules.softbreak = function (tokens, idx, options /*, env */) {\n  return options.breaks ? (options.xhtmlOut ? '<br />\\n' : '<br>\\n') : '\\n';\n};\n\n\ndefault_rules.text = function (tokens, idx /*, options, env */) {\n  return escapeHtml(tokens[idx].content);\n};\n\n\ndefault_rules.html_block = function (tokens, idx /*, options, env */) {\n  return tokens[idx].content;\n};\ndefault_rules.html_inline = function (tokens, idx /*, options, env */) {\n  return tokens[idx].content;\n};\n\n\n/**\n * new Renderer()\n *\n * Creates new [[Renderer]] instance and fill [[Renderer#rules]] with defaults.\n **/\nfunction Renderer() {\n\n  /**\n   * Renderer#rules -> Object\n   *\n   * Contains render rules for tokens. Can be updated and extended.\n   *\n   * ##### Example\n   *\n   * ```javascript\n   * var md = require('markdown-it')();\n   *\n   * md.renderer.rules.strong_open  = function () { return '<b>'; };\n   * md.renderer.rules.strong_close = function () { return '</b>'; };\n   *\n   * var result = md.renderInline(...);\n   * ```\n   *\n   * Each rule is called as independent static function with fixed signature:\n   *\n   * ```javascript\n   * function my_token_render(tokens, idx, options, env, renderer) {\n   *   // ...\n   *   return renderedHTML;\n   * }\n   * ```\n   *\n   * See [source code](https://github.com/markdown-it/markdown-it/blob/master/lib/renderer.js)\n   * for more details and examples.\n   **/\n  this.rules = assign({}, default_rules);\n}\n\n\n/**\n * Renderer.renderAttrs(token) -> String\n *\n * Render token attributes to string.\n **/\nRenderer.prototype.renderAttrs = function renderAttrs(token) {\n  var i, l, result;\n\n  if (!token.attrs) { return ''; }\n\n  result = '';\n\n  for (i = 0, l = token.attrs.length; i < l; i++) {\n    result += ' ' + escapeHtml(token.attrs[i][0]) + '=\"' + escapeHtml(token.attrs[i][1]) + '\"';\n  }\n\n  return result;\n};\n\n\n/**\n * Renderer.renderToken(tokens, idx, options) -> String\n * - tokens (Array): list of tokens\n * - idx (Numbed): token index to render\n * - options (Object): params of parser instance\n *\n * Default token renderer. Can be overriden by custom function\n * in [[Renderer#rules]].\n **/\nRenderer.prototype.renderToken = function renderToken(tokens, idx, options) {\n  var nextToken,\n      result = '',\n      needLf = false,\n      token = tokens[idx];\n\n  // Tight list paragraphs\n  if (token.hidden) {\n    return '';\n  }\n\n  // Insert a newline between hidden paragraph and subsequent opening\n  // block-level tag.\n  //\n  // For example, here we should insert a newline before blockquote:\n  //  - a\n  //    >\n  //\n  if (token.block && token.nesting !== -1 && idx && tokens[idx - 1].hidden) {\n    result += '\\n';\n  }\n\n  // Add token name, e.g. `<img`\n  result += (token.nesting === -1 ? '</' : '<') + token.tag;\n\n  // Encode attributes, e.g. `<img src=\"foo\"`\n  result += this.renderAttrs(token);\n\n  // Add a slash for self-closing tags, e.g. `<img src=\"foo\" /`\n  if (token.nesting === 0 && options.xhtmlOut) {\n    result += ' /';\n  }\n\n  // Check if we need to add a newline after this tag\n  if (token.block) {\n    needLf = true;\n\n    if (token.nesting === 1) {\n      if (idx + 1 < tokens.length) {\n        nextToken = tokens[idx + 1];\n\n        if (nextToken.type === 'inline' || nextToken.hidden) {\n          // Block-level tag containing an inline tag.\n          //\n          needLf = false;\n\n        } else if (nextToken.nesting === -1 && nextToken.tag === token.tag) {\n          // Opening tag + closing tag of the same type. E.g. `<li></li>`.\n          //\n          needLf = false;\n        }\n      }\n    }\n  }\n\n  result += needLf ? '>\\n' : '>';\n\n  return result;\n};\n\n\n/**\n * Renderer.renderInline(tokens, options, env) -> String\n * - tokens (Array): list on block tokens to renter\n * - options (Object): params of parser instance\n * - env (Object): additional data from parsed input (references, for example)\n *\n * The same as [[Renderer.render]], but for single token of `inline` type.\n **/\nRenderer.prototype.renderInline = function (tokens, options, env) {\n  var type,\n      result = '',\n      rules = this.rules;\n\n  for (var i = 0, len = tokens.length; i < len; i++) {\n    type = tokens[i].type;\n\n    if (typeof rules[type] !== 'undefined') {\n      result += rules[type](tokens, i, options, env, this);\n    } else {\n      result += this.renderToken(tokens, i, options);\n    }\n  }\n\n  return result;\n};\n\n\n/** internal\n * Renderer.renderInlineAsText(tokens, options, env) -> String\n * - tokens (Array): list on block tokens to renter\n * - options (Object): params of parser instance\n * - env (Object): additional data from parsed input (references, for example)\n *\n * Special kludge for image `alt` attributes to conform CommonMark spec.\n * Don't try to use it! Spec requires to show `alt` content with stripped markup,\n * instead of simple escaping.\n **/\nRenderer.prototype.renderInlineAsText = function (tokens, options, env) {\n  var result = '';\n\n  for (var i = 0, len = tokens.length; i < len; i++) {\n    if (tokens[i].type === 'text') {\n      result += tokens[i].content;\n    } else if (tokens[i].type === 'image') {\n      result += this.renderInlineAsText(tokens[i].children, options, env);\n    } else if (tokens[i].type === 'softbreak') {\n      result += '\\n';\n    }\n  }\n\n  return result;\n};\n\n\n/**\n * Renderer.render(tokens, options, env) -> String\n * - tokens (Array): list on block tokens to renter\n * - options (Object): params of parser instance\n * - env (Object): additional data from parsed input (references, for example)\n *\n * Takes token stream and generates HTML. Probably, you will never need to call\n * this method directly.\n **/\nRenderer.prototype.render = function (tokens, options, env) {\n  var i, len, type,\n      result = '',\n      rules = this.rules;\n\n  for (i = 0, len = tokens.length; i < len; i++) {\n    type = tokens[i].type;\n\n    if (type === 'inline') {\n      result += this.renderInline(tokens[i].children, options, env);\n    } else if (typeof rules[type] !== 'undefined') {\n      result += rules[tokens[i].type](tokens, i, options, env, this);\n    } else {\n      result += this.renderToken(tokens, i, options, env);\n    }\n  }\n\n  return result;\n};\n\nmodule.exports = Renderer;\n","// Parse link title\n//\n'use strict';\n\n\nvar unescapeAll = require('../common/utils').unescapeAll;\n\n\nmodule.exports = function parseLinkTitle(str, pos, max) {\n  var code,\n      marker,\n      lines = 0,\n      start = pos,\n      result = {\n        ok: false,\n        pos: 0,\n        lines: 0,\n        str: ''\n      };\n\n  if (pos >= max) { return result; }\n\n  marker = str.charCodeAt(pos);\n\n  if (marker !== 0x22 /* \" */ && marker !== 0x27 /* ' */ && marker !== 0x28 /* ( */) { return result; }\n\n  pos++;\n\n  // if opening marker is \"(\", switch it to closing marker \")\"\n  if (marker === 0x28) { marker = 0x29; }\n\n  while (pos < max) {\n    code = str.charCodeAt(pos);\n    if (code === marker) {\n      result.pos = pos + 1;\n      result.lines = lines;\n      result.str = unescapeAll(str.slice(start + 1, pos));\n      result.ok = true;\n      return result;\n    } else if (code === 0x28 /* ( */ && marker === 0x29 /* ) */) {\n      return result;\n    } else if (code === 0x0A) {\n      lines++;\n    } else if (code === 0x5C /* \\ */ && pos + 1 < max) {\n      pos++;\n      if (str.charCodeAt(pos) === 0x0A) {\n        lines++;\n      }\n    }\n\n    pos++;\n  }\n\n  return result;\n};\n","'use strict';\nvar $ = require('../internals/export');\nvar $find = require('../internals/array-iteration').find;\nvar addToUnscopables = require('../internals/add-to-unscopables');\n\nvar FIND = 'find';\nvar SKIPS_HOLES = true;\n\n// Shouldn't skip holes\nif (FIND in []) Array(1)[FIND](function () { SKIPS_HOLES = false; });\n\n// `Array.prototype.find` method\n// https://tc39.es/ecma262/#sec-array.prototype.find\n$({ target: 'Array', proto: true, forced: SKIPS_HOLES }, {\n  find: function find(callbackfn /* , that = undefined */) {\n    return $find(this, callbackfn, arguments.length > 1 ? arguments[1] : undefined);\n  }\n});\n\n// https://tc39.es/ecma262/#sec-array.prototype-@@unscopables\naddToUnscopables(FIND);\n","// GFM table, https://github.github.com/gfm/#tables-extension-\n\n'use strict';\n\nvar isSpace = require('../common/utils').isSpace;\n\n\nfunction getLine(state, line) {\n  var pos = state.bMarks[line] + state.tShift[line],\n      max = state.eMarks[line];\n\n  return state.src.substr(pos, max - pos);\n}\n\nfunction escapedSplit(str) {\n  var result = [],\n      pos = 0,\n      max = str.length,\n      ch,\n      isEscaped = false,\n      lastPos = 0,\n      current = '';\n\n  ch  = str.charCodeAt(pos);\n\n  while (pos < max) {\n    if (ch === 0x7c/* | */) {\n      if (!isEscaped) {\n        // pipe separating cells, '|'\n        result.push(current + str.substring(lastPos, pos));\n        current = '';\n        lastPos = pos + 1;\n      } else {\n        // escaped pipe, '\\|'\n        current += str.substring(lastPos, pos - 1);\n        lastPos = pos;\n      }\n    }\n\n    isEscaped = (ch === 0x5c/* \\ */);\n    pos++;\n\n    ch = str.charCodeAt(pos);\n  }\n\n  result.push(current + str.substring(lastPos));\n\n  return result;\n}\n\n\nmodule.exports = function table(state, startLine, endLine, silent) {\n  var ch, lineText, pos, i, l, nextLine, columns, columnCount, token,\n      aligns, t, tableLines, tbodyLines, oldParentType, terminate,\n      terminatorRules, firstCh, secondCh;\n\n  // should have at least two lines\n  if (startLine + 2 > endLine) { return false; }\n\n  nextLine = startLine + 1;\n\n  if (state.sCount[nextLine] < state.blkIndent) { return false; }\n\n  // if it's indented more than 3 spaces, it should be a code block\n  if (state.sCount[nextLine] - state.blkIndent >= 4) { return false; }\n\n  // first character of the second line should be '|', '-', ':',\n  // and no other characters are allowed but spaces;\n  // basically, this is the equivalent of /^[-:|][-:|\\s]*$/ regexp\n\n  pos = state.bMarks[nextLine] + state.tShift[nextLine];\n  if (pos >= state.eMarks[nextLine]) { return false; }\n\n  firstCh = state.src.charCodeAt(pos++);\n  if (firstCh !== 0x7C/* | */ && firstCh !== 0x2D/* - */ && firstCh !== 0x3A/* : */) { return false; }\n\n  if (pos >= state.eMarks[nextLine]) { return false; }\n\n  secondCh = state.src.charCodeAt(pos++);\n  if (secondCh !== 0x7C/* | */ && secondCh !== 0x2D/* - */ && secondCh !== 0x3A/* : */ && !isSpace(secondCh)) {\n    return false;\n  }\n\n  // if first character is '-', then second character must not be a space\n  // (due to parsing ambiguity with list)\n  if (firstCh === 0x2D/* - */ && isSpace(secondCh)) { return false; }\n\n  while (pos < state.eMarks[nextLine]) {\n    ch = state.src.charCodeAt(pos);\n\n    if (ch !== 0x7C/* | */ && ch !== 0x2D/* - */ && ch !== 0x3A/* : */ && !isSpace(ch)) { return false; }\n\n    pos++;\n  }\n\n  lineText = getLine(state, startLine + 1);\n\n  columns = lineText.split('|');\n  aligns = [];\n  for (i = 0; i < columns.length; i++) {\n    t = columns[i].trim();\n    if (!t) {\n      // allow empty columns before and after table, but not in between columns;\n      // e.g. allow ` |---| `, disallow ` ---||--- `\n      if (i === 0 || i === columns.length - 1) {\n        continue;\n      } else {\n        return false;\n      }\n    }\n\n    if (!/^:?-+:?$/.test(t)) { return false; }\n    if (t.charCodeAt(t.length - 1) === 0x3A/* : */) {\n      aligns.push(t.charCodeAt(0) === 0x3A/* : */ ? 'center' : 'right');\n    } else if (t.charCodeAt(0) === 0x3A/* : */) {\n      aligns.push('left');\n    } else {\n      aligns.push('');\n    }\n  }\n\n  lineText = getLine(state, startLine).trim();\n  if (lineText.indexOf('|') === -1) { return false; }\n  if (state.sCount[startLine] - state.blkIndent >= 4) { return false; }\n  columns = escapedSplit(lineText);\n  if (columns.length && columns[0] === '') columns.shift();\n  if (columns.length && columns[columns.length - 1] === '') columns.pop();\n\n  // header row will define an amount of columns in the entire table,\n  // and align row should be exactly the same (the rest of the rows can differ)\n  columnCount = columns.length;\n  if (columnCount === 0 || columnCount !== aligns.length) { return false; }\n\n  if (silent) { return true; }\n\n  oldParentType = state.parentType;\n  state.parentType = 'table';\n\n  // use 'blockquote' lists for termination because it's\n  // the most similar to tables\n  terminatorRules = state.md.block.ruler.getRules('blockquote');\n\n  token     = state.push('table_open', 'table', 1);\n  token.map = tableLines = [ startLine, 0 ];\n\n  token     = state.push('thead_open', 'thead', 1);\n  token.map = [ startLine, startLine + 1 ];\n\n  token     = state.push('tr_open', 'tr', 1);\n  token.map = [ startLine, startLine + 1 ];\n\n  for (i = 0; i < columns.length; i++) {\n    token          = state.push('th_open', 'th', 1);\n    if (aligns[i]) {\n      token.attrs  = [ [ 'style', 'text-align:' + aligns[i] ] ];\n    }\n\n    token          = state.push('inline', '', 0);\n    token.content  = columns[i].trim();\n    token.children = [];\n\n    token          = state.push('th_close', 'th', -1);\n  }\n\n  token     = state.push('tr_close', 'tr', -1);\n  token     = state.push('thead_close', 'thead', -1);\n\n  for (nextLine = startLine + 2; nextLine < endLine; nextLine++) {\n    if (state.sCount[nextLine] < state.blkIndent) { break; }\n\n    terminate = false;\n    for (i = 0, l = terminatorRules.length; i < l; i++) {\n      if (terminatorRules[i](state, nextLine, endLine, true)) {\n        terminate = true;\n        break;\n      }\n    }\n\n    if (terminate) { break; }\n    lineText = getLine(state, nextLine).trim();\n    if (!lineText) { break; }\n    if (state.sCount[nextLine] - state.blkIndent >= 4) { break; }\n    columns = escapedSplit(lineText);\n    if (columns.length && columns[0] === '') columns.shift();\n    if (columns.length && columns[columns.length - 1] === '') columns.pop();\n\n    if (nextLine === startLine + 2) {\n      token     = state.push('tbody_open', 'tbody', 1);\n      token.map = tbodyLines = [ startLine + 2, 0 ];\n    }\n\n    token     = state.push('tr_open', 'tr', 1);\n    token.map = [ nextLine, nextLine + 1 ];\n\n    for (i = 0; i < columnCount; i++) {\n      token          = state.push('td_open', 'td', 1);\n      if (aligns[i]) {\n        token.attrs  = [ [ 'style', 'text-align:' + aligns[i] ] ];\n      }\n\n      token          = state.push('inline', '', 0);\n      token.content  = columns[i] ? columns[i].trim() : '';\n      token.children = [];\n\n      token          = state.push('td_close', 'td', -1);\n    }\n    token = state.push('tr_close', 'tr', -1);\n  }\n\n  if (tbodyLines) {\n    token = state.push('tbody_close', 'tbody', -1);\n    tbodyLines[1] = nextLine;\n  }\n\n  token = state.push('table_close', 'table', -1);\n  tableLines[1] = nextLine;\n\n  state.parentType = oldParentType;\n  state.line = nextLine;\n  return true;\n};\n","// Parser state class\n\n'use strict';\n\nvar Token = require('../token');\nvar isSpace = require('../common/utils').isSpace;\n\n\nfunction StateBlock(src, md, env, tokens) {\n  var ch, s, start, pos, len, indent, offset, indent_found;\n\n  this.src = src;\n\n  // link to parser instance\n  this.md     = md;\n\n  this.env = env;\n\n  //\n  // Internal state vartiables\n  //\n\n  this.tokens = tokens;\n\n  this.bMarks = [];  // line begin offsets for fast jumps\n  this.eMarks = [];  // line end offsets for fast jumps\n  this.tShift = [];  // offsets of the first non-space characters (tabs not expanded)\n  this.sCount = [];  // indents for each line (tabs expanded)\n\n  // An amount of virtual spaces (tabs expanded) between beginning\n  // of each line (bMarks) and real beginning of that line.\n  //\n  // It exists only as a hack because blockquotes override bMarks\n  // losing information in the process.\n  //\n  // It's used only when expanding tabs, you can think about it as\n  // an initial tab length, e.g. bsCount=21 applied to string `\\t123`\n  // means first tab should be expanded to 4-21%4 === 3 spaces.\n  //\n  this.bsCount = [];\n\n  // block parser variables\n  this.blkIndent  = 0; // required block content indent (for example, if we are\n                       // inside a list, it would be positioned after list marker)\n  this.line       = 0; // line index in src\n  this.lineMax    = 0; // lines count\n  this.tight      = false;  // loose/tight mode for lists\n  this.ddIndent   = -1; // indent of the current dd block (-1 if there isn't any)\n  this.listIndent = -1; // indent of the current list block (-1 if there isn't any)\n\n  // can be 'blockquote', 'list', 'root', 'paragraph' or 'reference'\n  // used in lists to determine if they interrupt a paragraph\n  this.parentType = 'root';\n\n  this.level = 0;\n\n  // renderer\n  this.result = '';\n\n  // Create caches\n  // Generate markers.\n  s = this.src;\n  indent_found = false;\n\n  for (start = pos = indent = offset = 0, len = s.length; pos < len; pos++) {\n    ch = s.charCodeAt(pos);\n\n    if (!indent_found) {\n      if (isSpace(ch)) {\n        indent++;\n\n        if (ch === 0x09) {\n          offset += 4 - offset % 4;\n        } else {\n          offset++;\n        }\n        continue;\n      } else {\n        indent_found = true;\n      }\n    }\n\n    if (ch === 0x0A || pos === len - 1) {\n      if (ch !== 0x0A) { pos++; }\n      this.bMarks.push(start);\n      this.eMarks.push(pos);\n      this.tShift.push(indent);\n      this.sCount.push(offset);\n      this.bsCount.push(0);\n\n      indent_found = false;\n      indent = 0;\n      offset = 0;\n      start = pos + 1;\n    }\n  }\n\n  // Push fake entry to simplify cache bounds checks\n  this.bMarks.push(s.length);\n  this.eMarks.push(s.length);\n  this.tShift.push(0);\n  this.sCount.push(0);\n  this.bsCount.push(0);\n\n  this.lineMax = this.bMarks.length - 1; // don't count last fake line\n}\n\n// Push new token to \"stream\".\n//\nStateBlock.prototype.push = function (type, tag, nesting) {\n  var token = new Token(type, tag, nesting);\n  token.block = true;\n\n  if (nesting < 0) this.level--; // closing tag\n  token.level = this.level;\n  if (nesting > 0) this.level++; // opening tag\n\n  this.tokens.push(token);\n  return token;\n};\n\nStateBlock.prototype.isEmpty = function isEmpty(line) {\n  return this.bMarks[line] + this.tShift[line] >= this.eMarks[line];\n};\n\nStateBlock.prototype.skipEmptyLines = function skipEmptyLines(from) {\n  for (var max = this.lineMax; from < max; from++) {\n    if (this.bMarks[from] + this.tShift[from] < this.eMarks[from]) {\n      break;\n    }\n  }\n  return from;\n};\n\n// Skip spaces from given position.\nStateBlock.prototype.skipSpaces = function skipSpaces(pos) {\n  var ch;\n\n  for (var max = this.src.length; pos < max; pos++) {\n    ch = this.src.charCodeAt(pos);\n    if (!isSpace(ch)) { break; }\n  }\n  return pos;\n};\n\n// Skip spaces from given position in reverse.\nStateBlock.prototype.skipSpacesBack = function skipSpacesBack(pos, min) {\n  if (pos <= min) { return pos; }\n\n  while (pos > min) {\n    if (!isSpace(this.src.charCodeAt(--pos))) { return pos + 1; }\n  }\n  return pos;\n};\n\n// Skip char codes from given position\nStateBlock.prototype.skipChars = function skipChars(pos, code) {\n  for (var max = this.src.length; pos < max; pos++) {\n    if (this.src.charCodeAt(pos) !== code) { break; }\n  }\n  return pos;\n};\n\n// Skip char codes reverse from given position - 1\nStateBlock.prototype.skipCharsBack = function skipCharsBack(pos, code, min) {\n  if (pos <= min) { return pos; }\n\n  while (pos > min) {\n    if (code !== this.src.charCodeAt(--pos)) { return pos + 1; }\n  }\n  return pos;\n};\n\n// cut lines range from source.\nStateBlock.prototype.getLines = function getLines(begin, end, indent, keepLastLF) {\n  var i, lineIndent, ch, first, last, queue, lineStart,\n      line = begin;\n\n  if (begin >= end) {\n    return '';\n  }\n\n  queue = new Array(end - begin);\n\n  for (i = 0; line < end; line++, i++) {\n    lineIndent = 0;\n    lineStart = first = this.bMarks[line];\n\n    if (line + 1 < end || keepLastLF) {\n      // No need for bounds check because we have fake entry on tail.\n      last = this.eMarks[line] + 1;\n    } else {\n      last = this.eMarks[line];\n    }\n\n    while (first < last && lineIndent < indent) {\n      ch = this.src.charCodeAt(first);\n\n      if (isSpace(ch)) {\n        if (ch === 0x09) {\n          lineIndent += 4 - (lineIndent + this.bsCount[line]) % 4;\n        } else {\n          lineIndent++;\n        }\n      } else if (first - lineStart < this.tShift[line]) {\n        // patched tShift masked characters to look like spaces (blockquotes, list markers)\n        lineIndent++;\n      } else {\n        break;\n      }\n\n      first++;\n    }\n\n    if (lineIndent > indent) {\n      // partially expanding tabs in code blocks, e.g '\\t\\tfoobar'\n      // with indent=2 becomes '  \\tfoobar'\n      queue[i] = new Array(lineIndent - indent + 1).join(' ') + this.src.slice(first, last);\n    } else {\n      queue[i] = this.src.slice(first, last);\n    }\n  }\n\n  return queue.join('');\n};\n\n// re-export Token class to use in block rules\nStateBlock.prototype.Token = Token;\n\n\nmodule.exports = StateBlock;\n","// For each opening emphasis-like marker find a matching closing one\n//\n'use strict';\n\n\nfunction processDelimiters(state, delimiters) {\n  var closerIdx, openerIdx, closer, opener, minOpenerIdx, newMinOpenerIdx,\n      isOddMatch, lastJump,\n      openersBottom = {},\n      max = delimiters.length;\n\n  for (closerIdx = 0; closerIdx < max; closerIdx++) {\n    closer = delimiters[closerIdx];\n\n    // Length is only used for emphasis-specific \"rule of 3\",\n    // if it's not defined (in strikethrough or 3rd party plugins),\n    // we can default it to 0 to disable those checks.\n    //\n    closer.length = closer.length || 0;\n\n    if (!closer.close) continue;\n\n    // Previously calculated lower bounds (previous fails)\n    // for each marker and each delimiter length modulo 3.\n    if (!openersBottom.hasOwnProperty(closer.marker)) {\n      openersBottom[closer.marker] = [ -1, -1, -1 ];\n    }\n\n    minOpenerIdx = openersBottom[closer.marker][closer.length % 3];\n\n    openerIdx = closerIdx - closer.jump - 1;\n\n    // avoid crash if `closer.jump` is pointing outside of the array, see #742\n    if (openerIdx < -1) openerIdx = -1;\n\n    newMinOpenerIdx = openerIdx;\n\n    for (; openerIdx > minOpenerIdx; openerIdx -= opener.jump + 1) {\n      opener = delimiters[openerIdx];\n\n      if (opener.marker !== closer.marker) continue;\n\n      if (opener.open && opener.end < 0) {\n\n        isOddMatch = false;\n\n        // from spec:\n        //\n        // If one of the delimiters can both open and close emphasis, then the\n        // sum of the lengths of the delimiter runs containing the opening and\n        // closing delimiters must not be a multiple of 3 unless both lengths\n        // are multiples of 3.\n        //\n        if (opener.close || closer.open) {\n          if ((opener.length + closer.length) % 3 === 0) {\n            if (opener.length % 3 !== 0 || closer.length % 3 !== 0) {\n              isOddMatch = true;\n            }\n          }\n        }\n\n        if (!isOddMatch) {\n          // If previous delimiter cannot be an opener, we can safely skip\n          // the entire sequence in future checks. This is required to make\n          // sure algorithm has linear complexity (see *_*_*_*_*_... case).\n          //\n          lastJump = openerIdx > 0 && !delimiters[openerIdx - 1].open ?\n            delimiters[openerIdx - 1].jump + 1 :\n            0;\n\n          closer.jump  = closerIdx - openerIdx + lastJump;\n          closer.open  = false;\n          opener.end   = closerIdx;\n          opener.jump  = lastJump;\n          opener.close = false;\n          newMinOpenerIdx = -1;\n          break;\n        }\n      }\n    }\n\n    if (newMinOpenerIdx !== -1) {\n      // If match for this delimiter run failed, we want to set lower bound for\n      // future lookups. This is required to make sure algorithm has linear\n      // complexity.\n      //\n      // See details here:\n      // https://github.com/commonmark/cmark/issues/178#issuecomment-270417442\n      //\n      openersBottom[closer.marker][(closer.length || 0) % 3] = newMinOpenerIdx;\n    }\n  }\n}\n\n\nmodule.exports = function link_pairs(state) {\n  var curr,\n      tokens_meta = state.tokens_meta,\n      max = state.tokens_meta.length;\n\n  processDelimiters(state, state.delimiters);\n\n  for (curr = 0; curr < max; curr++) {\n    if (tokens_meta[curr] && tokens_meta[curr].delimiters) {\n      processDelimiters(state, tokens_meta[curr].delimiters);\n    }\n  }\n};\n","// markdown-it default options\n\n'use strict';\n\n\nmodule.exports = {\n  options: {\n    html:         false,        // Enable HTML tags in source\n    xhtmlOut:     false,        // Use '/' to close single tags (<br />)\n    breaks:       false,        // Convert '\\n' in paragraphs into <br>\n    langPrefix:   'language-',  // CSS language prefix for fenced blocks\n    linkify:      false,        // autoconvert URL-like texts to links\n\n    // Enable some language-neutral replacements + quotes beautification\n    typographer:  false,\n\n    // Double + single quotes replacement pairs, when typographer enabled,\n    // and smartquotes on. Could be either a String or an Array.\n    //\n    // For example, you can use '«»„“' for Russian, '„“‚‘' for German,\n    // and ['«\\xA0', '\\xA0»', '‹\\xA0', '\\xA0›'] for French (including nbsp).\n    quotes: '\\u201c\\u201d\\u2018\\u2019', /* “”‘’ */\n\n    // Highlighter function. Should return escaped HTML,\n    // or '' if the source string is not changed and should be escaped externaly.\n    // If result starts with <pre... internal wrapper is skipped.\n    //\n    // function (/*str, lang*/) { return ''; }\n    //\n    highlight: null,\n\n    maxNesting:   100            // Internal protection, recursion limit\n  },\n\n  components: {\n\n    core: {},\n    block: {},\n    inline: {}\n  }\n};\n","'use strict';\nvar charAt = require('../internals/string-multibyte').charAt;\n\n// `AdvanceStringIndex` abstract operation\n// https://tc39.es/ecma262/#sec-advancestringindex\nmodule.exports = function (S, index, unicode) {\n  return index + (unicode ? charAt(S, index).length : 1);\n};\n","\n'use strict';\n\n\n/* eslint-disable no-bitwise */\n\nvar decodeCache = {};\n\nfunction getDecodeCache(exclude) {\n  var i, ch, cache = decodeCache[exclude];\n  if (cache) { return cache; }\n\n  cache = decodeCache[exclude] = [];\n\n  for (i = 0; i < 128; i++) {\n    ch = String.fromCharCode(i);\n    cache.push(ch);\n  }\n\n  for (i = 0; i < exclude.length; i++) {\n    ch = exclude.charCodeAt(i);\n    cache[ch] = '%' + ('0' + ch.toString(16).toUpperCase()).slice(-2);\n  }\n\n  return cache;\n}\n\n\n// Decode percent-encoded string.\n//\nfunction decode(string, exclude) {\n  var cache;\n\n  if (typeof exclude !== 'string') {\n    exclude = decode.defaultChars;\n  }\n\n  cache = getDecodeCache(exclude);\n\n  return string.replace(/(%[a-f0-9]{2})+/gi, function(seq) {\n    var i, l, b1, b2, b3, b4, chr,\n        result = '';\n\n    for (i = 0, l = seq.length; i < l; i += 3) {\n      b1 = parseInt(seq.slice(i + 1, i + 3), 16);\n\n      if (b1 < 0x80) {\n        result += cache[b1];\n        continue;\n      }\n\n      if ((b1 & 0xE0) === 0xC0 && (i + 3 < l)) {\n        // 110xxxxx 10xxxxxx\n        b2 = parseInt(seq.slice(i + 4, i + 6), 16);\n\n        if ((b2 & 0xC0) === 0x80) {\n          chr = ((b1 << 6) & 0x7C0) | (b2 & 0x3F);\n\n          if (chr < 0x80) {\n            result += '\\ufffd\\ufffd';\n          } else {\n            result += String.fromCharCode(chr);\n          }\n\n          i += 3;\n          continue;\n        }\n      }\n\n      if ((b1 & 0xF0) === 0xE0 && (i + 6 < l)) {\n        // 1110xxxx 10xxxxxx 10xxxxxx\n        b2 = parseInt(seq.slice(i + 4, i + 6), 16);\n        b3 = parseInt(seq.slice(i + 7, i + 9), 16);\n\n        if ((b2 & 0xC0) === 0x80 && (b3 & 0xC0) === 0x80) {\n          chr = ((b1 << 12) & 0xF000) | ((b2 << 6) & 0xFC0) | (b3 & 0x3F);\n\n          if (chr < 0x800 || (chr >= 0xD800 && chr <= 0xDFFF)) {\n            result += '\\ufffd\\ufffd\\ufffd';\n          } else {\n            result += String.fromCharCode(chr);\n          }\n\n          i += 6;\n          continue;\n        }\n      }\n\n      if ((b1 & 0xF8) === 0xF0 && (i + 9 < l)) {\n        // 111110xx 10xxxxxx 10xxxxxx 10xxxxxx\n        b2 = parseInt(seq.slice(i + 4, i + 6), 16);\n        b3 = parseInt(seq.slice(i + 7, i + 9), 16);\n        b4 = parseInt(seq.slice(i + 10, i + 12), 16);\n\n        if ((b2 & 0xC0) === 0x80 && (b3 & 0xC0) === 0x80 && (b4 & 0xC0) === 0x80) {\n          chr = ((b1 << 18) & 0x1C0000) | ((b2 << 12) & 0x3F000) | ((b3 << 6) & 0xFC0) | (b4 & 0x3F);\n\n          if (chr < 0x10000 || chr > 0x10FFFF) {\n            result += '\\ufffd\\ufffd\\ufffd\\ufffd';\n          } else {\n            chr -= 0x10000;\n            result += String.fromCharCode(0xD800 + (chr >> 10), 0xDC00 + (chr & 0x3FF));\n          }\n\n          i += 9;\n          continue;\n        }\n      }\n\n      result += '\\ufffd';\n    }\n\n    return result;\n  });\n}\n\n\ndecode.defaultChars   = ';/?:@&=+$,#';\ndecode.componentChars = '';\n\n\nmodule.exports = decode;\n","// ~~strike through~~\n//\n'use strict';\n\n\n// Insert each marker as a separate text token, and add it to delimiter list\n//\nmodule.exports.tokenize = function strikethrough(state, silent) {\n  var i, scanned, token, len, ch,\n      start = state.pos,\n      marker = state.src.charCodeAt(start);\n\n  if (silent) { return false; }\n\n  if (marker !== 0x7E/* ~ */) { return false; }\n\n  scanned = state.scanDelims(state.pos, true);\n  len = scanned.length;\n  ch = String.fromCharCode(marker);\n\n  if (len < 2) { return false; }\n\n  if (len % 2) {\n    token         = state.push('text', '', 0);\n    token.content = ch;\n    len--;\n  }\n\n  for (i = 0; i < len; i += 2) {\n    token         = state.push('text', '', 0);\n    token.content = ch + ch;\n\n    state.delimiters.push({\n      marker: marker,\n      length: 0,     // disable \"rule of 3\" length checks meant for emphasis\n      jump:   i / 2, // for `~~` 1 marker = 2 characters\n      token:  state.tokens.length - 1,\n      end:    -1,\n      open:   scanned.can_open,\n      close:  scanned.can_close\n    });\n  }\n\n  state.pos += scanned.length;\n\n  return true;\n};\n\n\nfunction postProcess(state, delimiters) {\n  var i, j,\n      startDelim,\n      endDelim,\n      token,\n      loneMarkers = [],\n      max = delimiters.length;\n\n  for (i = 0; i < max; i++) {\n    startDelim = delimiters[i];\n\n    if (startDelim.marker !== 0x7E/* ~ */) {\n      continue;\n    }\n\n    if (startDelim.end === -1) {\n      continue;\n    }\n\n    endDelim = delimiters[startDelim.end];\n\n    token         = state.tokens[startDelim.token];\n    token.type    = 's_open';\n    token.tag     = 's';\n    token.nesting = 1;\n    token.markup  = '~~';\n    token.content = '';\n\n    token         = state.tokens[endDelim.token];\n    token.type    = 's_close';\n    token.tag     = 's';\n    token.nesting = -1;\n    token.markup  = '~~';\n    token.content = '';\n\n    if (state.tokens[endDelim.token - 1].type === 'text' &&\n        state.tokens[endDelim.token - 1].content === '~') {\n\n      loneMarkers.push(endDelim.token - 1);\n    }\n  }\n\n  // If a marker sequence has an odd number of characters, it's splitted\n  // like this: `~~~~~` -> `~` + `~~` + `~~`, leaving one marker at the\n  // start of the sequence.\n  //\n  // So, we have to move all those markers after subsequent s_close tags.\n  //\n  while (loneMarkers.length) {\n    i = loneMarkers.pop();\n    j = i + 1;\n\n    while (j < state.tokens.length && state.tokens[j].type === 's_close') {\n      j++;\n    }\n\n    j--;\n\n    if (i !== j) {\n      token = state.tokens[j];\n      state.tokens[j] = state.tokens[i];\n      state.tokens[i] = token;\n    }\n  }\n}\n\n\n// Walk through delimiter list and replace text tokens with tags\n//\nmodule.exports.postProcess = function strikethrough(state) {\n  var curr,\n      tokens_meta = state.tokens_meta,\n      max = state.tokens_meta.length;\n\n  postProcess(state, state.delimiters);\n\n  for (curr = 0; curr < max; curr++) {\n    if (tokens_meta[curr] && tokens_meta[curr].delimiters) {\n      postProcess(state, tokens_meta[curr].delimiters);\n    }\n  }\n};\n","'use strict';\n/* eslint-disable regexp/no-assertion-capturing-group, regexp/no-empty-group, regexp/no-lazy-ends -- testing */\n/* eslint-disable regexp/no-useless-quantifier -- testing */\nvar regexpFlags = require('./regexp-flags');\nvar stickyHelpers = require('./regexp-sticky-helpers');\nvar shared = require('./shared');\n\nvar nativeExec = RegExp.prototype.exec;\nvar nativeReplace = shared('native-string-replace', String.prototype.replace);\n\nvar patchedExec = nativeExec;\n\nvar UPDATES_LAST_INDEX_WRONG = (function () {\n  var re1 = /a/;\n  var re2 = /b*/g;\n  nativeExec.call(re1, 'a');\n  nativeExec.call(re2, 'a');\n  return re1.lastIndex !== 0 || re2.lastIndex !== 0;\n})();\n\nvar UNSUPPORTED_Y = stickyHelpers.UNSUPPORTED_Y || stickyHelpers.BROKEN_CARET;\n\n// nonparticipating capturing group, copied from es5-shim's String#split patch.\nvar NPCG_INCLUDED = /()??/.exec('')[1] !== undefined;\n\nvar PATCH = UPDATES_LAST_INDEX_WRONG || NPCG_INCLUDED || UNSUPPORTED_Y;\n\nif (PATCH) {\n  patchedExec = function exec(str) {\n    var re = this;\n    var lastIndex, reCopy, match, i;\n    var sticky = UNSUPPORTED_Y && re.sticky;\n    var flags = regexpFlags.call(re);\n    var source = re.source;\n    var charsAdded = 0;\n    var strCopy = str;\n\n    if (sticky) {\n      flags = flags.replace('y', '');\n      if (flags.indexOf('g') === -1) {\n        flags += 'g';\n      }\n\n      strCopy = String(str).slice(re.lastIndex);\n      // Support anchored sticky behavior.\n      if (re.lastIndex > 0 && (!re.multiline || re.multiline && str[re.lastIndex - 1] !== '\\n')) {\n        source = '(?: ' + source + ')';\n        strCopy = ' ' + strCopy;\n        charsAdded++;\n      }\n      // ^(? + rx + ) is needed, in combination with some str slicing, to\n      // simulate the 'y' flag.\n      reCopy = new RegExp('^(?:' + source + ')', flags);\n    }\n\n    if (NPCG_INCLUDED) {\n      reCopy = new RegExp('^' + source + '$(?!\\\\s)', flags);\n    }\n    if (UPDATES_LAST_INDEX_WRONG) lastIndex = re.lastIndex;\n\n    match = nativeExec.call(sticky ? reCopy : re, strCopy);\n\n    if (sticky) {\n      if (match) {\n        match.input = match.input.slice(charsAdded);\n        match[0] = match[0].slice(charsAdded);\n        match.index = re.lastIndex;\n        re.lastIndex += match[0].length;\n      } else re.lastIndex = 0;\n    } else if (UPDATES_LAST_INDEX_WRONG && match) {\n      re.lastIndex = re.global ? match.index + match[0].length : lastIndex;\n    }\n    if (NPCG_INCLUDED && match && match.length > 1) {\n      // Fix browsers whose `exec` methods don't consistently return `undefined`\n      // for NPCG, like IE8. NOTE: This doesn' work for /(.?)?/\n      nativeReplace.call(match[0], reCopy, function () {\n        for (i = 1; i < arguments.length - 2; i++) {\n          if (arguments[i] === undefined) match[i] = undefined;\n        }\n      });\n    }\n\n    return match;\n  };\n}\n\nmodule.exports = patchedExec;\n","// Process ![image](<src> \"title\")\n\n'use strict';\n\nvar normalizeReference   = require('../common/utils').normalizeReference;\nvar isSpace              = require('../common/utils').isSpace;\n\n\nmodule.exports = function image(state, silent) {\n  var attrs,\n      code,\n      content,\n      label,\n      labelEnd,\n      labelStart,\n      pos,\n      ref,\n      res,\n      title,\n      token,\n      tokens,\n      start,\n      href = '',\n      oldPos = state.pos,\n      max = state.posMax;\n\n  if (state.src.charCodeAt(state.pos) !== 0x21/* ! */) { return false; }\n  if (state.src.charCodeAt(state.pos + 1) !== 0x5B/* [ */) { return false; }\n\n  labelStart = state.pos + 2;\n  labelEnd = state.md.helpers.parseLinkLabel(state, state.pos + 1, false);\n\n  // parser failed to find ']', so it's not a valid link\n  if (labelEnd < 0) { return false; }\n\n  pos = labelEnd + 1;\n  if (pos < max && state.src.charCodeAt(pos) === 0x28/* ( */) {\n    //\n    // Inline link\n    //\n\n    // [link](  <href>  \"title\"  )\n    //        ^^ skipping these spaces\n    pos++;\n    for (; pos < max; pos++) {\n      code = state.src.charCodeAt(pos);\n      if (!isSpace(code) && code !== 0x0A) { break; }\n    }\n    if (pos >= max) { return false; }\n\n    // [link](  <href>  \"title\"  )\n    //          ^^^^^^ parsing link destination\n    start = pos;\n    res = state.md.helpers.parseLinkDestination(state.src, pos, state.posMax);\n    if (res.ok) {\n      href = state.md.normalizeLink(res.str);\n      if (state.md.validateLink(href)) {\n        pos = res.pos;\n      } else {\n        href = '';\n      }\n    }\n\n    // [link](  <href>  \"title\"  )\n    //                ^^ skipping these spaces\n    start = pos;\n    for (; pos < max; pos++) {\n      code = state.src.charCodeAt(pos);\n      if (!isSpace(code) && code !== 0x0A) { break; }\n    }\n\n    // [link](  <href>  \"title\"  )\n    //                  ^^^^^^^ parsing link title\n    res = state.md.helpers.parseLinkTitle(state.src, pos, state.posMax);\n    if (pos < max && start !== pos && res.ok) {\n      title = res.str;\n      pos = res.pos;\n\n      // [link](  <href>  \"title\"  )\n      //                         ^^ skipping these spaces\n      for (; pos < max; pos++) {\n        code = state.src.charCodeAt(pos);\n        if (!isSpace(code) && code !== 0x0A) { break; }\n      }\n    } else {\n      title = '';\n    }\n\n    if (pos >= max || state.src.charCodeAt(pos) !== 0x29/* ) */) {\n      state.pos = oldPos;\n      return false;\n    }\n    pos++;\n  } else {\n    //\n    // Link reference\n    //\n    if (typeof state.env.references === 'undefined') { return false; }\n\n    if (pos < max && state.src.charCodeAt(pos) === 0x5B/* [ */) {\n      start = pos + 1;\n      pos = state.md.helpers.parseLinkLabel(state, pos);\n      if (pos >= 0) {\n        label = state.src.slice(start, pos++);\n      } else {\n        pos = labelEnd + 1;\n      }\n    } else {\n      pos = labelEnd + 1;\n    }\n\n    // covers label === '' and label === undefined\n    // (collapsed reference link and shortcut reference link respectively)\n    if (!label) { label = state.src.slice(labelStart, labelEnd); }\n\n    ref = state.env.references[normalizeReference(label)];\n    if (!ref) {\n      state.pos = oldPos;\n      return false;\n    }\n    href = ref.href;\n    title = ref.title;\n  }\n\n  //\n  // We found the end of the link, and know for a fact it's a valid link;\n  // so all that's left to do is to call tokenizer.\n  //\n  if (!silent) {\n    content = state.src.slice(labelStart, labelEnd);\n\n    state.md.inline.parse(\n      content,\n      state.md,\n      state.env,\n      tokens = []\n    );\n\n    token          = state.push('image', 'img', 0);\n    token.attrs    = attrs = [ [ 'src', href ], [ 'alt', '' ] ];\n    token.children = tokens;\n    token.content  = content;\n\n    if (title) {\n      attrs.push([ 'title', title ]);\n    }\n  }\n\n  state.pos = pos;\n  state.posMax = max;\n  return true;\n};\n","// Replace link-like texts with link nodes.\n//\n// Currently restricted by `md.validateLink()` to http/https/ftp\n//\n'use strict';\n\n\nvar arrayReplaceAt = require('../common/utils').arrayReplaceAt;\n\n\nfunction isLinkOpen(str) {\n  return /^<a[>\\s]/i.test(str);\n}\nfunction isLinkClose(str) {\n  return /^<\\/a\\s*>/i.test(str);\n}\n\n\nmodule.exports = function linkify(state) {\n  var i, j, l, tokens, token, currentToken, nodes, ln, text, pos, lastPos,\n      level, htmlLinkLevel, url, fullUrl, urlText,\n      blockTokens = state.tokens,\n      links;\n\n  if (!state.md.options.linkify) { return; }\n\n  for (j = 0, l = blockTokens.length; j < l; j++) {\n    if (blockTokens[j].type !== 'inline' ||\n        !state.md.linkify.pretest(blockTokens[j].content)) {\n      continue;\n    }\n\n    tokens = blockTokens[j].children;\n\n    htmlLinkLevel = 0;\n\n    // We scan from the end, to keep position when new tags added.\n    // Use reversed logic in links start/end match\n    for (i = tokens.length - 1; i >= 0; i--) {\n      currentToken = tokens[i];\n\n      // Skip content of markdown links\n      if (currentToken.type === 'link_close') {\n        i--;\n        while (tokens[i].level !== currentToken.level && tokens[i].type !== 'link_open') {\n          i--;\n        }\n        continue;\n      }\n\n      // Skip content of html tag links\n      if (currentToken.type === 'html_inline') {\n        if (isLinkOpen(currentToken.content) && htmlLinkLevel > 0) {\n          htmlLinkLevel--;\n        }\n        if (isLinkClose(currentToken.content)) {\n          htmlLinkLevel++;\n        }\n      }\n      if (htmlLinkLevel > 0) { continue; }\n\n      if (currentToken.type === 'text' && state.md.linkify.test(currentToken.content)) {\n\n        text = currentToken.content;\n        links = state.md.linkify.match(text);\n\n        // Now split string to nodes\n        nodes = [];\n        level = currentToken.level;\n        lastPos = 0;\n\n        for (ln = 0; ln < links.length; ln++) {\n\n          url = links[ln].url;\n          fullUrl = state.md.normalizeLink(url);\n          if (!state.md.validateLink(fullUrl)) { continue; }\n\n          urlText = links[ln].text;\n\n          // Linkifier might send raw hostnames like \"example.com\", where url\n          // starts with domain name. So we prepend http:// in those cases,\n          // and remove it afterwards.\n          //\n          if (!links[ln].schema) {\n            urlText = state.md.normalizeLinkText('http://' + urlText).replace(/^http:\\/\\//, '');\n          } else if (links[ln].schema === 'mailto:' && !/^mailto:/i.test(urlText)) {\n            urlText = state.md.normalizeLinkText('mailto:' + urlText).replace(/^mailto:/, '');\n          } else {\n            urlText = state.md.normalizeLinkText(urlText);\n          }\n\n          pos = links[ln].index;\n\n          if (pos > lastPos) {\n            token         = new state.Token('text', '', 0);\n            token.content = text.slice(lastPos, pos);\n            token.level   = level;\n            nodes.push(token);\n          }\n\n          token         = new state.Token('link_open', 'a', 1);\n          token.attrs   = [ [ 'href', fullUrl ] ];\n          token.level   = level++;\n          token.markup  = 'linkify';\n          token.info    = 'auto';\n          nodes.push(token);\n\n          token         = new state.Token('text', '', 0);\n          token.content = urlText;\n          token.level   = level;\n          nodes.push(token);\n\n          token         = new state.Token('link_close', 'a', -1);\n          token.level   = --level;\n          token.markup  = 'linkify';\n          token.info    = 'auto';\n          nodes.push(token);\n\n          lastPos = links[ln].lastIndex;\n        }\n        if (lastPos < text.length) {\n          token         = new state.Token('text', '', 0);\n          token.content = text.slice(lastPos);\n          token.level   = level;\n          nodes.push(token);\n        }\n\n        // replace current node\n        blockTokens[j].children = tokens = arrayReplaceAt(tokens, i, nodes);\n      }\n    }\n  }\n};\n","// Code block (4 spaces padded)\n\n'use strict';\n\n\nmodule.exports = function code(state, startLine, endLine/*, silent*/) {\n  var nextLine, last, token;\n\n  if (state.sCount[startLine] - state.blkIndent < 4) { return false; }\n\n  last = nextLine = startLine + 1;\n\n  while (nextLine < endLine) {\n    if (state.isEmpty(nextLine)) {\n      nextLine++;\n      continue;\n    }\n\n    if (state.sCount[nextLine] - state.blkIndent >= 4) {\n      nextLine++;\n      last = nextLine;\n      continue;\n    }\n    break;\n  }\n\n  state.line = last;\n\n  token         = state.push('code_block', 'code', 0);\n  token.content = state.getLines(startLine, last, 4 + state.blkIndent, true);\n  token.map     = [ startLine, state.line ];\n\n  return true;\n};\n","/*! https://mths.be/punycode v1.4.1 by @mathias */\n;(function(root) {\n\n\t/** Detect free variables */\n\tvar freeExports = typeof exports == 'object' && exports &&\n\t\t!exports.nodeType && exports;\n\tvar freeModule = typeof module == 'object' && module &&\n\t\t!module.nodeType && module;\n\tvar freeGlobal = typeof global == 'object' && global;\n\tif (\n\t\tfreeGlobal.global === freeGlobal ||\n\t\tfreeGlobal.window === freeGlobal ||\n\t\tfreeGlobal.self === freeGlobal\n\t) {\n\t\troot = freeGlobal;\n\t}\n\n\t/**\n\t * The `punycode` object.\n\t * @name punycode\n\t * @type Object\n\t */\n\tvar punycode,\n\n\t/** Highest positive signed 32-bit float value */\n\tmaxInt = 2147483647, // aka. 0x7FFFFFFF or 2^31-1\n\n\t/** Bootstring parameters */\n\tbase = 36,\n\ttMin = 1,\n\ttMax = 26,\n\tskew = 38,\n\tdamp = 700,\n\tinitialBias = 72,\n\tinitialN = 128, // 0x80\n\tdelimiter = '-', // '\\x2D'\n\n\t/** Regular expressions */\n\tregexPunycode = /^xn--/,\n\tregexNonASCII = /[^\\x20-\\x7E]/, // unprintable ASCII chars + non-ASCII chars\n\tregexSeparators = /[\\x2E\\u3002\\uFF0E\\uFF61]/g, // RFC 3490 separators\n\n\t/** Error messages */\n\terrors = {\n\t\t'overflow': 'Overflow: input needs wider integers to process',\n\t\t'not-basic': 'Illegal input >= 0x80 (not a basic code point)',\n\t\t'invalid-input': 'Invalid input'\n\t},\n\n\t/** Convenience shortcuts */\n\tbaseMinusTMin = base - tMin,\n\tfloor = Math.floor,\n\tstringFromCharCode = String.fromCharCode,\n\n\t/** Temporary variable */\n\tkey;\n\n\t/*--------------------------------------------------------------------------*/\n\n\t/**\n\t * A generic error utility function.\n\t * @private\n\t * @param {String} type The error type.\n\t * @returns {Error} Throws a `RangeError` with the applicable error message.\n\t */\n\tfunction error(type) {\n\t\tthrow new RangeError(errors[type]);\n\t}\n\n\t/**\n\t * A generic `Array#map` utility function.\n\t * @private\n\t * @param {Array} array The array to iterate over.\n\t * @param {Function} callback The function that gets called for every array\n\t * item.\n\t * @returns {Array} A new array of values returned by the callback function.\n\t */\n\tfunction map(array, fn) {\n\t\tvar length = array.length;\n\t\tvar result = [];\n\t\twhile (length--) {\n\t\t\tresult[length] = fn(array[length]);\n\t\t}\n\t\treturn result;\n\t}\n\n\t/**\n\t * A simple `Array#map`-like wrapper to work with domain name strings or email\n\t * addresses.\n\t * @private\n\t * @param {String} domain The domain name or email address.\n\t * @param {Function} callback The function that gets called for every\n\t * character.\n\t * @returns {Array} A new string of characters returned by the callback\n\t * function.\n\t */\n\tfunction mapDomain(string, fn) {\n\t\tvar parts = string.split('@');\n\t\tvar result = '';\n\t\tif (parts.length > 1) {\n\t\t\t// In email addresses, only the domain name should be punycoded. Leave\n\t\t\t// the local part (i.e. everything up to `@`) intact.\n\t\t\tresult = parts[0] + '@';\n\t\t\tstring = parts[1];\n\t\t}\n\t\t// Avoid `split(regex)` for IE8 compatibility. See #17.\n\t\tstring = string.replace(regexSeparators, '\\x2E');\n\t\tvar labels = string.split('.');\n\t\tvar encoded = map(labels, fn).join('.');\n\t\treturn result + encoded;\n\t}\n\n\t/**\n\t * Creates an array containing the numeric code points of each Unicode\n\t * character in the string. While JavaScript uses UCS-2 internally,\n\t * this function will convert a pair of surrogate halves (each of which\n\t * UCS-2 exposes as separate characters) into a single code point,\n\t * matching UTF-16.\n\t * @see `punycode.ucs2.encode`\n\t * @see <https://mathiasbynens.be/notes/javascript-encoding>\n\t * @memberOf punycode.ucs2\n\t * @name decode\n\t * @param {String} string The Unicode input string (UCS-2).\n\t * @returns {Array} The new array of code points.\n\t */\n\tfunction ucs2decode(string) {\n\t\tvar output = [],\n\t\t    counter = 0,\n\t\t    length = string.length,\n\t\t    value,\n\t\t    extra;\n\t\twhile (counter < length) {\n\t\t\tvalue = string.charCodeAt(counter++);\n\t\t\tif (value >= 0xD800 && value <= 0xDBFF && counter < length) {\n\t\t\t\t// high surrogate, and there is a next character\n\t\t\t\textra = string.charCodeAt(counter++);\n\t\t\t\tif ((extra & 0xFC00) == 0xDC00) { // low surrogate\n\t\t\t\t\toutput.push(((value & 0x3FF) << 10) + (extra & 0x3FF) + 0x10000);\n\t\t\t\t} else {\n\t\t\t\t\t// unmatched surrogate; only append this code unit, in case the next\n\t\t\t\t\t// code unit is the high surrogate of a surrogate pair\n\t\t\t\t\toutput.push(value);\n\t\t\t\t\tcounter--;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\toutput.push(value);\n\t\t\t}\n\t\t}\n\t\treturn output;\n\t}\n\n\t/**\n\t * Creates a string based on an array of numeric code points.\n\t * @see `punycode.ucs2.decode`\n\t * @memberOf punycode.ucs2\n\t * @name encode\n\t * @param {Array} codePoints The array of numeric code points.\n\t * @returns {String} The new Unicode string (UCS-2).\n\t */\n\tfunction ucs2encode(array) {\n\t\treturn map(array, function(value) {\n\t\t\tvar output = '';\n\t\t\tif (value > 0xFFFF) {\n\t\t\t\tvalue -= 0x10000;\n\t\t\t\toutput += stringFromCharCode(value >>> 10 & 0x3FF | 0xD800);\n\t\t\t\tvalue = 0xDC00 | value & 0x3FF;\n\t\t\t}\n\t\t\toutput += stringFromCharCode(value);\n\t\t\treturn output;\n\t\t}).join('');\n\t}\n\n\t/**\n\t * Converts a basic code point into a digit/integer.\n\t * @see `digitToBasic()`\n\t * @private\n\t * @param {Number} codePoint The basic numeric code point value.\n\t * @returns {Number} The numeric value of a basic code point (for use in\n\t * representing integers) in the range `0` to `base - 1`, or `base` if\n\t * the code point does not represent a value.\n\t */\n\tfunction basicToDigit(codePoint) {\n\t\tif (codePoint - 48 < 10) {\n\t\t\treturn codePoint - 22;\n\t\t}\n\t\tif (codePoint - 65 < 26) {\n\t\t\treturn codePoint - 65;\n\t\t}\n\t\tif (codePoint - 97 < 26) {\n\t\t\treturn codePoint - 97;\n\t\t}\n\t\treturn base;\n\t}\n\n\t/**\n\t * Converts a digit/integer into a basic code point.\n\t * @see `basicToDigit()`\n\t * @private\n\t * @param {Number} digit The numeric value of a basic code point.\n\t * @returns {Number} The basic code point whose value (when used for\n\t * representing integers) is `digit`, which needs to be in the range\n\t * `0` to `base - 1`. If `flag` is non-zero, the uppercase form is\n\t * used; else, the lowercase form is used. The behavior is undefined\n\t * if `flag` is non-zero and `digit` has no uppercase form.\n\t */\n\tfunction digitToBasic(digit, flag) {\n\t\t//  0..25 map to ASCII a..z or A..Z\n\t\t// 26..35 map to ASCII 0..9\n\t\treturn digit + 22 + 75 * (digit < 26) - ((flag != 0) << 5);\n\t}\n\n\t/**\n\t * Bias adaptation function as per section 3.4 of RFC 3492.\n\t * https://tools.ietf.org/html/rfc3492#section-3.4\n\t * @private\n\t */\n\tfunction adapt(delta, numPoints, firstTime) {\n\t\tvar k = 0;\n\t\tdelta = firstTime ? floor(delta / damp) : delta >> 1;\n\t\tdelta += floor(delta / numPoints);\n\t\tfor (/* no initialization */; delta > baseMinusTMin * tMax >> 1; k += base) {\n\t\t\tdelta = floor(delta / baseMinusTMin);\n\t\t}\n\t\treturn floor(k + (baseMinusTMin + 1) * delta / (delta + skew));\n\t}\n\n\t/**\n\t * Converts a Punycode string of ASCII-only symbols to a string of Unicode\n\t * symbols.\n\t * @memberOf punycode\n\t * @param {String} input The Punycode string of ASCII-only symbols.\n\t * @returns {String} The resulting string of Unicode symbols.\n\t */\n\tfunction decode(input) {\n\t\t// Don't use UCS-2\n\t\tvar output = [],\n\t\t    inputLength = input.length,\n\t\t    out,\n\t\t    i = 0,\n\t\t    n = initialN,\n\t\t    bias = initialBias,\n\t\t    basic,\n\t\t    j,\n\t\t    index,\n\t\t    oldi,\n\t\t    w,\n\t\t    k,\n\t\t    digit,\n\t\t    t,\n\t\t    /** Cached calculation results */\n\t\t    baseMinusT;\n\n\t\t// Handle the basic code points: let `basic` be the number of input code\n\t\t// points before the last delimiter, or `0` if there is none, then copy\n\t\t// the first basic code points to the output.\n\n\t\tbasic = input.lastIndexOf(delimiter);\n\t\tif (basic < 0) {\n\t\t\tbasic = 0;\n\t\t}\n\n\t\tfor (j = 0; j < basic; ++j) {\n\t\t\t// if it's not a basic code point\n\t\t\tif (input.charCodeAt(j) >= 0x80) {\n\t\t\t\terror('not-basic');\n\t\t\t}\n\t\t\toutput.push(input.charCodeAt(j));\n\t\t}\n\n\t\t// Main decoding loop: start just after the last delimiter if any basic code\n\t\t// points were copied; start at the beginning otherwise.\n\n\t\tfor (index = basic > 0 ? basic + 1 : 0; index < inputLength; /* no final expression */) {\n\n\t\t\t// `index` is the index of the next character to be consumed.\n\t\t\t// Decode a generalized variable-length integer into `delta`,\n\t\t\t// which gets added to `i`. The overflow checking is easier\n\t\t\t// if we increase `i` as we go, then subtract off its starting\n\t\t\t// value at the end to obtain `delta`.\n\t\t\tfor (oldi = i, w = 1, k = base; /* no condition */; k += base) {\n\n\t\t\t\tif (index >= inputLength) {\n\t\t\t\t\terror('invalid-input');\n\t\t\t\t}\n\n\t\t\t\tdigit = basicToDigit(input.charCodeAt(index++));\n\n\t\t\t\tif (digit >= base || digit > floor((maxInt - i) / w)) {\n\t\t\t\t\terror('overflow');\n\t\t\t\t}\n\n\t\t\t\ti += digit * w;\n\t\t\t\tt = k <= bias ? tMin : (k >= bias + tMax ? tMax : k - bias);\n\n\t\t\t\tif (digit < t) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\n\t\t\t\tbaseMinusT = base - t;\n\t\t\t\tif (w > floor(maxInt / baseMinusT)) {\n\t\t\t\t\terror('overflow');\n\t\t\t\t}\n\n\t\t\t\tw *= baseMinusT;\n\n\t\t\t}\n\n\t\t\tout = output.length + 1;\n\t\t\tbias = adapt(i - oldi, out, oldi == 0);\n\n\t\t\t// `i` was supposed to wrap around from `out` to `0`,\n\t\t\t// incrementing `n` each time, so we'll fix that now:\n\t\t\tif (floor(i / out) > maxInt - n) {\n\t\t\t\terror('overflow');\n\t\t\t}\n\n\t\t\tn += floor(i / out);\n\t\t\ti %= out;\n\n\t\t\t// Insert `n` at position `i` of the output\n\t\t\toutput.splice(i++, 0, n);\n\n\t\t}\n\n\t\treturn ucs2encode(output);\n\t}\n\n\t/**\n\t * Converts a string of Unicode symbols (e.g. a domain name label) to a\n\t * Punycode string of ASCII-only symbols.\n\t * @memberOf punycode\n\t * @param {String} input The string of Unicode symbols.\n\t * @returns {String} The resulting Punycode string of ASCII-only symbols.\n\t */\n\tfunction encode(input) {\n\t\tvar n,\n\t\t    delta,\n\t\t    handledCPCount,\n\t\t    basicLength,\n\t\t    bias,\n\t\t    j,\n\t\t    m,\n\t\t    q,\n\t\t    k,\n\t\t    t,\n\t\t    currentValue,\n\t\t    output = [],\n\t\t    /** `inputLength` will hold the number of code points in `input`. */\n\t\t    inputLength,\n\t\t    /** Cached calculation results */\n\t\t    handledCPCountPlusOne,\n\t\t    baseMinusT,\n\t\t    qMinusT;\n\n\t\t// Convert the input in UCS-2 to Unicode\n\t\tinput = ucs2decode(input);\n\n\t\t// Cache the length\n\t\tinputLength = input.length;\n\n\t\t// Initialize the state\n\t\tn = initialN;\n\t\tdelta = 0;\n\t\tbias = initialBias;\n\n\t\t// Handle the basic code points\n\t\tfor (j = 0; j < inputLength; ++j) {\n\t\t\tcurrentValue = input[j];\n\t\t\tif (currentValue < 0x80) {\n\t\t\t\toutput.push(stringFromCharCode(currentValue));\n\t\t\t}\n\t\t}\n\n\t\thandledCPCount = basicLength = output.length;\n\n\t\t// `handledCPCount` is the number of code points that have been handled;\n\t\t// `basicLength` is the number of basic code points.\n\n\t\t// Finish the basic string - if it is not empty - with a delimiter\n\t\tif (basicLength) {\n\t\t\toutput.push(delimiter);\n\t\t}\n\n\t\t// Main encoding loop:\n\t\twhile (handledCPCount < inputLength) {\n\n\t\t\t// All non-basic code points < n have been handled already. Find the next\n\t\t\t// larger one:\n\t\t\tfor (m = maxInt, j = 0; j < inputLength; ++j) {\n\t\t\t\tcurrentValue = input[j];\n\t\t\t\tif (currentValue >= n && currentValue < m) {\n\t\t\t\t\tm = currentValue;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Increase `delta` enough to advance the decoder's <n,i> state to <m,0>,\n\t\t\t// but guard against overflow\n\t\t\thandledCPCountPlusOne = handledCPCount + 1;\n\t\t\tif (m - n > floor((maxInt - delta) / handledCPCountPlusOne)) {\n\t\t\t\terror('overflow');\n\t\t\t}\n\n\t\t\tdelta += (m - n) * handledCPCountPlusOne;\n\t\t\tn = m;\n\n\t\t\tfor (j = 0; j < inputLength; ++j) {\n\t\t\t\tcurrentValue = input[j];\n\n\t\t\t\tif (currentValue < n && ++delta > maxInt) {\n\t\t\t\t\terror('overflow');\n\t\t\t\t}\n\n\t\t\t\tif (currentValue == n) {\n\t\t\t\t\t// Represent delta as a generalized variable-length integer\n\t\t\t\t\tfor (q = delta, k = base; /* no condition */; k += base) {\n\t\t\t\t\t\tt = k <= bias ? tMin : (k >= bias + tMax ? tMax : k - bias);\n\t\t\t\t\t\tif (q < t) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tqMinusT = q - t;\n\t\t\t\t\t\tbaseMinusT = base - t;\n\t\t\t\t\t\toutput.push(\n\t\t\t\t\t\t\tstringFromCharCode(digitToBasic(t + qMinusT % baseMinusT, 0))\n\t\t\t\t\t\t);\n\t\t\t\t\t\tq = floor(qMinusT / baseMinusT);\n\t\t\t\t\t}\n\n\t\t\t\t\toutput.push(stringFromCharCode(digitToBasic(q, 0)));\n\t\t\t\t\tbias = adapt(delta, handledCPCountPlusOne, handledCPCount == basicLength);\n\t\t\t\t\tdelta = 0;\n\t\t\t\t\t++handledCPCount;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t++delta;\n\t\t\t++n;\n\n\t\t}\n\t\treturn output.join('');\n\t}\n\n\t/**\n\t * Converts a Punycode string representing a domain name or an email address\n\t * to Unicode. Only the Punycoded parts of the input will be converted, i.e.\n\t * it doesn't matter if you call it on a string that has already been\n\t * converted to Unicode.\n\t * @memberOf punycode\n\t * @param {String} input The Punycoded domain name or email address to\n\t * convert to Unicode.\n\t * @returns {String} The Unicode representation of the given Punycode\n\t * string.\n\t */\n\tfunction toUnicode(input) {\n\t\treturn mapDomain(input, function(string) {\n\t\t\treturn regexPunycode.test(string)\n\t\t\t\t? decode(string.slice(4).toLowerCase())\n\t\t\t\t: string;\n\t\t});\n\t}\n\n\t/**\n\t * Converts a Unicode string representing a domain name or an email address to\n\t * Punycode. Only the non-ASCII parts of the domain name will be converted,\n\t * i.e. it doesn't matter if you call it with a domain that's already in\n\t * ASCII.\n\t * @memberOf punycode\n\t * @param {String} input The domain name or email address to convert, as a\n\t * Unicode string.\n\t * @returns {String} The Punycode representation of the given domain name or\n\t * email address.\n\t */\n\tfunction toASCII(input) {\n\t\treturn mapDomain(input, function(string) {\n\t\t\treturn regexNonASCII.test(string)\n\t\t\t\t? 'xn--' + encode(string)\n\t\t\t\t: string;\n\t\t});\n\t}\n\n\t/*--------------------------------------------------------------------------*/\n\n\t/** Define the public API */\n\tpunycode = {\n\t\t/**\n\t\t * A string representing the current Punycode.js version number.\n\t\t * @memberOf punycode\n\t\t * @type String\n\t\t */\n\t\t'version': '1.4.1',\n\t\t/**\n\t\t * An object of methods to convert from JavaScript's internal character\n\t\t * representation (UCS-2) to Unicode code points, and back.\n\t\t * @see <https://mathiasbynens.be/notes/javascript-encoding>\n\t\t * @memberOf punycode\n\t\t * @type Object\n\t\t */\n\t\t'ucs2': {\n\t\t\t'decode': ucs2decode,\n\t\t\t'encode': ucs2encode\n\t\t},\n\t\t'decode': decode,\n\t\t'encode': encode,\n\t\t'toASCII': toASCII,\n\t\t'toUnicode': toUnicode\n\t};\n\n\t/** Expose `punycode` */\n\t// Some AMD build optimizers, like r.js, check for specific condition patterns\n\t// like the following:\n\tif (\n\t\ttypeof define == 'function' &&\n\t\ttypeof define.amd == 'object' &&\n\t\tdefine.amd\n\t) {\n\t\tdefine('punycode', function() {\n\t\t\treturn punycode;\n\t\t});\n\t} else if (freeExports && freeModule) {\n\t\tif (module.exports == freeExports) {\n\t\t\t// in Node.js, io.js, or RingoJS v0.8.0+\n\t\t\tfreeModule.exports = punycode;\n\t\t} else {\n\t\t\t// in Narwhal or RingoJS v0.7.0-\n\t\t\tfor (key in punycode) {\n\t\t\t\tpunycode.hasOwnProperty(key) && (freeExports[key] = punycode[key]);\n\t\t\t}\n\t\t}\n\t} else {\n\t\t// in Rhino or a web browser\n\t\troot.punycode = punycode;\n\t}\n\n}(this));\n","'use strict';\n\nvar fails = require('./fails');\n\n// babel-minify transpiles RegExp('a', 'y') -> /a/y and it causes SyntaxError,\n// so we use an intermediate function.\nfunction RE(s, f) {\n  return RegExp(s, f);\n}\n\nexports.UNSUPPORTED_Y = fails(function () {\n  // babel-minify transpiles RegExp('a', 'y') -> /a/y and it causes SyntaxError\n  var re = RE('a', 'y');\n  re.lastIndex = 2;\n  return re.exec('abcd') != null;\n});\n\nexports.BROKEN_CARET = fails(function () {\n  // https://bugzilla.mozilla.org/show_bug.cgi?id=773687\n  var re = RE('^r', 'gy');\n  re.lastIndex = 2;\n  return re.exec('str') != null;\n});\n","'use strict';\n\nmodule.exports = function inline(state) {\n  var tokens = state.tokens, tok, i, l;\n\n  // Parse inlines\n  for (i = 0, l = tokens.length; i < l; i++) {\n    tok = tokens[i];\n    if (tok.type === 'inline') {\n      state.md.inline.parse(tok.content, state.md, state.env, tok.children);\n    }\n  }\n};\n","'use strict';\n\n\nvar emoji_html        = require('./lib/render');\nvar emoji_replace     = require('./lib/replace');\nvar normalize_opts    = require('./lib/normalize_opts');\n\n\nmodule.exports = function emoji_plugin(md, options) {\n  var defaults = {\n    defs: {},\n    shortcuts: {},\n    enabled: []\n  };\n\n  var opts = normalize_opts(md.utils.assign({}, defaults, options || {}));\n\n  md.renderer.rules.emoji = emoji_html;\n\n  md.core.ruler.push('emoji', emoji_replace(md, opts.defs, opts.shortcuts, opts.scanRE, opts.replaceRE));\n};\n","module.exports=/[\\0-\\x1F\\x7F-\\x9F]/","/** internal\n * class Core\n *\n * Top-level rules executor. Glues block/inline parsers and does intermediate\n * transformations.\n **/\n'use strict';\n\n\nvar Ruler  = require('./ruler');\n\n\nvar _rules = [\n  [ 'normalize',      require('./rules_core/normalize')      ],\n  [ 'block',          require('./rules_core/block')          ],\n  [ 'inline',         require('./rules_core/inline')         ],\n  [ 'linkify',        require('./rules_core/linkify')        ],\n  [ 'replacements',   require('./rules_core/replacements')   ],\n  [ 'smartquotes',    require('./rules_core/smartquotes')    ]\n];\n\n\n/**\n * new Core()\n **/\nfunction Core() {\n  /**\n   * Core#ruler -> Ruler\n   *\n   * [[Ruler]] instance. Keep configuration of core rules.\n   **/\n  this.ruler = new Ruler();\n\n  for (var i = 0; i < _rules.length; i++) {\n    this.ruler.push(_rules[i][0], _rules[i][1]);\n  }\n}\n\n\n/**\n * Core.process(state)\n *\n * Executes core chain rules.\n **/\nCore.prototype.process = function (state) {\n  var i, l, rules;\n\n  rules = this.ruler.getRules('');\n\n  for (i = 0, l = rules.length; i < l; i++) {\n    rules[i](state);\n  }\n};\n\nCore.prototype.State = require('./rules_core/state_core');\n\n\nmodule.exports = Core;\n","// Emoticons -> Emoji mapping.\n//\n// (!) Some patterns skipped, to avoid collisions\n// without increase matcher complicity. Than can change in future.\n//\n// Places to look for more emoticons info:\n//\n// - http://en.wikipedia.org/wiki/List_of_emoticons#Western\n// - https://github.com/wooorm/emoticon/blob/master/Support.md\n// - http://factoryjoe.com/projects/emoticons/\n//\n'use strict';\n\nmodule.exports = {\n  angry:            [ '>:(', '>:-(' ],\n  blush:            [ ':\")', ':-\")' ],\n  broken_heart:     [ '</3', '<\\\\3' ],\n  // :\\ and :-\\ not used because of conflict with markdown escaping\n  confused:         [ ':/', ':-/' ], // twemoji shows question\n  cry:              [ \":'(\", \":'-(\", ':,(', ':,-(' ],\n  frowning:         [ ':(', ':-(' ],\n  heart:            [ '<3' ],\n  imp:              [ ']:(', ']:-(' ],\n  innocent:         [ 'o:)', 'O:)', 'o:-)', 'O:-)', '0:)', '0:-)' ],\n  joy:              [ \":')\", \":'-)\", ':,)', ':,-)', \":'D\", \":'-D\", ':,D', ':,-D' ],\n  kissing:          [ ':*', ':-*' ],\n  laughing:         [ 'x-)', 'X-)' ],\n  neutral_face:     [ ':|', ':-|' ],\n  open_mouth:       [ ':o', ':-o', ':O', ':-O' ],\n  rage:             [ ':@', ':-@' ],\n  smile:            [ ':D', ':-D' ],\n  smiley:           [ ':)', ':-)' ],\n  smiling_imp:      [ ']:)', ']:-)' ],\n  sob:              [ \":,'(\", \":,'-(\", ';(', ';-(' ],\n  stuck_out_tongue: [ ':P', ':-P' ],\n  sunglasses:       [ '8-)', 'B-)' ],\n  sweat:            [ ',:(', ',:-(' ],\n  sweat_smile:      [ ',:)', ',:-)' ],\n  unamused:         [ ':s', ':-S', ':z', ':-Z', ':$', ':-$' ],\n  wink:             [ ';)', ';-)' ]\n};\n","'use strict';\nvar $ = require('../internals/export');\nvar exec = require('../internals/regexp-exec');\n\n// `RegExp.prototype.exec` method\n// https://tc39.es/ecma262/#sec-regexp.prototype.exec\n$({ target: 'RegExp', proto: true, forced: /./.exec !== exec }, {\n  exec: exec\n});\n","'use strict';\nvar anObject = require('../internals/an-object');\n\n// `RegExp.prototype.flags` getter implementation\n// https://tc39.es/ecma262/#sec-get-regexp.prototype.flags\nmodule.exports = function () {\n  var that = anObject(this);\n  var result = '';\n  if (that.global) result += 'g';\n  if (that.ignoreCase) result += 'i';\n  if (that.multiline) result += 'm';\n  if (that.dotAll) result += 's';\n  if (that.unicode) result += 'u';\n  if (that.sticky) result += 'y';\n  return result;\n};\n","// Convert straight quotation marks to typographic ones\n//\n'use strict';\n\n\nvar isWhiteSpace   = require('../common/utils').isWhiteSpace;\nvar isPunctChar    = require('../common/utils').isPunctChar;\nvar isMdAsciiPunct = require('../common/utils').isMdAsciiPunct;\n\nvar QUOTE_TEST_RE = /['\"]/;\nvar QUOTE_RE = /['\"]/g;\nvar APOSTROPHE = '\\u2019'; /* ’ */\n\n\nfunction replaceAt(str, index, ch) {\n  return str.substr(0, index) + ch + str.substr(index + 1);\n}\n\nfunction process_inlines(tokens, state) {\n  var i, token, text, t, pos, max, thisLevel, item, lastChar, nextChar,\n      isLastPunctChar, isNextPunctChar, isLastWhiteSpace, isNextWhiteSpace,\n      canOpen, canClose, j, isSingle, stack, openQuote, closeQuote;\n\n  stack = [];\n\n  for (i = 0; i < tokens.length; i++) {\n    token = tokens[i];\n\n    thisLevel = tokens[i].level;\n\n    for (j = stack.length - 1; j >= 0; j--) {\n      if (stack[j].level <= thisLevel) { break; }\n    }\n    stack.length = j + 1;\n\n    if (token.type !== 'text') { continue; }\n\n    text = token.content;\n    pos = 0;\n    max = text.length;\n\n    /*eslint no-labels:0,block-scoped-var:0*/\n    OUTER:\n    while (pos < max) {\n      QUOTE_RE.lastIndex = pos;\n      t = QUOTE_RE.exec(text);\n      if (!t) { break; }\n\n      canOpen = canClose = true;\n      pos = t.index + 1;\n      isSingle = (t[0] === \"'\");\n\n      // Find previous character,\n      // default to space if it's the beginning of the line\n      //\n      lastChar = 0x20;\n\n      if (t.index - 1 >= 0) {\n        lastChar = text.charCodeAt(t.index - 1);\n      } else {\n        for (j = i - 1; j >= 0; j--) {\n          if (tokens[j].type === 'softbreak' || tokens[j].type === 'hardbreak') break; // lastChar defaults to 0x20\n          if (!tokens[j].content) continue; // should skip all tokens except 'text', 'html_inline' or 'code_inline'\n\n          lastChar = tokens[j].content.charCodeAt(tokens[j].content.length - 1);\n          break;\n        }\n      }\n\n      // Find next character,\n      // default to space if it's the end of the line\n      //\n      nextChar = 0x20;\n\n      if (pos < max) {\n        nextChar = text.charCodeAt(pos);\n      } else {\n        for (j = i + 1; j < tokens.length; j++) {\n          if (tokens[j].type === 'softbreak' || tokens[j].type === 'hardbreak') break; // nextChar defaults to 0x20\n          if (!tokens[j].content) continue; // should skip all tokens except 'text', 'html_inline' or 'code_inline'\n\n          nextChar = tokens[j].content.charCodeAt(0);\n          break;\n        }\n      }\n\n      isLastPunctChar = isMdAsciiPunct(lastChar) || isPunctChar(String.fromCharCode(lastChar));\n      isNextPunctChar = isMdAsciiPunct(nextChar) || isPunctChar(String.fromCharCode(nextChar));\n\n      isLastWhiteSpace = isWhiteSpace(lastChar);\n      isNextWhiteSpace = isWhiteSpace(nextChar);\n\n      if (isNextWhiteSpace) {\n        canOpen = false;\n      } else if (isNextPunctChar) {\n        if (!(isLastWhiteSpace || isLastPunctChar)) {\n          canOpen = false;\n        }\n      }\n\n      if (isLastWhiteSpace) {\n        canClose = false;\n      } else if (isLastPunctChar) {\n        if (!(isNextWhiteSpace || isNextPunctChar)) {\n          canClose = false;\n        }\n      }\n\n      if (nextChar === 0x22 /* \" */ && t[0] === '\"') {\n        if (lastChar >= 0x30 /* 0 */ && lastChar <= 0x39 /* 9 */) {\n          // special case: 1\"\" - count first quote as an inch\n          canClose = canOpen = false;\n        }\n      }\n\n      if (canOpen && canClose) {\n        // Replace quotes in the middle of punctuation sequence, but not\n        // in the middle of the words, i.e.:\n        //\n        // 1. foo \" bar \" baz - not replaced\n        // 2. foo-\"-bar-\"-baz - replaced\n        // 3. foo\"bar\"baz     - not replaced\n        //\n        canOpen = isLastPunctChar;\n        canClose = isNextPunctChar;\n      }\n\n      if (!canOpen && !canClose) {\n        // middle of word\n        if (isSingle) {\n          token.content = replaceAt(token.content, t.index, APOSTROPHE);\n        }\n        continue;\n      }\n\n      if (canClose) {\n        // this could be a closing quote, rewind the stack to get a match\n        for (j = stack.length - 1; j >= 0; j--) {\n          item = stack[j];\n          if (stack[j].level < thisLevel) { break; }\n          if (item.single === isSingle && stack[j].level === thisLevel) {\n            item = stack[j];\n\n            if (isSingle) {\n              openQuote = state.md.options.quotes[2];\n              closeQuote = state.md.options.quotes[3];\n            } else {\n              openQuote = state.md.options.quotes[0];\n              closeQuote = state.md.options.quotes[1];\n            }\n\n            // replace token.content *before* tokens[item.token].content,\n            // because, if they are pointing at the same token, replaceAt\n            // could mess up indices when quote length != 1\n            token.content = replaceAt(token.content, t.index, closeQuote);\n            tokens[item.token].content = replaceAt(\n              tokens[item.token].content, item.pos, openQuote);\n\n            pos += closeQuote.length - 1;\n            if (item.token === i) { pos += openQuote.length - 1; }\n\n            text = token.content;\n            max = text.length;\n\n            stack.length = j;\n            continue OUTER;\n          }\n        }\n      }\n\n      if (canOpen) {\n        stack.push({\n          token: i,\n          pos: t.index,\n          single: isSingle,\n          level: thisLevel\n        });\n      } else if (canClose && isSingle) {\n        token.content = replaceAt(token.content, t.index, APOSTROPHE);\n      }\n    }\n  }\n}\n\n\nmodule.exports = function smartquotes(state) {\n  /*eslint max-depth:0*/\n  var blkIdx;\n\n  if (!state.md.options.typographer) { return; }\n\n  for (blkIdx = state.tokens.length - 1; blkIdx >= 0; blkIdx--) {\n\n    if (state.tokens[blkIdx].type !== 'inline' ||\n        !QUOTE_TEST_RE.test(state.tokens[blkIdx].content)) {\n      continue;\n    }\n\n    process_inlines(state.tokens[blkIdx].children, state);\n  }\n};\n","'use strict';\n\n\nmodule.exports = function (opts) {\n  var re = {};\n\n  // Use direct extract instead of `regenerate` to reduse browserified size\n  re.src_Any = require('uc.micro/properties/Any/regex').source;\n  re.src_Cc  = require('uc.micro/categories/Cc/regex').source;\n  re.src_Z   = require('uc.micro/categories/Z/regex').source;\n  re.src_P   = require('uc.micro/categories/P/regex').source;\n\n  // \\p{\\Z\\P\\Cc\\CF} (white spaces + control + format + punctuation)\n  re.src_ZPCc = [ re.src_Z, re.src_P, re.src_Cc ].join('|');\n\n  // \\p{\\Z\\Cc} (white spaces + control)\n  re.src_ZCc = [ re.src_Z, re.src_Cc ].join('|');\n\n  // Experimental. List of chars, completely prohibited in links\n  // because can separate it from other part of text\n  var text_separators = '[><\\uff5c]';\n\n  // All possible word characters (everything without punctuation, spaces & controls)\n  // Defined via punctuation & spaces to save space\n  // Should be something like \\p{\\L\\N\\S\\M} (\\w but without `_`)\n  re.src_pseudo_letter       = '(?:(?!' + text_separators + '|' + re.src_ZPCc + ')' + re.src_Any + ')';\n  // The same as abothe but without [0-9]\n  // var src_pseudo_letter_non_d = '(?:(?![0-9]|' + src_ZPCc + ')' + src_Any + ')';\n\n  ////////////////////////////////////////////////////////////////////////////////\n\n  re.src_ip4 =\n\n    '(?:(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\\\.){3}(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)';\n\n  // Prohibit any of \"@/[]()\" in user/pass to avoid wrong domain fetch.\n  re.src_auth    = '(?:(?:(?!' + re.src_ZCc + '|[@/\\\\[\\\\]()]).)+@)?';\n\n  re.src_port =\n\n    '(?::(?:6(?:[0-4]\\\\d{3}|5(?:[0-4]\\\\d{2}|5(?:[0-2]\\\\d|3[0-5])))|[1-5]?\\\\d{1,4}))?';\n\n  re.src_host_terminator =\n\n    '(?=$|' + text_separators + '|' + re.src_ZPCc + ')(?!-|_|:\\\\d|\\\\.-|\\\\.(?!$|' + re.src_ZPCc + '))';\n\n  re.src_path =\n\n    '(?:' +\n      '[/?#]' +\n        '(?:' +\n          '(?!' + re.src_ZCc + '|' + text_separators + '|[()[\\\\]{}.,\"\\'?!\\\\-]).|' +\n          '\\\\[(?:(?!' + re.src_ZCc + '|\\\\]).)*\\\\]|' +\n          '\\\\((?:(?!' + re.src_ZCc + '|[)]).)*\\\\)|' +\n          '\\\\{(?:(?!' + re.src_ZCc + '|[}]).)*\\\\}|' +\n          '\\\\\"(?:(?!' + re.src_ZCc + '|[\"]).)+\\\\\"|' +\n          \"\\\\'(?:(?!\" + re.src_ZCc + \"|[']).)+\\\\'|\" +\n          \"\\\\'(?=\" + re.src_pseudo_letter + '|[-]).|' +  // allow `I'm_king` if no pair found\n          '\\\\.{2,}[a-zA-Z0-9%/&]|' + // google has many dots in \"google search\" links (#66, #81).\n                                     // github has ... in commit range links,\n                                     // Restrict to\n                                     // - english\n                                     // - percent-encoded\n                                     // - parts of file path\n                                     // - params separator\n                                     // until more examples found.\n          '\\\\.(?!' + re.src_ZCc + '|[.]).|' +\n          (opts && opts['---'] ?\n            '\\\\-(?!--(?:[^-]|$))(?:-*)|' // `---` => long dash, terminate\n            :\n            '\\\\-+|'\n          ) +\n          '\\\\,(?!' + re.src_ZCc + ').|' +       // allow `,,,` in paths\n          '\\\\!+(?!' + re.src_ZCc + '|[!]).|' +  // allow `!!!` in paths, but not at the end\n          '\\\\?(?!' + re.src_ZCc + '|[?]).' +\n        ')+' +\n      '|\\\\/' +\n    ')?';\n\n  // Allow anything in markdown spec, forbid quote (\") at the first position\n  // because emails enclosed in quotes are far more common\n  re.src_email_name =\n\n    '[\\\\-;:&=\\\\+\\\\$,\\\\.a-zA-Z0-9_][\\\\-;:&=\\\\+\\\\$,\\\\\"\\\\.a-zA-Z0-9_]*';\n\n  re.src_xn =\n\n    'xn--[a-z0-9\\\\-]{1,59}';\n\n  // More to read about domain names\n  // http://serverfault.com/questions/638260/\n\n  re.src_domain_root =\n\n    // Allow letters & digits (http://test1)\n    '(?:' +\n      re.src_xn +\n      '|' +\n      re.src_pseudo_letter + '{1,63}' +\n    ')';\n\n  re.src_domain =\n\n    '(?:' +\n      re.src_xn +\n      '|' +\n      '(?:' + re.src_pseudo_letter + ')' +\n      '|' +\n      '(?:' + re.src_pseudo_letter + '(?:-|' + re.src_pseudo_letter + '){0,61}' + re.src_pseudo_letter + ')' +\n    ')';\n\n  re.src_host =\n\n    '(?:' +\n    // Don't need IP check, because digits are already allowed in normal domain names\n    //   src_ip4 +\n    // '|' +\n      '(?:(?:(?:' + re.src_domain + ')\\\\.)*' + re.src_domain/*_root*/ + ')' +\n    ')';\n\n  re.tpl_host_fuzzy =\n\n    '(?:' +\n      re.src_ip4 +\n    '|' +\n      '(?:(?:(?:' + re.src_domain + ')\\\\.)+(?:%TLDS%))' +\n    ')';\n\n  re.tpl_host_no_ip_fuzzy =\n\n    '(?:(?:(?:' + re.src_domain + ')\\\\.)+(?:%TLDS%))';\n\n  re.src_host_strict =\n\n    re.src_host + re.src_host_terminator;\n\n  re.tpl_host_fuzzy_strict =\n\n    re.tpl_host_fuzzy + re.src_host_terminator;\n\n  re.src_host_port_strict =\n\n    re.src_host + re.src_port + re.src_host_terminator;\n\n  re.tpl_host_port_fuzzy_strict =\n\n    re.tpl_host_fuzzy + re.src_port + re.src_host_terminator;\n\n  re.tpl_host_port_no_ip_fuzzy_strict =\n\n    re.tpl_host_no_ip_fuzzy + re.src_port + re.src_host_terminator;\n\n\n  ////////////////////////////////////////////////////////////////////////////////\n  // Main rules\n\n  // Rude test fuzzy links by host, for quick deny\n  re.tpl_host_fuzzy_test =\n\n    'localhost|www\\\\.|\\\\.\\\\d{1,3}\\\\.|(?:\\\\.(?:%TLDS%)(?:' + re.src_ZPCc + '|>|$))';\n\n  re.tpl_email_fuzzy =\n\n      '(^|' + text_separators + '|\"|\\\\(|' + re.src_ZCc + ')' +\n      '(' + re.src_email_name + '@' + re.tpl_host_fuzzy_strict + ')';\n\n  re.tpl_link_fuzzy =\n      // Fuzzy link can't be prepended with .:/\\- and non punctuation.\n      // but can start with > (markdown blockquote)\n      '(^|(?![.:/\\\\-_@])(?:[$+<=>^`|\\uff5c]|' + re.src_ZPCc + '))' +\n      '((?![$+<=>^`|\\uff5c])' + re.tpl_host_port_fuzzy_strict + re.src_path + ')';\n\n  re.tpl_link_no_ip_fuzzy =\n      // Fuzzy link can't be prepended with .:/\\- and non punctuation.\n      // but can start with > (markdown blockquote)\n      '(^|(?![.:/\\\\-_@])(?:[$+<=>^`|\\uff5c]|' + re.src_ZPCc + '))' +\n      '((?![$+<=>^`|\\uff5c])' + re.tpl_host_port_no_ip_fuzzy_strict + re.src_path + ')';\n\n  return re;\n};\n","// Skip text characters for text token, place those to pending buffer\n// and increment current pos\n\n'use strict';\n\n\n// Rule to skip pure text\n// '{}$%@~+=:' reserved for extentions\n\n// !, \", #, $, %, &, ', (, ), *, +, ,, -, ., /, :, ;, <, =, >, ?, @, [, \\, ], ^, _, `, {, |, }, or ~\n\n// !!!! Don't confuse with \"Markdown ASCII Punctuation\" chars\n// http://spec.commonmark.org/0.15/#ascii-punctuation-character\nfunction isTerminatorChar(ch) {\n  switch (ch) {\n    case 0x0A/* \\n */:\n    case 0x21/* ! */:\n    case 0x23/* # */:\n    case 0x24/* $ */:\n    case 0x25/* % */:\n    case 0x26/* & */:\n    case 0x2A/* * */:\n    case 0x2B/* + */:\n    case 0x2D/* - */:\n    case 0x3A/* : */:\n    case 0x3C/* < */:\n    case 0x3D/* = */:\n    case 0x3E/* > */:\n    case 0x40/* @ */:\n    case 0x5B/* [ */:\n    case 0x5C/* \\ */:\n    case 0x5D/* ] */:\n    case 0x5E/* ^ */:\n    case 0x5F/* _ */:\n    case 0x60/* ` */:\n    case 0x7B/* { */:\n    case 0x7D/* } */:\n    case 0x7E/* ~ */:\n      return true;\n    default:\n      return false;\n  }\n}\n\nmodule.exports = function text(state, silent) {\n  var pos = state.pos;\n\n  while (pos < state.posMax && !isTerminatorChar(state.src.charCodeAt(pos))) {\n    pos++;\n  }\n\n  if (pos === state.pos) { return false; }\n\n  if (!silent) { state.pending += state.src.slice(state.pos, pos); }\n\n  state.pos = pos;\n\n  return true;\n};\n\n// Alternative implementation, for memory.\n//\n// It costs 10% of performance, but allows extend terminators list, if place it\n// to `ParcerInline` property. Probably, will switch to it sometime, such\n// flexibility required.\n\n/*\nvar TERMINATOR_RE = /[\\n!#$%&*+\\-:<=>@[\\\\\\]^_`{}~]/;\n\nmodule.exports = function text(state, silent) {\n  var pos = state.pos,\n      idx = state.src.slice(pos).search(TERMINATOR_RE);\n\n  // first char is terminator -> empty text\n  if (idx === 0) { return false; }\n\n  // no terminator -> text till end of string\n  if (idx < 0) {\n    if (!silent) { state.pending += state.src.slice(pos); }\n    state.pos = state.src.length;\n    return true;\n  }\n\n  if (!silent) { state.pending += state.src.slice(pos, pos + idx); }\n\n  state.pos += idx;\n\n  return true;\n};*/\n","// Simple typographic replacements\n//\n// (c) (C) → ©\n// (tm) (TM) → ™\n// (r) (R) → ®\n// +- → ±\n// (p) (P) -> §\n// ... → … (also ?.... → ?.., !.... → !..)\n// ???????? → ???, !!!!! → !!!, `,,` → `,`\n// -- → &ndash;, --- → &mdash;\n//\n'use strict';\n\n// TODO:\n// - fractionals 1/2, 1/4, 3/4 -> ½, ¼, ¾\n// - miltiplication 2 x 4 -> 2 × 4\n\nvar RARE_RE = /\\+-|\\.\\.|\\?\\?\\?\\?|!!!!|,,|--/;\n\n// Workaround for phantomjs - need regex without /g flag,\n// or root check will fail every second time\nvar SCOPED_ABBR_TEST_RE = /\\((c|tm|r|p)\\)/i;\n\nvar SCOPED_ABBR_RE = /\\((c|tm|r|p)\\)/ig;\nvar SCOPED_ABBR = {\n  c: '©',\n  r: '®',\n  p: '§',\n  tm: '™'\n};\n\nfunction replaceFn(match, name) {\n  return SCOPED_ABBR[name.toLowerCase()];\n}\n\nfunction replace_scoped(inlineTokens) {\n  var i, token, inside_autolink = 0;\n\n  for (i = inlineTokens.length - 1; i >= 0; i--) {\n    token = inlineTokens[i];\n\n    if (token.type === 'text' && !inside_autolink) {\n      token.content = token.content.replace(SCOPED_ABBR_RE, replaceFn);\n    }\n\n    if (token.type === 'link_open' && token.info === 'auto') {\n      inside_autolink--;\n    }\n\n    if (token.type === 'link_close' && token.info === 'auto') {\n      inside_autolink++;\n    }\n  }\n}\n\nfunction replace_rare(inlineTokens) {\n  var i, token, inside_autolink = 0;\n\n  for (i = inlineTokens.length - 1; i >= 0; i--) {\n    token = inlineTokens[i];\n\n    if (token.type === 'text' && !inside_autolink) {\n      if (RARE_RE.test(token.content)) {\n        token.content = token.content\n          .replace(/\\+-/g, '±')\n          // .., ..., ....... -> …\n          // but ?..... & !..... -> ?.. & !..\n          .replace(/\\.{2,}/g, '…').replace(/([?!])…/g, '$1..')\n          .replace(/([?!]){4,}/g, '$1$1$1').replace(/,{2,}/g, ',')\n          // em-dash\n          .replace(/(^|[^-])---(?=[^-]|$)/mg, '$1\\u2014')\n          // en-dash\n          .replace(/(^|\\s)--(?=\\s|$)/mg, '$1\\u2013')\n          .replace(/(^|[^-\\s])--(?=[^-\\s]|$)/mg, '$1\\u2013');\n      }\n    }\n\n    if (token.type === 'link_open' && token.info === 'auto') {\n      inside_autolink--;\n    }\n\n    if (token.type === 'link_close' && token.info === 'auto') {\n      inside_autolink++;\n    }\n  }\n}\n\n\nmodule.exports = function replace(state) {\n  var blkIdx;\n\n  if (!state.md.options.typographer) { return; }\n\n  for (blkIdx = state.tokens.length - 1; blkIdx >= 0; blkIdx--) {\n\n    if (state.tokens[blkIdx].type !== 'inline') { continue; }\n\n    if (SCOPED_ABBR_TEST_RE.test(state.tokens[blkIdx].content)) {\n      replace_scoped(state.tokens[blkIdx].children);\n    }\n\n    if (RARE_RE.test(state.tokens[blkIdx].content)) {\n      replace_rare(state.tokens[blkIdx].children);\n    }\n\n  }\n};\n","// HTML5 entities map: { name -> utf16string }\n//\n'use strict';\n\n/*eslint quotes:0*/\nmodule.exports = require('entities/lib/maps/entities.json');\n","// fences (``` lang, ~~~ lang)\n\n'use strict';\n\n\nmodule.exports = function fence(state, startLine, endLine, silent) {\n  var marker, len, params, nextLine, mem, token, markup,\n      haveEndMarker = false,\n      pos = state.bMarks[startLine] + state.tShift[startLine],\n      max = state.eMarks[startLine];\n\n  // if it's indented more than 3 spaces, it should be a code block\n  if (state.sCount[startLine] - state.blkIndent >= 4) { return false; }\n\n  if (pos + 3 > max) { return false; }\n\n  marker = state.src.charCodeAt(pos);\n\n  if (marker !== 0x7E/* ~ */ && marker !== 0x60 /* ` */) {\n    return false;\n  }\n\n  // scan marker length\n  mem = pos;\n  pos = state.skipChars(pos, marker);\n\n  len = pos - mem;\n\n  if (len < 3) { return false; }\n\n  markup = state.src.slice(mem, pos);\n  params = state.src.slice(pos, max);\n\n  if (marker === 0x60 /* ` */) {\n    if (params.indexOf(String.fromCharCode(marker)) >= 0) {\n      return false;\n    }\n  }\n\n  // Since start is found, we can report success here in validation mode\n  if (silent) { return true; }\n\n  // search end of block\n  nextLine = startLine;\n\n  for (;;) {\n    nextLine++;\n    if (nextLine >= endLine) {\n      // unclosed block should be autoclosed by end of document.\n      // also block seems to be autoclosed by end of parent\n      break;\n    }\n\n    pos = mem = state.bMarks[nextLine] + state.tShift[nextLine];\n    max = state.eMarks[nextLine];\n\n    if (pos < max && state.sCount[nextLine] < state.blkIndent) {\n      // non-empty line with negative indent should stop the list:\n      // - ```\n      //  test\n      break;\n    }\n\n    if (state.src.charCodeAt(pos) !== marker) { continue; }\n\n    if (state.sCount[nextLine] - state.blkIndent >= 4) {\n      // closing fence should be indented less than 4 spaces\n      continue;\n    }\n\n    pos = state.skipChars(pos, marker);\n\n    // closing code fence must be at least as long as the opening one\n    if (pos - mem < len) { continue; }\n\n    // make sure tail has spaces only\n    pos = state.skipSpaces(pos);\n\n    if (pos < max) { continue; }\n\n    haveEndMarker = true;\n    // found!\n    break;\n  }\n\n  // If a fence has heading spaces, they should be removed from its inner block\n  len = state.sCount[startLine];\n\n  state.line = nextLine + (haveEndMarker ? 1 : 0);\n\n  token         = state.push('fence', 'code', 0);\n  token.info    = params;\n  token.content = state.getLines(startLine + 1, nextLine, len, true);\n  token.markup  = markup;\n  token.map     = [ startLine, state.line ];\n\n  return true;\n};\n","// Process html tags\n\n'use strict';\n\n\nvar HTML_TAG_RE = require('../common/html_re').HTML_TAG_RE;\n\n\nfunction isLetter(ch) {\n  /*eslint no-bitwise:0*/\n  var lc = ch | 0x20; // to lower case\n  return (lc >= 0x61/* a */) && (lc <= 0x7a/* z */);\n}\n\n\nmodule.exports = function html_inline(state, silent) {\n  var ch, match, max, token,\n      pos = state.pos;\n\n  if (!state.md.options.html) { return false; }\n\n  // Check start\n  max = state.posMax;\n  if (state.src.charCodeAt(pos) !== 0x3C/* < */ ||\n      pos + 2 >= max) {\n    return false;\n  }\n\n  // Quick fail on second char\n  ch = state.src.charCodeAt(pos + 1);\n  if (ch !== 0x21/* ! */ &&\n      ch !== 0x3F/* ? */ &&\n      ch !== 0x2F/* / */ &&\n      !isLetter(ch)) {\n    return false;\n  }\n\n  match = state.src.slice(pos).match(HTML_TAG_RE);\n  if (!match) { return false; }\n\n  if (!silent) {\n    token         = state.push('html_inline', '', 0);\n    token.content = state.src.slice(pos, pos + match[0].length);\n  }\n  state.pos += match[0].length;\n  return true;\n};\n","\n'use strict';\n\n\nvar encodeCache = {};\n\n\n// Create a lookup array where anything but characters in `chars` string\n// and alphanumeric chars is percent-encoded.\n//\nfunction getEncodeCache(exclude) {\n  var i, ch, cache = encodeCache[exclude];\n  if (cache) { return cache; }\n\n  cache = encodeCache[exclude] = [];\n\n  for (i = 0; i < 128; i++) {\n    ch = String.fromCharCode(i);\n\n    if (/^[0-9a-z]$/i.test(ch)) {\n      // always allow unencoded alphanumeric characters\n      cache.push(ch);\n    } else {\n      cache.push('%' + ('0' + i.toString(16).toUpperCase()).slice(-2));\n    }\n  }\n\n  for (i = 0; i < exclude.length; i++) {\n    cache[exclude.charCodeAt(i)] = exclude[i];\n  }\n\n  return cache;\n}\n\n\n// Encode unsafe characters with percent-encoding, skipping already\n// encoded sequences.\n//\n//  - string       - string to encode\n//  - exclude      - list of characters to ignore (in addition to a-zA-Z0-9)\n//  - keepEscaped  - don't encode '%' in a correct escape sequence (default: true)\n//\nfunction encode(string, exclude, keepEscaped) {\n  var i, l, code, nextCode, cache,\n      result = '';\n\n  if (typeof exclude !== 'string') {\n    // encode(string, keepEscaped)\n    keepEscaped  = exclude;\n    exclude = encode.defaultChars;\n  }\n\n  if (typeof keepEscaped === 'undefined') {\n    keepEscaped = true;\n  }\n\n  cache = getEncodeCache(exclude);\n\n  for (i = 0, l = string.length; i < l; i++) {\n    code = string.charCodeAt(i);\n\n    if (keepEscaped && code === 0x25 /* % */ && i + 2 < l) {\n      if (/^[0-9a-f]{2}$/i.test(string.slice(i + 1, i + 3))) {\n        result += string.slice(i, i + 3);\n        i += 2;\n        continue;\n      }\n    }\n\n    if (code < 128) {\n      result += cache[code];\n      continue;\n    }\n\n    if (code >= 0xD800 && code <= 0xDFFF) {\n      if (code >= 0xD800 && code <= 0xDBFF && i + 1 < l) {\n        nextCode = string.charCodeAt(i + 1);\n        if (nextCode >= 0xDC00 && nextCode <= 0xDFFF) {\n          result += encodeURIComponent(string[i] + string[i + 1]);\n          i++;\n          continue;\n        }\n      }\n      result += '%EF%BF%BD';\n      continue;\n    }\n\n    result += encodeURIComponent(string[i]);\n  }\n\n  return result;\n}\n\nencode.defaultChars   = \";/?:@&=+$,-_.!~*'()#\";\nencode.componentChars = \"-_.!~*'()\";\n\n\nmodule.exports = encode;\n","// Process *this* and _that_\n//\n'use strict';\n\n\n// Insert each marker as a separate text token, and add it to delimiter list\n//\nmodule.exports.tokenize = function emphasis(state, silent) {\n  var i, scanned, token,\n      start = state.pos,\n      marker = state.src.charCodeAt(start);\n\n  if (silent) { return false; }\n\n  if (marker !== 0x5F /* _ */ && marker !== 0x2A /* * */) { return false; }\n\n  scanned = state.scanDelims(state.pos, marker === 0x2A);\n\n  for (i = 0; i < scanned.length; i++) {\n    token         = state.push('text', '', 0);\n    token.content = String.fromCharCode(marker);\n\n    state.delimiters.push({\n      // Char code of the starting marker (number).\n      //\n      marker: marker,\n\n      // Total length of these series of delimiters.\n      //\n      length: scanned.length,\n\n      // An amount of characters before this one that's equivalent to\n      // current one. In plain English: if this delimiter does not open\n      // an emphasis, neither do previous `jump` characters.\n      //\n      // Used to skip sequences like \"*****\" in one step, for 1st asterisk\n      // value will be 0, for 2nd it's 1 and so on.\n      //\n      jump:   i,\n\n      // A position of the token this delimiter corresponds to.\n      //\n      token:  state.tokens.length - 1,\n\n      // If this delimiter is matched as a valid opener, `end` will be\n      // equal to its position, otherwise it's `-1`.\n      //\n      end:    -1,\n\n      // Boolean flags that determine if this delimiter could open or close\n      // an emphasis.\n      //\n      open:   scanned.can_open,\n      close:  scanned.can_close\n    });\n  }\n\n  state.pos += scanned.length;\n\n  return true;\n};\n\n\nfunction postProcess(state, delimiters) {\n  var i,\n      startDelim,\n      endDelim,\n      token,\n      ch,\n      isStrong,\n      max = delimiters.length;\n\n  for (i = max - 1; i >= 0; i--) {\n    startDelim = delimiters[i];\n\n    if (startDelim.marker !== 0x5F/* _ */ && startDelim.marker !== 0x2A/* * */) {\n      continue;\n    }\n\n    // Process only opening markers\n    if (startDelim.end === -1) {\n      continue;\n    }\n\n    endDelim = delimiters[startDelim.end];\n\n    // If the previous delimiter has the same marker and is adjacent to this one,\n    // merge those into one strong delimiter.\n    //\n    // `<em><em>whatever</em></em>` -> `<strong>whatever</strong>`\n    //\n    isStrong = i > 0 &&\n               delimiters[i - 1].end === startDelim.end + 1 &&\n               delimiters[i - 1].token === startDelim.token - 1 &&\n               delimiters[startDelim.end + 1].token === endDelim.token + 1 &&\n               delimiters[i - 1].marker === startDelim.marker;\n\n    ch = String.fromCharCode(startDelim.marker);\n\n    token         = state.tokens[startDelim.token];\n    token.type    = isStrong ? 'strong_open' : 'em_open';\n    token.tag     = isStrong ? 'strong' : 'em';\n    token.nesting = 1;\n    token.markup  = isStrong ? ch + ch : ch;\n    token.content = '';\n\n    token         = state.tokens[endDelim.token];\n    token.type    = isStrong ? 'strong_close' : 'em_close';\n    token.tag     = isStrong ? 'strong' : 'em';\n    token.nesting = -1;\n    token.markup  = isStrong ? ch + ch : ch;\n    token.content = '';\n\n    if (isStrong) {\n      state.tokens[delimiters[i - 1].token].content = '';\n      state.tokens[delimiters[startDelim.end + 1].token].content = '';\n      i--;\n    }\n  }\n}\n\n\n// Walk through delimiter list and replace text tokens with tags\n//\nmodule.exports.postProcess = function emphasis(state) {\n  var curr,\n      tokens_meta = state.tokens_meta,\n      max = state.tokens_meta.length;\n\n  postProcess(state, state.delimiters);\n\n  for (curr = 0; curr < max; curr++) {\n    if (tokens_meta[curr] && tokens_meta[curr].delimiters) {\n      postProcess(state, tokens_meta[curr].delimiters);\n    }\n  }\n};\n","module.exports=/[\\0-\\uD7FF\\uE000-\\uFFFF]|[\\uD800-\\uDBFF][\\uDC00-\\uDFFF]|[\\uD800-\\uDBFF](?![\\uDC00-\\uDFFF])|(?:[^\\uD800-\\uDBFF]|^)[\\uDC00-\\uDFFF]/","// Process [link](<to> \"stuff\")\n\n'use strict';\n\nvar normalizeReference   = require('../common/utils').normalizeReference;\nvar isSpace              = require('../common/utils').isSpace;\n\n\nmodule.exports = function link(state, silent) {\n  var attrs,\n      code,\n      label,\n      labelEnd,\n      labelStart,\n      pos,\n      res,\n      ref,\n      token,\n      href = '',\n      title = '',\n      oldPos = state.pos,\n      max = state.posMax,\n      start = state.pos,\n      parseReference = true;\n\n  if (state.src.charCodeAt(state.pos) !== 0x5B/* [ */) { return false; }\n\n  labelStart = state.pos + 1;\n  labelEnd = state.md.helpers.parseLinkLabel(state, state.pos, true);\n\n  // parser failed to find ']', so it's not a valid link\n  if (labelEnd < 0) { return false; }\n\n  pos = labelEnd + 1;\n  if (pos < max && state.src.charCodeAt(pos) === 0x28/* ( */) {\n    //\n    // Inline link\n    //\n\n    // might have found a valid shortcut link, disable reference parsing\n    parseReference = false;\n\n    // [link](  <href>  \"title\"  )\n    //        ^^ skipping these spaces\n    pos++;\n    for (; pos < max; pos++) {\n      code = state.src.charCodeAt(pos);\n      if (!isSpace(code) && code !== 0x0A) { break; }\n    }\n    if (pos >= max) { return false; }\n\n    // [link](  <href>  \"title\"  )\n    //          ^^^^^^ parsing link destination\n    start = pos;\n    res = state.md.helpers.parseLinkDestination(state.src, pos, state.posMax);\n    if (res.ok) {\n      href = state.md.normalizeLink(res.str);\n      if (state.md.validateLink(href)) {\n        pos = res.pos;\n      } else {\n        href = '';\n      }\n\n      // [link](  <href>  \"title\"  )\n      //                ^^ skipping these spaces\n      start = pos;\n      for (; pos < max; pos++) {\n        code = state.src.charCodeAt(pos);\n        if (!isSpace(code) && code !== 0x0A) { break; }\n      }\n\n      // [link](  <href>  \"title\"  )\n      //                  ^^^^^^^ parsing link title\n      res = state.md.helpers.parseLinkTitle(state.src, pos, state.posMax);\n      if (pos < max && start !== pos && res.ok) {\n        title = res.str;\n        pos = res.pos;\n\n        // [link](  <href>  \"title\"  )\n        //                         ^^ skipping these spaces\n        for (; pos < max; pos++) {\n          code = state.src.charCodeAt(pos);\n          if (!isSpace(code) && code !== 0x0A) { break; }\n        }\n      }\n    }\n\n    if (pos >= max || state.src.charCodeAt(pos) !== 0x29/* ) */) {\n      // parsing a valid shortcut link failed, fallback to reference\n      parseReference = true;\n    }\n    pos++;\n  }\n\n  if (parseReference) {\n    //\n    // Link reference\n    //\n    if (typeof state.env.references === 'undefined') { return false; }\n\n    if (pos < max && state.src.charCodeAt(pos) === 0x5B/* [ */) {\n      start = pos + 1;\n      pos = state.md.helpers.parseLinkLabel(state, pos);\n      if (pos >= 0) {\n        label = state.src.slice(start, pos++);\n      } else {\n        pos = labelEnd + 1;\n      }\n    } else {\n      pos = labelEnd + 1;\n    }\n\n    // covers label === '' and label === undefined\n    // (collapsed reference link and shortcut reference link respectively)\n    if (!label) { label = state.src.slice(labelStart, labelEnd); }\n\n    ref = state.env.references[normalizeReference(label)];\n    if (!ref) {\n      state.pos = oldPos;\n      return false;\n    }\n    href = ref.href;\n    title = ref.title;\n  }\n\n  //\n  // We found the end of the link, and know for a fact it's a valid link;\n  // so all that's left to do is to call tokenizer.\n  //\n  if (!silent) {\n    state.pos = labelStart;\n    state.posMax = labelEnd;\n\n    token        = state.push('link_open', 'a', 1);\n    token.attrs  = attrs = [ [ 'href', href ] ];\n    if (title) {\n      attrs.push([ 'title', title ]);\n    }\n\n    state.md.inline.tokenize(state);\n\n    token        = state.push('link_close', 'a', -1);\n  }\n\n  state.pos = pos;\n  state.posMax = max;\n  return true;\n};\n","'use strict';\n\n\nmodule.exports = require('./lib/');\n","'use strict';\n\nexports.Any = require('./properties/Any/regex');\nexports.Cc  = require('./categories/Cc/regex');\nexports.Cf  = require('./categories/Cf/regex');\nexports.P   = require('./categories/P/regex');\nexports.Z   = require('./categories/Z/regex');\n","'use strict';\n\n\nvar normalizeReference   = require('../common/utils').normalizeReference;\nvar isSpace              = require('../common/utils').isSpace;\n\n\nmodule.exports = function reference(state, startLine, _endLine, silent) {\n  var ch,\n      destEndPos,\n      destEndLineNo,\n      endLine,\n      href,\n      i,\n      l,\n      label,\n      labelEnd,\n      oldParentType,\n      res,\n      start,\n      str,\n      terminate,\n      terminatorRules,\n      title,\n      lines = 0,\n      pos = state.bMarks[startLine] + state.tShift[startLine],\n      max = state.eMarks[startLine],\n      nextLine = startLine + 1;\n\n  // if it's indented more than 3 spaces, it should be a code block\n  if (state.sCount[startLine] - state.blkIndent >= 4) { return false; }\n\n  if (state.src.charCodeAt(pos) !== 0x5B/* [ */) { return false; }\n\n  // Simple check to quickly interrupt scan on [link](url) at the start of line.\n  // Can be useful on practice: https://github.com/markdown-it/markdown-it/issues/54\n  while (++pos < max) {\n    if (state.src.charCodeAt(pos) === 0x5D /* ] */ &&\n        state.src.charCodeAt(pos - 1) !== 0x5C/* \\ */) {\n      if (pos + 1 === max) { return false; }\n      if (state.src.charCodeAt(pos + 1) !== 0x3A/* : */) { return false; }\n      break;\n    }\n  }\n\n  endLine = state.lineMax;\n\n  // jump line-by-line until empty one or EOF\n  terminatorRules = state.md.block.ruler.getRules('reference');\n\n  oldParentType = state.parentType;\n  state.parentType = 'reference';\n\n  for (; nextLine < endLine && !state.isEmpty(nextLine); nextLine++) {\n    // this would be a code block normally, but after paragraph\n    // it's considered a lazy continuation regardless of what's there\n    if (state.sCount[nextLine] - state.blkIndent > 3) { continue; }\n\n    // quirk for blockquotes, this line should already be checked by that rule\n    if (state.sCount[nextLine] < 0) { continue; }\n\n    // Some tags can terminate paragraph without empty line.\n    terminate = false;\n    for (i = 0, l = terminatorRules.length; i < l; i++) {\n      if (terminatorRules[i](state, nextLine, endLine, true)) {\n        terminate = true;\n        break;\n      }\n    }\n    if (terminate) { break; }\n  }\n\n  str = state.getLines(startLine, nextLine, state.blkIndent, false).trim();\n  max = str.length;\n\n  for (pos = 1; pos < max; pos++) {\n    ch = str.charCodeAt(pos);\n    if (ch === 0x5B /* [ */) {\n      return false;\n    } else if (ch === 0x5D /* ] */) {\n      labelEnd = pos;\n      break;\n    } else if (ch === 0x0A /* \\n */) {\n      lines++;\n    } else if (ch === 0x5C /* \\ */) {\n      pos++;\n      if (pos < max && str.charCodeAt(pos) === 0x0A) {\n        lines++;\n      }\n    }\n  }\n\n  if (labelEnd < 0 || str.charCodeAt(labelEnd + 1) !== 0x3A/* : */) { return false; }\n\n  // [label]:   destination   'title'\n  //         ^^^ skip optional whitespace here\n  for (pos = labelEnd + 2; pos < max; pos++) {\n    ch = str.charCodeAt(pos);\n    if (ch === 0x0A) {\n      lines++;\n    } else if (isSpace(ch)) {\n      /*eslint no-empty:0*/\n    } else {\n      break;\n    }\n  }\n\n  // [label]:   destination   'title'\n  //            ^^^^^^^^^^^ parse this\n  res = state.md.helpers.parseLinkDestination(str, pos, max);\n  if (!res.ok) { return false; }\n\n  href = state.md.normalizeLink(res.str);\n  if (!state.md.validateLink(href)) { return false; }\n\n  pos = res.pos;\n  lines += res.lines;\n\n  // save cursor state, we could require to rollback later\n  destEndPos = pos;\n  destEndLineNo = lines;\n\n  // [label]:   destination   'title'\n  //                       ^^^ skipping those spaces\n  start = pos;\n  for (; pos < max; pos++) {\n    ch = str.charCodeAt(pos);\n    if (ch === 0x0A) {\n      lines++;\n    } else if (isSpace(ch)) {\n      /*eslint no-empty:0*/\n    } else {\n      break;\n    }\n  }\n\n  // [label]:   destination   'title'\n  //                          ^^^^^^^ parse this\n  res = state.md.helpers.parseLinkTitle(str, pos, max);\n  if (pos < max && start !== pos && res.ok) {\n    title = res.str;\n    pos = res.pos;\n    lines += res.lines;\n  } else {\n    title = '';\n    pos = destEndPos;\n    lines = destEndLineNo;\n  }\n\n  // skip trailing spaces until the rest of the line\n  while (pos < max) {\n    ch = str.charCodeAt(pos);\n    if (!isSpace(ch)) { break; }\n    pos++;\n  }\n\n  if (pos < max && str.charCodeAt(pos) !== 0x0A) {\n    if (title) {\n      // garbage at the end of the line after title,\n      // but it could still be a valid reference if we roll back\n      title = '';\n      pos = destEndPos;\n      lines = destEndLineNo;\n      while (pos < max) {\n        ch = str.charCodeAt(pos);\n        if (!isSpace(ch)) { break; }\n        pos++;\n      }\n    }\n  }\n\n  if (pos < max && str.charCodeAt(pos) !== 0x0A) {\n    // garbage at the end of the line\n    return false;\n  }\n\n  label = normalizeReference(str.slice(1, labelEnd));\n  if (!label) {\n    // CommonMark 0.20 disallows empty labels\n    return false;\n  }\n\n  // Reference can not terminate anything. This check is for safety only.\n  /*istanbul ignore if*/\n  if (silent) { return true; }\n\n  if (typeof state.env.references === 'undefined') {\n    state.env.references = {};\n  }\n  if (typeof state.env.references[label] === 'undefined') {\n    state.env.references[label] = { title: title, href: href };\n  }\n\n  state.parentType = oldParentType;\n\n  state.line = startLine + lines + 1;\n  return true;\n};\n","'use strict';\n// TODO: Remove from `core-js@4` since it's moved to entry points\nrequire('../modules/es.regexp.exec');\nvar redefine = require('../internals/redefine');\nvar regexpExec = require('../internals/regexp-exec');\nvar fails = require('../internals/fails');\nvar wellKnownSymbol = require('../internals/well-known-symbol');\nvar createNonEnumerableProperty = require('../internals/create-non-enumerable-property');\n\nvar SPECIES = wellKnownSymbol('species');\nvar RegExpPrototype = RegExp.prototype;\n\nvar REPLACE_SUPPORTS_NAMED_GROUPS = !fails(function () {\n  // #replace needs built-in support for named groups.\n  // #match works fine because it just return the exec results, even if it has\n  // a \"grops\" property.\n  var re = /./;\n  re.exec = function () {\n    var result = [];\n    result.groups = { a: '7' };\n    return result;\n  };\n  return ''.replace(re, '$<a>') !== '7';\n});\n\n// IE <= 11 replaces $0 with the whole match, as if it was $&\n// https://stackoverflow.com/questions/6024666/getting-ie-to-replace-a-regex-with-the-literal-string-0\nvar REPLACE_KEEPS_$0 = (function () {\n  // eslint-disable-next-line regexp/prefer-escape-replacement-dollar-char -- required for testing\n  return 'a'.replace(/./, '$0') === '$0';\n})();\n\nvar REPLACE = wellKnownSymbol('replace');\n// Safari <= 13.0.3(?) substitutes nth capture where n>m with an empty string\nvar REGEXP_REPLACE_SUBSTITUTES_UNDEFINED_CAPTURE = (function () {\n  if (/./[REPLACE]) {\n    return /./[REPLACE]('a', '$0') === '';\n  }\n  return false;\n})();\n\n// Chrome 51 has a buggy \"split\" implementation when RegExp#exec !== nativeExec\n// Weex JS has frozen built-in prototypes, so use try / catch wrapper\nvar SPLIT_WORKS_WITH_OVERWRITTEN_EXEC = !fails(function () {\n  // eslint-disable-next-line regexp/no-empty-group -- required for testing\n  var re = /(?:)/;\n  var originalExec = re.exec;\n  re.exec = function () { return originalExec.apply(this, arguments); };\n  var result = 'ab'.split(re);\n  return result.length !== 2 || result[0] !== 'a' || result[1] !== 'b';\n});\n\nmodule.exports = function (KEY, length, exec, sham) {\n  var SYMBOL = wellKnownSymbol(KEY);\n\n  var DELEGATES_TO_SYMBOL = !fails(function () {\n    // String methods call symbol-named RegEp methods\n    var O = {};\n    O[SYMBOL] = function () { return 7; };\n    return ''[KEY](O) != 7;\n  });\n\n  var DELEGATES_TO_EXEC = DELEGATES_TO_SYMBOL && !fails(function () {\n    // Symbol-named RegExp methods call .exec\n    var execCalled = false;\n    var re = /a/;\n\n    if (KEY === 'split') {\n      // We can't use real regex here since it causes deoptimization\n      // and serious performance degradation in V8\n      // https://github.com/zloirock/core-js/issues/306\n      re = {};\n      // RegExp[@@split] doesn't call the regex's exec method, but first creates\n      // a new one. We need to return the patched regex when creating the new one.\n      re.constructor = {};\n      re.constructor[SPECIES] = function () { return re; };\n      re.flags = '';\n      re[SYMBOL] = /./[SYMBOL];\n    }\n\n    re.exec = function () { execCalled = true; return null; };\n\n    re[SYMBOL]('');\n    return !execCalled;\n  });\n\n  if (\n    !DELEGATES_TO_SYMBOL ||\n    !DELEGATES_TO_EXEC ||\n    (KEY === 'replace' && !(\n      REPLACE_SUPPORTS_NAMED_GROUPS &&\n      REPLACE_KEEPS_$0 &&\n      !REGEXP_REPLACE_SUBSTITUTES_UNDEFINED_CAPTURE\n    )) ||\n    (KEY === 'split' && !SPLIT_WORKS_WITH_OVERWRITTEN_EXEC)\n  ) {\n    var nativeRegExpMethod = /./[SYMBOL];\n    var methods = exec(SYMBOL, ''[KEY], function (nativeMethod, regexp, str, arg2, forceStringMethod) {\n      var $exec = regexp.exec;\n      if ($exec === regexpExec || $exec === RegExpPrototype.exec) {\n        if (DELEGATES_TO_SYMBOL && !forceStringMethod) {\n          // The native String method already delegates to @@method (this\n          // polyfilled function), leasing to infinite recursion.\n          // We avoid it by directly calling the native @@method method.\n          return { done: true, value: nativeRegExpMethod.call(regexp, str, arg2) };\n        }\n        return { done: true, value: nativeMethod.call(str, regexp, arg2) };\n      }\n      return { done: false };\n    }, {\n      REPLACE_KEEPS_$0: REPLACE_KEEPS_$0,\n      REGEXP_REPLACE_SUBSTITUTES_UNDEFINED_CAPTURE: REGEXP_REPLACE_SUBSTITUTES_UNDEFINED_CAPTURE\n    });\n    var stringMethod = methods[0];\n    var regexMethod = methods[1];\n\n    redefine(String.prototype, KEY, stringMethod);\n    redefine(RegExpPrototype, SYMBOL, length == 2\n      // 21.2.5.8 RegExp.prototype[@@replace](string, replaceValue)\n      // 21.2.5.11 RegExp.prototype[@@split](string, limit)\n      ? function (string, arg) { return regexMethod.call(string, this, arg); }\n      // 21.2.5.6 RegExp.prototype[@@match](string)\n      // 21.2.5.9 RegExp.prototype[@@search](string)\n      : function (string) { return regexMethod.call(string, this); }\n    );\n  }\n\n  if (sham) createNonEnumerableProperty(RegExpPrototype[SYMBOL], 'sham', true);\n};\n","'use strict';\n\n\nmodule.exports.encode = require('./encode');\nmodule.exports.decode = require('./decode');\nmodule.exports.format = require('./format');\nmodule.exports.parse  = require('./parse');\n","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n'use strict';\n\n//\n// Changes from joyent/node:\n//\n// 1. No leading slash in paths,\n//    e.g. in `url.parse('http://foo?bar')` pathname is ``, not `/`\n//\n// 2. Backslashes are not replaced with slashes,\n//    so `http:\\\\example.org\\` is treated like a relative path\n//\n// 3. Trailing colon is treated like a part of the path,\n//    i.e. in `http://example.org:foo` pathname is `:foo`\n//\n// 4. Nothing is URL-encoded in the resulting object,\n//    (in joyent/node some chars in auth and paths are encoded)\n//\n// 5. `url.parse()` does not have `parseQueryString` argument\n//\n// 6. Removed extraneous result properties: `host`, `path`, `query`, etc.,\n//    which can be constructed using other parts of the url.\n//\n\n\nfunction Url() {\n  this.protocol = null;\n  this.slashes = null;\n  this.auth = null;\n  this.port = null;\n  this.hostname = null;\n  this.hash = null;\n  this.search = null;\n  this.pathname = null;\n}\n\n// Reference: RFC 3986, RFC 1808, RFC 2396\n\n// define these here so at least they only have to be\n// compiled once on the first module load.\nvar protocolPattern = /^([a-z0-9.+-]+:)/i,\n    portPattern = /:[0-9]*$/,\n\n    // Special case for a simple path URL\n    simplePathPattern = /^(\\/\\/?(?!\\/)[^\\?\\s]*)(\\?[^\\s]*)?$/,\n\n    // RFC 2396: characters reserved for delimiting URLs.\n    // We actually just auto-escape these.\n    delims = [ '<', '>', '\"', '`', ' ', '\\r', '\\n', '\\t' ],\n\n    // RFC 2396: characters not allowed for various reasons.\n    unwise = [ '{', '}', '|', '\\\\', '^', '`' ].concat(delims),\n\n    // Allowed by RFCs, but cause of XSS attacks.  Always escape these.\n    autoEscape = [ '\\'' ].concat(unwise),\n    // Characters that are never ever allowed in a hostname.\n    // Note that any invalid chars are also handled, but these\n    // are the ones that are *expected* to be seen, so we fast-path\n    // them.\n    nonHostChars = [ '%', '/', '?', ';', '#' ].concat(autoEscape),\n    hostEndingChars = [ '/', '?', '#' ],\n    hostnameMaxLen = 255,\n    hostnamePartPattern = /^[+a-z0-9A-Z_-]{0,63}$/,\n    hostnamePartStart = /^([+a-z0-9A-Z_-]{0,63})(.*)$/,\n    // protocols that can allow \"unsafe\" and \"unwise\" chars.\n    /* eslint-disable no-script-url */\n    // protocols that never have a hostname.\n    hostlessProtocol = {\n      'javascript': true,\n      'javascript:': true\n    },\n    // protocols that always contain a // bit.\n    slashedProtocol = {\n      'http': true,\n      'https': true,\n      'ftp': true,\n      'gopher': true,\n      'file': true,\n      'http:': true,\n      'https:': true,\n      'ftp:': true,\n      'gopher:': true,\n      'file:': true\n    };\n    /* eslint-enable no-script-url */\n\nfunction urlParse(url, slashesDenoteHost) {\n  if (url && url instanceof Url) { return url; }\n\n  var u = new Url();\n  u.parse(url, slashesDenoteHost);\n  return u;\n}\n\nUrl.prototype.parse = function(url, slashesDenoteHost) {\n  var i, l, lowerProto, hec, slashes,\n      rest = url;\n\n  // trim before proceeding.\n  // This is to support parse stuff like \"  http://foo.com  \\n\"\n  rest = rest.trim();\n\n  if (!slashesDenoteHost && url.split('#').length === 1) {\n    // Try fast path regexp\n    var simplePath = simplePathPattern.exec(rest);\n    if (simplePath) {\n      this.pathname = simplePath[1];\n      if (simplePath[2]) {\n        this.search = simplePath[2];\n      }\n      return this;\n    }\n  }\n\n  var proto = protocolPattern.exec(rest);\n  if (proto) {\n    proto = proto[0];\n    lowerProto = proto.toLowerCase();\n    this.protocol = proto;\n    rest = rest.substr(proto.length);\n  }\n\n  // figure out if it's got a host\n  // user@server is *always* interpreted as a hostname, and url\n  // resolution will treat //foo/bar as host=foo,path=bar because that's\n  // how the browser resolves relative URLs.\n  if (slashesDenoteHost || proto || rest.match(/^\\/\\/[^@\\/]+@[^@\\/]+/)) {\n    slashes = rest.substr(0, 2) === '//';\n    if (slashes && !(proto && hostlessProtocol[proto])) {\n      rest = rest.substr(2);\n      this.slashes = true;\n    }\n  }\n\n  if (!hostlessProtocol[proto] &&\n      (slashes || (proto && !slashedProtocol[proto]))) {\n\n    // there's a hostname.\n    // the first instance of /, ?, ;, or # ends the host.\n    //\n    // If there is an @ in the hostname, then non-host chars *are* allowed\n    // to the left of the last @ sign, unless some host-ending character\n    // comes *before* the @-sign.\n    // URLs are obnoxious.\n    //\n    // ex:\n    // http://a@b@c/ => user:a@b host:c\n    // http://a@b?@c => user:a host:c path:/?@c\n\n    // v0.12 TODO(isaacs): This is not quite how Chrome does things.\n    // Review our test case against browsers more comprehensively.\n\n    // find the first instance of any hostEndingChars\n    var hostEnd = -1;\n    for (i = 0; i < hostEndingChars.length; i++) {\n      hec = rest.indexOf(hostEndingChars[i]);\n      if (hec !== -1 && (hostEnd === -1 || hec < hostEnd)) {\n        hostEnd = hec;\n      }\n    }\n\n    // at this point, either we have an explicit point where the\n    // auth portion cannot go past, or the last @ char is the decider.\n    var auth, atSign;\n    if (hostEnd === -1) {\n      // atSign can be anywhere.\n      atSign = rest.lastIndexOf('@');\n    } else {\n      // atSign must be in auth portion.\n      // http://a@b/c@d => host:b auth:a path:/c@d\n      atSign = rest.lastIndexOf('@', hostEnd);\n    }\n\n    // Now we have a portion which is definitely the auth.\n    // Pull that off.\n    if (atSign !== -1) {\n      auth = rest.slice(0, atSign);\n      rest = rest.slice(atSign + 1);\n      this.auth = auth;\n    }\n\n    // the host is the remaining to the left of the first non-host char\n    hostEnd = -1;\n    for (i = 0; i < nonHostChars.length; i++) {\n      hec = rest.indexOf(nonHostChars[i]);\n      if (hec !== -1 && (hostEnd === -1 || hec < hostEnd)) {\n        hostEnd = hec;\n      }\n    }\n    // if we still have not hit it, then the entire thing is a host.\n    if (hostEnd === -1) {\n      hostEnd = rest.length;\n    }\n\n    if (rest[hostEnd - 1] === ':') { hostEnd--; }\n    var host = rest.slice(0, hostEnd);\n    rest = rest.slice(hostEnd);\n\n    // pull out port.\n    this.parseHost(host);\n\n    // we've indicated that there is a hostname,\n    // so even if it's empty, it has to be present.\n    this.hostname = this.hostname || '';\n\n    // if hostname begins with [ and ends with ]\n    // assume that it's an IPv6 address.\n    var ipv6Hostname = this.hostname[0] === '[' &&\n        this.hostname[this.hostname.length - 1] === ']';\n\n    // validate a little.\n    if (!ipv6Hostname) {\n      var hostparts = this.hostname.split(/\\./);\n      for (i = 0, l = hostparts.length; i < l; i++) {\n        var part = hostparts[i];\n        if (!part) { continue; }\n        if (!part.match(hostnamePartPattern)) {\n          var newpart = '';\n          for (var j = 0, k = part.length; j < k; j++) {\n            if (part.charCodeAt(j) > 127) {\n              // we replace non-ASCII char with a temporary placeholder\n              // we need this to make sure size of hostname is not\n              // broken by replacing non-ASCII by nothing\n              newpart += 'x';\n            } else {\n              newpart += part[j];\n            }\n          }\n          // we test again with ASCII char only\n          if (!newpart.match(hostnamePartPattern)) {\n            var validParts = hostparts.slice(0, i);\n            var notHost = hostparts.slice(i + 1);\n            var bit = part.match(hostnamePartStart);\n            if (bit) {\n              validParts.push(bit[1]);\n              notHost.unshift(bit[2]);\n            }\n            if (notHost.length) {\n              rest = notHost.join('.') + rest;\n            }\n            this.hostname = validParts.join('.');\n            break;\n          }\n        }\n      }\n    }\n\n    if (this.hostname.length > hostnameMaxLen) {\n      this.hostname = '';\n    }\n\n    // strip [ and ] from the hostname\n    // the host field still retains them, though\n    if (ipv6Hostname) {\n      this.hostname = this.hostname.substr(1, this.hostname.length - 2);\n    }\n  }\n\n  // chop off from the tail first.\n  var hash = rest.indexOf('#');\n  if (hash !== -1) {\n    // got a fragment string.\n    this.hash = rest.substr(hash);\n    rest = rest.slice(0, hash);\n  }\n  var qm = rest.indexOf('?');\n  if (qm !== -1) {\n    this.search = rest.substr(qm);\n    rest = rest.slice(0, qm);\n  }\n  if (rest) { this.pathname = rest; }\n  if (slashedProtocol[lowerProto] &&\n      this.hostname && !this.pathname) {\n    this.pathname = '';\n  }\n\n  return this;\n};\n\nUrl.prototype.parseHost = function(host) {\n  var port = portPattern.exec(host);\n  if (port) {\n    port = port[0];\n    if (port !== ':') {\n      this.port = port.substr(1);\n    }\n    host = host.substr(0, host.length - port.length);\n  }\n  if (host) { this.hostname = host; }\n};\n\nmodule.exports = urlParse;\n","// Parse link label\n//\n// this function assumes that first character (\"[\") already matches;\n// returns the end of the label\n//\n'use strict';\n\nmodule.exports = function parseLinkLabel(state, start, disableNested) {\n  var level, found, marker, prevPos,\n      labelEnd = -1,\n      max = state.posMax,\n      oldPos = state.pos;\n\n  state.pos = start + 1;\n  level = 1;\n\n  while (state.pos < max) {\n    marker = state.src.charCodeAt(state.pos);\n    if (marker === 0x5D /* ] */) {\n      level--;\n      if (level === 0) {\n        found = true;\n        break;\n      }\n    }\n\n    prevPos = state.pos;\n    state.md.inline.skipToken(state);\n    if (marker === 0x5B /* [ */) {\n      if (prevPos === state.pos - 1) {\n        // increase level if we find text `[`, which is not a part of any token\n        level++;\n      } else if (disableNested) {\n        state.pos = oldPos;\n        return -1;\n      }\n    }\n  }\n\n  if (found) {\n    labelEnd = state.pos;\n  }\n\n  // restore old state\n  state.pos = oldPos;\n\n  return labelEnd;\n};\n","// List of valid html blocks names, accorting to commonmark spec\n// http://jgm.github.io/CommonMark/spec.html#html-blocks\n\n'use strict';\n\n\nmodule.exports = [\n  'address',\n  'article',\n  'aside',\n  'base',\n  'basefont',\n  'blockquote',\n  'body',\n  'caption',\n  'center',\n  'col',\n  'colgroup',\n  'dd',\n  'details',\n  'dialog',\n  'dir',\n  'div',\n  'dl',\n  'dt',\n  'fieldset',\n  'figcaption',\n  'figure',\n  'footer',\n  'form',\n  'frame',\n  'frameset',\n  'h1',\n  'h2',\n  'h3',\n  'h4',\n  'h5',\n  'h6',\n  'head',\n  'header',\n  'hr',\n  'html',\n  'iframe',\n  'legend',\n  'li',\n  'link',\n  'main',\n  'menu',\n  'menuitem',\n  'nav',\n  'noframes',\n  'ol',\n  'optgroup',\n  'option',\n  'p',\n  'param',\n  'section',\n  'source',\n  'summary',\n  'table',\n  'tbody',\n  'td',\n  'tfoot',\n  'th',\n  'thead',\n  'title',\n  'tr',\n  'track',\n  'ul'\n];\n","// Parse link destination\n//\n'use strict';\n\n\nvar unescapeAll = require('../common/utils').unescapeAll;\n\n\nmodule.exports = function parseLinkDestination(str, pos, max) {\n  var code, level,\n      lines = 0,\n      start = pos,\n      result = {\n        ok: false,\n        pos: 0,\n        lines: 0,\n        str: ''\n      };\n\n  if (str.charCodeAt(pos) === 0x3C /* < */) {\n    pos++;\n    while (pos < max) {\n      code = str.charCodeAt(pos);\n      if (code === 0x0A /* \\n */) { return result; }\n      if (code === 0x3C /* < */) { return result; }\n      if (code === 0x3E /* > */) {\n        result.pos = pos + 1;\n        result.str = unescapeAll(str.slice(start + 1, pos));\n        result.ok = true;\n        return result;\n      }\n      if (code === 0x5C /* \\ */ && pos + 1 < max) {\n        pos += 2;\n        continue;\n      }\n\n      pos++;\n    }\n\n    // no closing '>'\n    return result;\n  }\n\n  // this should be ... } else { ... branch\n\n  level = 0;\n  while (pos < max) {\n    code = str.charCodeAt(pos);\n\n    if (code === 0x20) { break; }\n\n    // ascii control characters\n    if (code < 0x20 || code === 0x7F) { break; }\n\n    if (code === 0x5C /* \\ */ && pos + 1 < max) {\n      if (str.charCodeAt(pos + 1) === 0x20) { break; }\n      pos += 2;\n      continue;\n    }\n\n    if (code === 0x28 /* ( */) {\n      level++;\n      if (level > 32) { return result; }\n    }\n\n    if (code === 0x29 /* ) */) {\n      if (level === 0) { break; }\n      level--;\n    }\n\n    pos++;\n  }\n\n  if (start === pos) { return result; }\n  if (level !== 0) { return result; }\n\n  result.str = unescapeAll(str.slice(start, pos));\n  result.lines = lines;\n  result.pos = pos;\n  result.ok = true;\n  return result;\n};\n","// Block quotes\n\n'use strict';\n\nvar isSpace = require('../common/utils').isSpace;\n\n\nmodule.exports = function blockquote(state, startLine, endLine, silent) {\n  var adjustTab,\n      ch,\n      i,\n      initial,\n      l,\n      lastLineEmpty,\n      lines,\n      nextLine,\n      offset,\n      oldBMarks,\n      oldBSCount,\n      oldIndent,\n      oldParentType,\n      oldSCount,\n      oldTShift,\n      spaceAfterMarker,\n      terminate,\n      terminatorRules,\n      token,\n      isOutdented,\n      oldLineMax = state.lineMax,\n      pos = state.bMarks[startLine] + state.tShift[startLine],\n      max = state.eMarks[startLine];\n\n  // if it's indented more than 3 spaces, it should be a code block\n  if (state.sCount[startLine] - state.blkIndent >= 4) { return false; }\n\n  // check the block quote marker\n  if (state.src.charCodeAt(pos++) !== 0x3E/* > */) { return false; }\n\n  // we know that it's going to be a valid blockquote,\n  // so no point trying to find the end of it in silent mode\n  if (silent) { return true; }\n\n  // set offset past spaces and \">\"\n  initial = offset = state.sCount[startLine] + 1;\n\n  // skip one optional space after '>'\n  if (state.src.charCodeAt(pos) === 0x20 /* space */) {\n    // ' >   test '\n    //     ^ -- position start of line here:\n    pos++;\n    initial++;\n    offset++;\n    adjustTab = false;\n    spaceAfterMarker = true;\n  } else if (state.src.charCodeAt(pos) === 0x09 /* tab */) {\n    spaceAfterMarker = true;\n\n    if ((state.bsCount[startLine] + offset) % 4 === 3) {\n      // '  >\\t  test '\n      //       ^ -- position start of line here (tab has width===1)\n      pos++;\n      initial++;\n      offset++;\n      adjustTab = false;\n    } else {\n      // ' >\\t  test '\n      //    ^ -- position start of line here + shift bsCount slightly\n      //         to make extra space appear\n      adjustTab = true;\n    }\n  } else {\n    spaceAfterMarker = false;\n  }\n\n  oldBMarks = [ state.bMarks[startLine] ];\n  state.bMarks[startLine] = pos;\n\n  while (pos < max) {\n    ch = state.src.charCodeAt(pos);\n\n    if (isSpace(ch)) {\n      if (ch === 0x09) {\n        offset += 4 - (offset + state.bsCount[startLine] + (adjustTab ? 1 : 0)) % 4;\n      } else {\n        offset++;\n      }\n    } else {\n      break;\n    }\n\n    pos++;\n  }\n\n  oldBSCount = [ state.bsCount[startLine] ];\n  state.bsCount[startLine] = state.sCount[startLine] + 1 + (spaceAfterMarker ? 1 : 0);\n\n  lastLineEmpty = pos >= max;\n\n  oldSCount = [ state.sCount[startLine] ];\n  state.sCount[startLine] = offset - initial;\n\n  oldTShift = [ state.tShift[startLine] ];\n  state.tShift[startLine] = pos - state.bMarks[startLine];\n\n  terminatorRules = state.md.block.ruler.getRules('blockquote');\n\n  oldParentType = state.parentType;\n  state.parentType = 'blockquote';\n\n  // Search the end of the block\n  //\n  // Block ends with either:\n  //  1. an empty line outside:\n  //     ```\n  //     > test\n  //\n  //     ```\n  //  2. an empty line inside:\n  //     ```\n  //     >\n  //     test\n  //     ```\n  //  3. another tag:\n  //     ```\n  //     > test\n  //      - - -\n  //     ```\n  for (nextLine = startLine + 1; nextLine < endLine; nextLine++) {\n    // check if it's outdented, i.e. it's inside list item and indented\n    // less than said list item:\n    //\n    // ```\n    // 1. anything\n    //    > current blockquote\n    // 2. checking this line\n    // ```\n    isOutdented = state.sCount[nextLine] < state.blkIndent;\n\n    pos = state.bMarks[nextLine] + state.tShift[nextLine];\n    max = state.eMarks[nextLine];\n\n    if (pos >= max) {\n      // Case 1: line is not inside the blockquote, and this line is empty.\n      break;\n    }\n\n    if (state.src.charCodeAt(pos++) === 0x3E/* > */ && !isOutdented) {\n      // This line is inside the blockquote.\n\n      // set offset past spaces and \">\"\n      initial = offset = state.sCount[nextLine] + 1;\n\n      // skip one optional space after '>'\n      if (state.src.charCodeAt(pos) === 0x20 /* space */) {\n        // ' >   test '\n        //     ^ -- position start of line here:\n        pos++;\n        initial++;\n        offset++;\n        adjustTab = false;\n        spaceAfterMarker = true;\n      } else if (state.src.charCodeAt(pos) === 0x09 /* tab */) {\n        spaceAfterMarker = true;\n\n        if ((state.bsCount[nextLine] + offset) % 4 === 3) {\n          // '  >\\t  test '\n          //       ^ -- position start of line here (tab has width===1)\n          pos++;\n          initial++;\n          offset++;\n          adjustTab = false;\n        } else {\n          // ' >\\t  test '\n          //    ^ -- position start of line here + shift bsCount slightly\n          //         to make extra space appear\n          adjustTab = true;\n        }\n      } else {\n        spaceAfterMarker = false;\n      }\n\n      oldBMarks.push(state.bMarks[nextLine]);\n      state.bMarks[nextLine] = pos;\n\n      while (pos < max) {\n        ch = state.src.charCodeAt(pos);\n\n        if (isSpace(ch)) {\n          if (ch === 0x09) {\n            offset += 4 - (offset + state.bsCount[nextLine] + (adjustTab ? 1 : 0)) % 4;\n          } else {\n            offset++;\n          }\n        } else {\n          break;\n        }\n\n        pos++;\n      }\n\n      lastLineEmpty = pos >= max;\n\n      oldBSCount.push(state.bsCount[nextLine]);\n      state.bsCount[nextLine] = state.sCount[nextLine] + 1 + (spaceAfterMarker ? 1 : 0);\n\n      oldSCount.push(state.sCount[nextLine]);\n      state.sCount[nextLine] = offset - initial;\n\n      oldTShift.push(state.tShift[nextLine]);\n      state.tShift[nextLine] = pos - state.bMarks[nextLine];\n      continue;\n    }\n\n    // Case 2: line is not inside the blockquote, and the last line was empty.\n    if (lastLineEmpty) { break; }\n\n    // Case 3: another tag found.\n    terminate = false;\n    for (i = 0, l = terminatorRules.length; i < l; i++) {\n      if (terminatorRules[i](state, nextLine, endLine, true)) {\n        terminate = true;\n        break;\n      }\n    }\n\n    if (terminate) {\n      // Quirk to enforce \"hard termination mode\" for paragraphs;\n      // normally if you call `tokenize(state, startLine, nextLine)`,\n      // paragraphs will look below nextLine for paragraph continuation,\n      // but if blockquote is terminated by another tag, they shouldn't\n      state.lineMax = nextLine;\n\n      if (state.blkIndent !== 0) {\n        // state.blkIndent was non-zero, we now set it to zero,\n        // so we need to re-calculate all offsets to appear as\n        // if indent wasn't changed\n        oldBMarks.push(state.bMarks[nextLine]);\n        oldBSCount.push(state.bsCount[nextLine]);\n        oldTShift.push(state.tShift[nextLine]);\n        oldSCount.push(state.sCount[nextLine]);\n        state.sCount[nextLine] -= state.blkIndent;\n      }\n\n      break;\n    }\n\n    oldBMarks.push(state.bMarks[nextLine]);\n    oldBSCount.push(state.bsCount[nextLine]);\n    oldTShift.push(state.tShift[nextLine]);\n    oldSCount.push(state.sCount[nextLine]);\n\n    // A negative indentation means that this is a paragraph continuation\n    //\n    state.sCount[nextLine] = -1;\n  }\n\n  oldIndent = state.blkIndent;\n  state.blkIndent = 0;\n\n  token        = state.push('blockquote_open', 'blockquote', 1);\n  token.markup = '>';\n  token.map    = lines = [ startLine, 0 ];\n\n  state.md.block.tokenize(state, startLine, nextLine);\n\n  token        = state.push('blockquote_close', 'blockquote', -1);\n  token.markup = '>';\n\n  state.lineMax = oldLineMax;\n  state.parentType = oldParentType;\n  lines[1] = state.line;\n\n  // Restore original tShift; this might not be necessary since the parser\n  // has already been here, but just to make sure we can do that.\n  for (i = 0; i < oldTShift.length; i++) {\n    state.bMarks[i + startLine] = oldBMarks[i];\n    state.tShift[i + startLine] = oldTShift[i];\n    state.sCount[i + startLine] = oldSCount[i];\n    state.bsCount[i + startLine] = oldBSCount[i];\n  }\n  state.blkIndent = oldIndent;\n\n  return true;\n};\n","'use strict';\n\n\n////////////////////////////////////////////////////////////////////////////////\n// Helpers\n\n// Merge objects\n//\nfunction assign(obj /*from1, from2, from3, ...*/) {\n  var sources = Array.prototype.slice.call(arguments, 1);\n\n  sources.forEach(function (source) {\n    if (!source) { return; }\n\n    Object.keys(source).forEach(function (key) {\n      obj[key] = source[key];\n    });\n  });\n\n  return obj;\n}\n\nfunction _class(obj) { return Object.prototype.toString.call(obj); }\nfunction isString(obj) { return _class(obj) === '[object String]'; }\nfunction isObject(obj) { return _class(obj) === '[object Object]'; }\nfunction isRegExp(obj) { return _class(obj) === '[object RegExp]'; }\nfunction isFunction(obj) { return _class(obj) === '[object Function]'; }\n\n\nfunction escapeRE(str) { return str.replace(/[.?*+^$[\\]\\\\(){}|-]/g, '\\\\$&'); }\n\n////////////////////////////////////////////////////////////////////////////////\n\n\nvar defaultOptions = {\n  fuzzyLink: true,\n  fuzzyEmail: true,\n  fuzzyIP: false\n};\n\n\nfunction isOptionsObj(obj) {\n  return Object.keys(obj || {}).reduce(function (acc, k) {\n    return acc || defaultOptions.hasOwnProperty(k);\n  }, false);\n}\n\n\nvar defaultSchemas = {\n  'http:': {\n    validate: function (text, pos, self) {\n      var tail = text.slice(pos);\n\n      if (!self.re.http) {\n        // compile lazily, because \"host\"-containing variables can change on tlds update.\n        self.re.http =  new RegExp(\n          '^\\\\/\\\\/' + self.re.src_auth + self.re.src_host_port_strict + self.re.src_path, 'i'\n        );\n      }\n      if (self.re.http.test(tail)) {\n        return tail.match(self.re.http)[0].length;\n      }\n      return 0;\n    }\n  },\n  'https:':  'http:',\n  'ftp:':    'http:',\n  '//':      {\n    validate: function (text, pos, self) {\n      var tail = text.slice(pos);\n\n      if (!self.re.no_http) {\n      // compile lazily, because \"host\"-containing variables can change on tlds update.\n        self.re.no_http =  new RegExp(\n          '^' +\n          self.re.src_auth +\n          // Don't allow single-level domains, because of false positives like '//test'\n          // with code comments\n          '(?:localhost|(?:(?:' + self.re.src_domain + ')\\\\.)+' + self.re.src_domain_root + ')' +\n          self.re.src_port +\n          self.re.src_host_terminator +\n          self.re.src_path,\n\n          'i'\n        );\n      }\n\n      if (self.re.no_http.test(tail)) {\n        // should not be `://` & `///`, that protects from errors in protocol name\n        if (pos >= 3 && text[pos - 3] === ':') { return 0; }\n        if (pos >= 3 && text[pos - 3] === '/') { return 0; }\n        return tail.match(self.re.no_http)[0].length;\n      }\n      return 0;\n    }\n  },\n  'mailto:': {\n    validate: function (text, pos, self) {\n      var tail = text.slice(pos);\n\n      if (!self.re.mailto) {\n        self.re.mailto =  new RegExp(\n          '^' + self.re.src_email_name + '@' + self.re.src_host_strict, 'i'\n        );\n      }\n      if (self.re.mailto.test(tail)) {\n        return tail.match(self.re.mailto)[0].length;\n      }\n      return 0;\n    }\n  }\n};\n\n/*eslint-disable max-len*/\n\n// RE pattern for 2-character tlds (autogenerated by ./support/tlds_2char_gen.js)\nvar tlds_2ch_src_re = 'a[cdefgilmnoqrstuwxz]|b[abdefghijmnorstvwyz]|c[acdfghiklmnoruvwxyz]|d[ejkmoz]|e[cegrstu]|f[ijkmor]|g[abdefghilmnpqrstuwy]|h[kmnrtu]|i[delmnoqrst]|j[emop]|k[eghimnprwyz]|l[abcikrstuvy]|m[acdeghklmnopqrstuvwxyz]|n[acefgilopruz]|om|p[aefghklmnrstwy]|qa|r[eosuw]|s[abcdeghijklmnortuvxyz]|t[cdfghjklmnortvwz]|u[agksyz]|v[aceginu]|w[fs]|y[et]|z[amw]';\n\n// DON'T try to make PRs with changes. Extend TLDs with LinkifyIt.tlds() instead\nvar tlds_default = 'biz|com|edu|gov|net|org|pro|web|xxx|aero|asia|coop|info|museum|name|shop|рф'.split('|');\n\n/*eslint-enable max-len*/\n\n////////////////////////////////////////////////////////////////////////////////\n\nfunction resetScanCache(self) {\n  self.__index__ = -1;\n  self.__text_cache__   = '';\n}\n\nfunction createValidator(re) {\n  return function (text, pos) {\n    var tail = text.slice(pos);\n\n    if (re.test(tail)) {\n      return tail.match(re)[0].length;\n    }\n    return 0;\n  };\n}\n\nfunction createNormalizer() {\n  return function (match, self) {\n    self.normalize(match);\n  };\n}\n\n// Schemas compiler. Build regexps.\n//\nfunction compile(self) {\n\n  // Load & clone RE patterns.\n  var re = self.re = require('./lib/re')(self.__opts__);\n\n  // Define dynamic patterns\n  var tlds = self.__tlds__.slice();\n\n  self.onCompile();\n\n  if (!self.__tlds_replaced__) {\n    tlds.push(tlds_2ch_src_re);\n  }\n  tlds.push(re.src_xn);\n\n  re.src_tlds = tlds.join('|');\n\n  function untpl(tpl) { return tpl.replace('%TLDS%', re.src_tlds); }\n\n  re.email_fuzzy      = RegExp(untpl(re.tpl_email_fuzzy), 'i');\n  re.link_fuzzy       = RegExp(untpl(re.tpl_link_fuzzy), 'i');\n  re.link_no_ip_fuzzy = RegExp(untpl(re.tpl_link_no_ip_fuzzy), 'i');\n  re.host_fuzzy_test  = RegExp(untpl(re.tpl_host_fuzzy_test), 'i');\n\n  //\n  // Compile each schema\n  //\n\n  var aliases = [];\n\n  self.__compiled__ = {}; // Reset compiled data\n\n  function schemaError(name, val) {\n    throw new Error('(LinkifyIt) Invalid schema \"' + name + '\": ' + val);\n  }\n\n  Object.keys(self.__schemas__).forEach(function (name) {\n    var val = self.__schemas__[name];\n\n    // skip disabled methods\n    if (val === null) { return; }\n\n    var compiled = { validate: null, link: null };\n\n    self.__compiled__[name] = compiled;\n\n    if (isObject(val)) {\n      if (isRegExp(val.validate)) {\n        compiled.validate = createValidator(val.validate);\n      } else if (isFunction(val.validate)) {\n        compiled.validate = val.validate;\n      } else {\n        schemaError(name, val);\n      }\n\n      if (isFunction(val.normalize)) {\n        compiled.normalize = val.normalize;\n      } else if (!val.normalize) {\n        compiled.normalize = createNormalizer();\n      } else {\n        schemaError(name, val);\n      }\n\n      return;\n    }\n\n    if (isString(val)) {\n      aliases.push(name);\n      return;\n    }\n\n    schemaError(name, val);\n  });\n\n  //\n  // Compile postponed aliases\n  //\n\n  aliases.forEach(function (alias) {\n    if (!self.__compiled__[self.__schemas__[alias]]) {\n      // Silently fail on missed schemas to avoid errons on disable.\n      // schemaError(alias, self.__schemas__[alias]);\n      return;\n    }\n\n    self.__compiled__[alias].validate =\n      self.__compiled__[self.__schemas__[alias]].validate;\n    self.__compiled__[alias].normalize =\n      self.__compiled__[self.__schemas__[alias]].normalize;\n  });\n\n  //\n  // Fake record for guessed links\n  //\n  self.__compiled__[''] = { validate: null, normalize: createNormalizer() };\n\n  //\n  // Build schema condition\n  //\n  var slist = Object.keys(self.__compiled__)\n                      .filter(function (name) {\n                        // Filter disabled & fake schemas\n                        return name.length > 0 && self.__compiled__[name];\n                      })\n                      .map(escapeRE)\n                      .join('|');\n  // (?!_) cause 1.5x slowdown\n  self.re.schema_test   = RegExp('(^|(?!_)(?:[><\\uff5c]|' + re.src_ZPCc + '))(' + slist + ')', 'i');\n  self.re.schema_search = RegExp('(^|(?!_)(?:[><\\uff5c]|' + re.src_ZPCc + '))(' + slist + ')', 'ig');\n\n  self.re.pretest = RegExp(\n    '(' + self.re.schema_test.source + ')|(' + self.re.host_fuzzy_test.source + ')|@',\n    'i'\n  );\n\n  //\n  // Cleanup\n  //\n\n  resetScanCache(self);\n}\n\n/**\n * class Match\n *\n * Match result. Single element of array, returned by [[LinkifyIt#match]]\n **/\nfunction Match(self, shift) {\n  var start = self.__index__,\n      end   = self.__last_index__,\n      text  = self.__text_cache__.slice(start, end);\n\n  /**\n   * Match#schema -> String\n   *\n   * Prefix (protocol) for matched string.\n   **/\n  this.schema    = self.__schema__.toLowerCase();\n  /**\n   * Match#index -> Number\n   *\n   * First position of matched string.\n   **/\n  this.index     = start + shift;\n  /**\n   * Match#lastIndex -> Number\n   *\n   * Next position after matched string.\n   **/\n  this.lastIndex = end + shift;\n  /**\n   * Match#raw -> String\n   *\n   * Matched string.\n   **/\n  this.raw       = text;\n  /**\n   * Match#text -> String\n   *\n   * Notmalized text of matched string.\n   **/\n  this.text      = text;\n  /**\n   * Match#url -> String\n   *\n   * Normalized url of matched string.\n   **/\n  this.url       = text;\n}\n\nfunction createMatch(self, shift) {\n  var match = new Match(self, shift);\n\n  self.__compiled__[match.schema].normalize(match, self);\n\n  return match;\n}\n\n\n/**\n * class LinkifyIt\n **/\n\n/**\n * new LinkifyIt(schemas, options)\n * - schemas (Object): Optional. Additional schemas to validate (prefix/validator)\n * - options (Object): { fuzzyLink|fuzzyEmail|fuzzyIP: true|false }\n *\n * Creates new linkifier instance with optional additional schemas.\n * Can be called without `new` keyword for convenience.\n *\n * By default understands:\n *\n * - `http(s)://...` , `ftp://...`, `mailto:...` & `//...` links\n * - \"fuzzy\" links and emails (example.com, foo@bar.com).\n *\n * `schemas` is an object, where each key/value describes protocol/rule:\n *\n * - __key__ - link prefix (usually, protocol name with `:` at the end, `skype:`\n *   for example). `linkify-it` makes shure that prefix is not preceeded with\n *   alphanumeric char and symbols. Only whitespaces and punctuation allowed.\n * - __value__ - rule to check tail after link prefix\n *   - _String_ - just alias to existing rule\n *   - _Object_\n *     - _validate_ - validator function (should return matched length on success),\n *       or `RegExp`.\n *     - _normalize_ - optional function to normalize text & url of matched result\n *       (for example, for @twitter mentions).\n *\n * `options`:\n *\n * - __fuzzyLink__ - recognige URL-s without `http(s):` prefix. Default `true`.\n * - __fuzzyIP__ - allow IPs in fuzzy links above. Can conflict with some texts\n *   like version numbers. Default `false`.\n * - __fuzzyEmail__ - recognize emails without `mailto:` prefix.\n *\n **/\nfunction LinkifyIt(schemas, options) {\n  if (!(this instanceof LinkifyIt)) {\n    return new LinkifyIt(schemas, options);\n  }\n\n  if (!options) {\n    if (isOptionsObj(schemas)) {\n      options = schemas;\n      schemas = {};\n    }\n  }\n\n  this.__opts__           = assign({}, defaultOptions, options);\n\n  // Cache last tested result. Used to skip repeating steps on next `match` call.\n  this.__index__          = -1;\n  this.__last_index__     = -1; // Next scan position\n  this.__schema__         = '';\n  this.__text_cache__     = '';\n\n  this.__schemas__        = assign({}, defaultSchemas, schemas);\n  this.__compiled__       = {};\n\n  this.__tlds__           = tlds_default;\n  this.__tlds_replaced__  = false;\n\n  this.re = {};\n\n  compile(this);\n}\n\n\n/** chainable\n * LinkifyIt#add(schema, definition)\n * - schema (String): rule name (fixed pattern prefix)\n * - definition (String|RegExp|Object): schema definition\n *\n * Add new rule definition. See constructor description for details.\n **/\nLinkifyIt.prototype.add = function add(schema, definition) {\n  this.__schemas__[schema] = definition;\n  compile(this);\n  return this;\n};\n\n\n/** chainable\n * LinkifyIt#set(options)\n * - options (Object): { fuzzyLink|fuzzyEmail|fuzzyIP: true|false }\n *\n * Set recognition options for links without schema.\n **/\nLinkifyIt.prototype.set = function set(options) {\n  this.__opts__ = assign(this.__opts__, options);\n  return this;\n};\n\n\n/**\n * LinkifyIt#test(text) -> Boolean\n *\n * Searches linkifiable pattern and returns `true` on success or `false` on fail.\n **/\nLinkifyIt.prototype.test = function test(text) {\n  // Reset scan cache\n  this.__text_cache__ = text;\n  this.__index__      = -1;\n\n  if (!text.length) { return false; }\n\n  var m, ml, me, len, shift, next, re, tld_pos, at_pos;\n\n  // try to scan for link with schema - that's the most simple rule\n  if (this.re.schema_test.test(text)) {\n    re = this.re.schema_search;\n    re.lastIndex = 0;\n    while ((m = re.exec(text)) !== null) {\n      len = this.testSchemaAt(text, m[2], re.lastIndex);\n      if (len) {\n        this.__schema__     = m[2];\n        this.__index__      = m.index + m[1].length;\n        this.__last_index__ = m.index + m[0].length + len;\n        break;\n      }\n    }\n  }\n\n  if (this.__opts__.fuzzyLink && this.__compiled__['http:']) {\n    // guess schemaless links\n    tld_pos = text.search(this.re.host_fuzzy_test);\n    if (tld_pos >= 0) {\n      // if tld is located after found link - no need to check fuzzy pattern\n      if (this.__index__ < 0 || tld_pos < this.__index__) {\n        if ((ml = text.match(this.__opts__.fuzzyIP ? this.re.link_fuzzy : this.re.link_no_ip_fuzzy)) !== null) {\n\n          shift = ml.index + ml[1].length;\n\n          if (this.__index__ < 0 || shift < this.__index__) {\n            this.__schema__     = '';\n            this.__index__      = shift;\n            this.__last_index__ = ml.index + ml[0].length;\n          }\n        }\n      }\n    }\n  }\n\n  if (this.__opts__.fuzzyEmail && this.__compiled__['mailto:']) {\n    // guess schemaless emails\n    at_pos = text.indexOf('@');\n    if (at_pos >= 0) {\n      // We can't skip this check, because this cases are possible:\n      // 192.168.1.1@gmail.com, my.in@example.com\n      if ((me = text.match(this.re.email_fuzzy)) !== null) {\n\n        shift = me.index + me[1].length;\n        next  = me.index + me[0].length;\n\n        if (this.__index__ < 0 || shift < this.__index__ ||\n            (shift === this.__index__ && next > this.__last_index__)) {\n          this.__schema__     = 'mailto:';\n          this.__index__      = shift;\n          this.__last_index__ = next;\n        }\n      }\n    }\n  }\n\n  return this.__index__ >= 0;\n};\n\n\n/**\n * LinkifyIt#pretest(text) -> Boolean\n *\n * Very quick check, that can give false positives. Returns true if link MAY BE\n * can exists. Can be used for speed optimization, when you need to check that\n * link NOT exists.\n **/\nLinkifyIt.prototype.pretest = function pretest(text) {\n  return this.re.pretest.test(text);\n};\n\n\n/**\n * LinkifyIt#testSchemaAt(text, name, position) -> Number\n * - text (String): text to scan\n * - name (String): rule (schema) name\n * - position (Number): text offset to check from\n *\n * Similar to [[LinkifyIt#test]] but checks only specific protocol tail exactly\n * at given position. Returns length of found pattern (0 on fail).\n **/\nLinkifyIt.prototype.testSchemaAt = function testSchemaAt(text, schema, pos) {\n  // If not supported schema check requested - terminate\n  if (!this.__compiled__[schema.toLowerCase()]) {\n    return 0;\n  }\n  return this.__compiled__[schema.toLowerCase()].validate(text, pos, this);\n};\n\n\n/**\n * LinkifyIt#match(text) -> Array|null\n *\n * Returns array of found link descriptions or `null` on fail. We strongly\n * recommend to use [[LinkifyIt#test]] first, for best speed.\n *\n * ##### Result match description\n *\n * - __schema__ - link schema, can be empty for fuzzy links, or `//` for\n *   protocol-neutral  links.\n * - __index__ - offset of matched text\n * - __lastIndex__ - index of next char after mathch end\n * - __raw__ - matched text\n * - __text__ - normalized text\n * - __url__ - link, generated from matched text\n **/\nLinkifyIt.prototype.match = function match(text) {\n  var shift = 0, result = [];\n\n  // Try to take previous element from cache, if .test() called before\n  if (this.__index__ >= 0 && this.__text_cache__ === text) {\n    result.push(createMatch(this, shift));\n    shift = this.__last_index__;\n  }\n\n  // Cut head if cache was used\n  var tail = shift ? text.slice(shift) : text;\n\n  // Scan string until end reached\n  while (this.test(tail)) {\n    result.push(createMatch(this, shift));\n\n    tail = tail.slice(this.__last_index__);\n    shift += this.__last_index__;\n  }\n\n  if (result.length) {\n    return result;\n  }\n\n  return null;\n};\n\n\n/** chainable\n * LinkifyIt#tlds(list [, keepOld]) -> this\n * - list (Array): list of tlds\n * - keepOld (Boolean): merge with current list if `true` (`false` by default)\n *\n * Load (or merge) new tlds list. Those are user for fuzzy links (without prefix)\n * to avoid false positives. By default this algorythm used:\n *\n * - hostname with any 2-letter root zones are ok.\n * - biz|com|edu|gov|net|org|pro|web|xxx|aero|asia|coop|info|museum|name|shop|рф\n *   are ok.\n * - encoded (`xn--...`) root zones are ok.\n *\n * If list is replaced, then exact match for 2-chars root zones will be checked.\n **/\nLinkifyIt.prototype.tlds = function tlds(list, keepOld) {\n  list = Array.isArray(list) ? list : [ list ];\n\n  if (!keepOld) {\n    this.__tlds__ = list.slice();\n    this.__tlds_replaced__ = true;\n    compile(this);\n    return this;\n  }\n\n  this.__tlds__ = this.__tlds__.concat(list)\n                                  .sort()\n                                  .filter(function (el, idx, arr) {\n                                    return el !== arr[idx - 1];\n                                  })\n                                  .reverse();\n\n  compile(this);\n  return this;\n};\n\n/**\n * LinkifyIt#normalize(match)\n *\n * Default normalizer (if schema does not define it's own).\n **/\nLinkifyIt.prototype.normalize = function normalize(match) {\n\n  // Do minimal possible changes by default. Need to collect feedback prior\n  // to move forward https://github.com/markdown-it/linkify-it/issues/1\n\n  if (!match.schema) { match.url = 'http://' + match.url; }\n\n  if (match.schema === 'mailto:' && !/^mailto:/i.test(match.url)) {\n    match.url = 'mailto:' + match.url;\n  }\n};\n\n\n/**\n * LinkifyIt#onCompile()\n *\n * Override to modify basic RegExp-s.\n **/\nLinkifyIt.prototype.onCompile = function onCompile() {\n};\n\n\nmodule.exports = LinkifyIt;\n","// Horizontal rule\n\n'use strict';\n\nvar isSpace = require('../common/utils').isSpace;\n\n\nmodule.exports = function hr(state, startLine, endLine, silent) {\n  var marker, cnt, ch, token,\n      pos = state.bMarks[startLine] + state.tShift[startLine],\n      max = state.eMarks[startLine];\n\n  // if it's indented more than 3 spaces, it should be a code block\n  if (state.sCount[startLine] - state.blkIndent >= 4) { return false; }\n\n  marker = state.src.charCodeAt(pos++);\n\n  // Check hr marker\n  if (marker !== 0x2A/* * */ &&\n      marker !== 0x2D/* - */ &&\n      marker !== 0x5F/* _ */) {\n    return false;\n  }\n\n  // markers can be mixed with spaces, but there should be at least 3 of them\n\n  cnt = 1;\n  while (pos < max) {\n    ch = state.src.charCodeAt(pos++);\n    if (ch !== marker && !isSpace(ch)) { return false; }\n    if (ch === marker) { cnt++; }\n  }\n\n  if (cnt < 3) { return false; }\n\n  if (silent) { return true; }\n\n  state.line = startLine + 1;\n\n  token        = state.push('hr', 'hr', 0);\n  token.map    = [ startLine, state.line ];\n  token.markup = Array(cnt + 1).join(String.fromCharCode(marker));\n\n  return true;\n};\n"],"sourceRoot":""}